/* eslint-disable no-nested-ternary */
import moment from 'moment-timezone';
import React from 'react';
import { createSvgIcon } from '@mui/material';
import LoadStopComponents from '@/@core/ui-kits/loads/load-stop-time/components/LoadStopComponents';
import { useManifestTruckRoute } from '@/store/streams/events/hooks';
import StopsComponents from '@/@core/ui-kits/loads/load-stop/StopsComponents';

type Props = {
    truck_id: string;
    stop_id: string;
};

const LateCalendarIcon = createSvgIcon(
    <svg
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
    >
        <path
            d="M4.66671 1.3335C5.0349 1.3335 5.33338 1.63197 5.33338 2.00016V2.66683H10.6667V2.00016C10.6667 1.63197 10.9652 1.3335 11.3334 1.3335C11.7016 1.3335 12 1.63197 12 2.00016V2.66685C12.3061 2.66703 12.5729 2.66892 12.7967 2.68721C13.0603 2.70874 13.3224 2.75629 13.5747 2.88482C13.951 3.07656 14.257 3.38252 14.4487 3.75885C14.5773 4.0111 14.6248 4.27325 14.6463 4.53681C14.6646 4.76066 14.6665 5.02747 14.6667 5.3335H1.3334C1.33358 5.02747 1.33547 4.76066 1.35376 4.53681C1.37529 4.27325 1.42283 4.0111 1.55136 3.75885C1.74311 3.38252 2.04907 3.07656 2.4254 2.88482C2.67765 2.75629 2.9398 2.70874 3.20336 2.68721C3.42721 2.66892 3.69402 2.66703 4.00004 2.66685V2.00016C4.00004 1.63197 4.29852 1.3335 4.66671 1.3335Z"
            fill="#FF4C51"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M1.33337 6.66683H14.6667V11.8925C14.6667 12.244 14.6667 12.5471 14.6463 12.7968C14.6248 13.0604 14.5773 13.3226 14.4487 13.5748C14.257 13.9511 13.951 14.2571 13.5747 14.4488C13.3224 14.5774 13.0603 14.6249 12.7967 14.6465C12.547 14.6669 12.2438 14.6668 11.8924 14.6668H4.10767C3.75624 14.6668 3.45307 14.6669 3.20336 14.6465C2.9398 14.6249 2.67765 14.5774 2.4254 14.4488C2.04907 14.2571 1.74311 13.9511 1.55136 13.5748C1.42283 13.3226 1.37529 13.0604 1.35376 12.7968C1.33336 12.5472 1.33336 12.244 1.33337 11.8926V6.66683ZM7.13811 8.86209C6.87776 8.60174 6.45565 8.60174 6.1953 8.86209C5.93495 9.12244 5.93495 9.54455 6.1953 9.8049L7.05723 10.6668L6.1953 11.5288C5.93495 11.7891 5.93495 12.2112 6.1953 12.4716C6.45565 12.7319 6.87776 12.7319 7.13811 12.4716L8.00004 11.6096L8.86197 12.4716C9.12232 12.7319 9.54443 12.7319 9.80478 12.4716C10.0651 12.2112 10.0651 11.7891 9.80478 11.5288L8.94285 10.6668L9.80478 9.8049C10.0651 9.54455 10.0651 9.12244 9.80478 8.86209C9.54443 8.60174 9.12232 8.60174 8.86197 8.86209L8.00004 9.72402L7.13811 8.86209Z"
            fill="#FF4C51"
        />
    </svg>,
    'LateCalendarIcon'
);

const EarlyIcon = createSvgIcon(
    <svg
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
    >
        <path
            d="M4.66634 1.3335C5.03453 1.3335 5.33301 1.63197 5.33301 2.00016V2.66683H10.6663V2.00016C10.6663 1.63197 10.9648 1.3335 11.333 1.3335C11.7012 1.3335 11.9997 1.63197 11.9997 2.00016V2.66685C12.3057 2.66703 12.5725 2.66892 12.7964 2.68721C13.0599 2.70874 13.3221 2.75629 13.5743 2.88482C13.9506 3.07656 14.2566 3.38252 14.4484 3.75885C14.5769 4.0111 14.6244 4.27325 14.646 4.53681C14.6643 4.76066 14.6661 5.02747 14.6663 5.3335H1.33303C1.33321 5.02747 1.3351 4.76066 1.35339 4.53681C1.37492 4.27325 1.42247 4.0111 1.551 3.75885C1.74274 3.38252 2.0487 3.07656 2.42503 2.88482C2.67728 2.75629 2.93943 2.70874 3.20299 2.68721C3.42684 2.66892 3.69365 2.66703 3.99968 2.66685V2.00016C3.99968 1.63197 4.29815 1.3335 4.66634 1.3335Z"
            fill="#13B76B"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M1.33301 6.66683H14.6663V11.8925C14.6664 12.244 14.6664 12.5471 14.646 12.7968C14.6244 13.0604 14.5769 13.3226 14.4484 13.5748C14.2566 13.9511 13.9506 14.2571 13.5743 14.4488C13.3221 14.5774 13.0599 14.6249 12.7964 14.6465C12.5466 14.6669 12.2435 14.6668 11.8921 14.6668H4.1073C3.75587 14.6668 3.4527 14.6669 3.20299 14.6465C2.93943 14.6249 2.67728 14.5774 2.42503 14.4488C2.04871 14.2571 1.74274 13.9511 1.551 13.5748C1.42247 13.3226 1.37492 13.0604 1.35339 12.7968C1.33299 12.5471 1.333 12.244 1.33301 11.8926V6.66683ZM10.4711 9.13823C10.7314 8.87788 10.7314 8.45577 10.4711 8.19543C10.2107 7.93508 9.78862 7.93508 9.52827 8.19543L7.33301 10.3907L6.47108 9.52876C6.21073 9.26841 5.78862 9.26841 5.52827 9.52876C5.26792 9.78911 5.26792 10.2112 5.52827 10.4716L6.8616 11.8049C7.12195 12.0653 7.54406 12.0653 7.80441 11.8049L10.4711 9.13823Z"
            fill="#13B76B"
        />
    </svg>,
    'EarlyCalendarIcon'
);

export default function StopArrivesTime({
    truck_id,
    stop_id
}: Props) {
    const truck_route = useManifestTruckRoute(truck_id);
    const load_next_eta = truck_route?.find((s) => s.localeStopId === stop_id);
    if (!load_next_eta) {
        return null;
    }

    const isLate = load_next_eta.lateness >= 0 && load_next_eta.earliness === 0;

    return (
        <>
            <LoadStopComponents.Button
                disabled
                startIcon={isLate ? <LateCalendarIcon /> : <EarlyIcon />}
                color={isLate ? 'error' : 'success'}
            >
                <LoadStopComponents.TextWrapper>
                    <LoadStopComponents.Text>
                        {moment(load_next_eta.arrivesAt).format('MMM DD')}
                    </LoadStopComponents.Text>

                    <LoadStopComponents.Text textColor={isLate ? 'error' : 'success'}>
                        {moment(load_next_eta.arrivesAt).format('H:mm')}
                    </LoadStopComponents.Text>
                </LoadStopComponents.TextWrapper>
            </LoadStopComponents.Button>
            <StopsComponents.StopItemTimeDivider />
        </>
    );
}
