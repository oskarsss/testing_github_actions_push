import * as React from 'react';
import { useAppDispatch } from '@/store/hooks';
import { updateFilters } from '@/store/filters/actions';
import FallbackContent from '@/@core/ui-kits/basic/fallback-content/FallbackContent';
import { ComponentProps } from 'react';
import LoadDraftsGrpcService from '@/@grpcServices/services/loads-drafts-service/load-drafts.service';
import { useNewLoadsDialog } from '@/views/new-loads/NewLoads';
import type { IntlMessageKey } from '@/@types/next-intl';
import { useUpdateFilters } from '@/hooks/useAdvancedUpdateFilters';
import useUpdateSearchFilters from '@/hooks/search-params-filters/useUpdateSearchFilters';

type GetText = (is_empty_filters: boolean) => {
    first_title: IntlMessageKey;
    second_title: IntlMessageKey;
    text_btn: IntlMessageKey;
    desc: IntlMessageKey;
};

const getText: GetText = (is_empty_filters) => {
    if (is_empty_filters) {
        return {
            first_title : 'core:loads_empty_state.filter_empty_state.first_title',
            second_title: 'core:loads_empty_state.filter_empty_state.second_title',
            text_btn    : 'core:loads_empty_state.filter_empty_state.text_btn',
            desc        : 'core:loads_empty_state.filter_empty_state.description'
        };
    }

    return {
        first_title : 'core:loads_empty_state.empty_state.first_title',
        second_title: '',
        text_btn    : 'core:loads_empty_state.empty_state.text_btn',
        desc        : 'core:loads_empty_state.empty_state.description'
    };
};

const emptyLoadsWithFilters = (
    <svg
        width="161"
        height="160"
        viewBox="0 0 161 160"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
    >
        <path
            d="M65.4845 116.447C63.1924 116.447 60.9518 117.137 59.046 118.431C57.1402 119.725 55.6548 121.565 54.7777 123.716C53.9005 125.868 53.671 128.236 54.1182 130.521C54.5654 132.805 55.6691 134.904 57.2898 136.551C58.9106 138.198 60.9755 139.319 63.2236 139.774C65.4716 140.228 67.8018 139.995 69.9194 139.103C72.037 138.212 73.8469 136.703 75.1203 134.766C76.3937 132.829 77.0734 130.552 77.0734 128.223C77.0734 125.1 75.8524 122.104 73.6791 119.896C71.5057 117.687 68.558 116.447 65.4845 116.447ZM65.4845 133.57C64.0944 133.552 62.766 132.984 61.783 131.985C60.8 130.986 60.2401 129.636 60.2228 128.223C60.2403 126.817 60.8024 125.474 61.7873 124.486C62.7721 123.498 64.1005 122.944 65.4845 122.944C66.1667 122.944 66.8422 123.081 67.4725 123.346C68.1028 123.611 68.6755 124 69.1579 124.49C69.6403 124.98 70.023 125.562 70.2841 126.203C70.5451 126.843 70.6795 127.53 70.6795 128.223C70.6796 129.63 70.1344 130.979 69.162 131.98C68.1896 132.981 66.8684 133.552 65.4845 133.57Z"
            fill="#585F83"
        />
        <path
            d="M121.629 116.447C119.337 116.447 117.097 117.137 115.191 118.431C113.285 119.725 111.8 121.565 110.923 123.716C110.046 125.868 109.816 128.236 110.263 130.521C110.71 132.805 111.814 134.904 113.435 136.551C115.056 138.198 117.121 139.319 119.369 139.774C121.617 140.228 123.947 139.995 126.064 139.103C128.182 138.212 129.992 136.703 131.265 134.766C132.539 132.829 133.218 130.552 133.218 128.223C133.218 125.1 131.997 122.104 129.824 119.896C127.651 117.687 124.703 116.447 121.629 116.447ZM121.629 133.57C120.246 133.552 118.924 132.981 117.952 131.98C116.98 130.979 116.434 129.63 116.434 128.223C116.58 126.917 117.193 125.712 118.157 124.836C119.122 123.961 120.37 123.477 121.663 123.477C122.956 123.477 124.204 123.961 125.168 124.836C126.133 125.712 126.746 126.917 126.891 128.223C126.891 129.641 126.337 131.001 125.35 132.004C124.363 133.007 123.025 133.57 121.629 133.57Z"
            fill="#585F83"
        />
        <path
            d="M36.7787 116.446C34.476 116.392 32.2098 117.037 30.2693 118.298C28.3288 119.559 26.802 121.379 25.8839 123.525C24.9657 125.672 24.6979 128.048 25.1145 130.35C25.5311 132.652 26.6133 134.775 28.2229 136.449C29.8326 138.124 31.8966 139.272 34.1516 139.749C36.4066 140.226 38.7503 140.009 40.8835 139.126C43.0166 138.243 44.8425 136.735 46.1281 134.793C47.4137 132.851 48.1006 130.563 48.1013 128.223C48.1021 125.146 46.9177 122.19 44.8017 119.99C42.6856 117.789 39.8059 116.517 36.7787 116.446ZM36.7787 133.569C35.3948 133.552 34.0735 132.981 33.1011 131.98C32.1288 130.979 31.5836 129.629 31.5837 128.223C31.5837 127.529 31.718 126.843 31.9791 126.202C32.2402 125.562 32.6229 124.98 33.1053 124.49C33.5877 123.999 34.1604 123.611 34.7907 123.345C35.4209 123.08 36.0965 122.943 36.7787 122.943C38.1627 122.943 39.4911 123.497 40.4759 124.485C41.4608 125.474 42.0228 126.816 42.0404 128.223C42.0231 129.635 41.4632 130.985 40.4802 131.984C39.4971 132.983 38.1688 133.552 36.7787 133.569Z"
            fill="#585F83"
        />
        <path
            d="M147.073 61.6927L131.621 45.5167C130.081 43.8781 128.231 42.5721 126.182 41.6766C124.134 40.7812 121.929 40.3147 119.699 40.3052H113.039V94.4507H150.003V68.7316C149.973 66.0854 148.921 63.5573 147.073 61.6927Z"
            fill="#585F83"
        />
        <path
            d="M14.0001 101.218C12.9402 101.218 11.9238 101.646 11.1744 102.408C10.4249 103.169 10.0039 104.202 10.0039 105.279V121.387C10.0039 124.08 11.0565 126.662 12.93 128.566C14.8036 130.47 17.3447 131.54 19.9944 131.54H21.9925C21.757 130.427 21.6232 129.294 21.5929 128.156C21.5609 127.615 21.5609 127.072 21.5929 126.531C21.5602 125.945 21.5602 125.358 21.5929 124.771C22.3366 121.432 24.1756 118.449 26.808 116.311C29.4403 114.174 32.7096 113.01 36.0791 113.01C39.4485 113.01 42.7178 114.174 45.3501 116.311C47.9825 118.449 49.8215 121.432 50.5652 124.771C51.3378 121.448 53.1919 118.487 55.8271 116.368C58.4623 114.249 61.7243 113.096 65.0847 113.096C68.4452 113.096 71.7072 114.249 74.3424 116.368C76.9776 118.487 78.8317 121.448 79.6042 124.771C79.6369 125.358 79.6369 125.945 79.6042 126.531C79.6362 127.072 79.6362 127.615 79.6042 128.156C79.5739 129.294 79.4401 130.427 79.2046 131.54H108.11C107.842 130.432 107.708 129.296 107.711 128.156C107.678 127.615 107.678 127.072 107.711 126.531C107.679 125.945 107.679 125.358 107.711 124.771C108.454 121.432 110.294 118.449 112.926 116.311C115.558 114.174 118.828 113.01 122.197 113.01C125.566 113.01 128.836 114.174 131.468 116.311C134.1 118.449 135.939 121.432 136.683 124.771C136.715 125.358 136.715 125.945 136.683 126.531C136.716 127.072 136.716 127.615 136.683 128.156C136.686 129.296 136.552 130.432 136.284 131.54H138.282C140.931 131.54 143.472 130.47 145.346 128.566C147.22 126.662 148.272 124.08 148.272 121.387V101.083L14.0001 101.218Z"
            fill="#C6D3E3"
        />
        <path
            d="M96.7212 20H14.0001C13.4753 20 12.9557 20.105 12.4708 20.3091C11.986 20.5132 11.5454 20.8123 11.1744 21.1894C10.8033 21.5665 10.5089 22.0142 10.3081 22.5069C10.1073 22.9996 10.0039 23.5276 10.0039 24.0609V90.5245C10.0039 91.6016 10.4249 92.6345 11.1744 93.396C11.9238 94.1576 12.9402 94.5855 14.0001 94.5855H106.645V30.1523C106.645 27.4714 105.602 24.8993 103.743 22.9974C101.883 21.0954 99.3593 20.0179 96.7212 20Z"
            fill="#585F83"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M68.7539 65C70.825 65 72.5039 66.6789 72.5039 68.75V78.75C72.5039 80.8211 70.825 82.5 68.7539 82.5C66.6828 82.5 65.0039 80.8211 65.0039 78.75V68.75C65.0039 66.6789 66.6828 65 68.7539 65Z"
            fill="#F4F5FA"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M48.7539 40C50.825 40 52.5039 41.6789 52.5039 43.75V53.75C52.5039 55.8211 50.825 57.5 48.7539 57.5C46.6828 57.5 45.0039 55.8211 45.0039 53.75V43.75C45.0039 41.6789 46.6828 40 48.7539 40Z"
            fill="#F4F5FA"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M35.0039 73.75C35.0039 71.6789 36.6828 70 38.7539 70H58.7539C60.825 70 62.5039 71.6789 62.5039 73.75C62.5039 75.8211 60.825 77.5 58.7539 77.5H38.7539C36.6828 77.5 35.0039 75.8211 35.0039 73.75Z"
            fill="#F4F5FA"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M65.0039 73.75C65.0039 71.6789 66.6828 70 68.7539 70H78.7539C80.825 70 82.5039 71.6789 82.5039 73.75C82.5039 75.8211 80.825 77.5 78.7539 77.5H68.7539C66.6828 77.5 65.0039 75.8211 65.0039 73.75Z"
            fill="#F4F5FA"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M55.0039 48.75C55.0039 46.6789 56.6828 45 58.7539 45H78.7539C80.825 45 82.5039 46.6789 82.5039 48.75C82.5039 50.8211 80.825 52.5 78.7539 52.5H58.7539C56.6828 52.5 55.0039 50.8211 55.0039 48.75Z"
            fill="#F4F5FA"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M35.0039 48.75C35.0039 46.6789 36.6828 45 38.7539 45H48.7539C50.825 45 52.5039 46.6789 52.5039 48.75C52.5039 50.8211 50.825 52.5 48.7539 52.5H38.7539C36.6828 52.5 35.0039 50.8211 35.0039 48.75Z"
            fill="#F4F5FA"
        />
    </svg>
);

const emptyLoadsWithoutFilters = (
    <svg
        width="160"
        height="160"
        viewBox="0 0 160 160"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
    >
        <path
            d="M65.4806 116.447C63.1885 116.447 60.9479 117.137 59.0421 118.431C57.1363 119.725 55.6509 121.565 54.7738 123.716C53.8966 125.868 53.6671 128.236 54.1143 130.521C54.5614 132.805 55.6652 134.904 57.2859 136.551C58.9067 138.198 60.9716 139.319 63.2197 139.774C65.4677 140.228 67.7979 139.995 69.9155 139.103C72.0331 138.212 73.843 136.703 75.1164 134.766C76.3898 132.829 77.0695 130.552 77.0695 128.223C77.0695 125.1 75.8485 122.104 73.6752 119.896C71.5018 117.687 68.5541 116.447 65.4806 116.447ZM65.4806 133.57C64.0905 133.552 62.7621 132.984 61.7791 131.985C60.7961 130.986 60.2362 129.636 60.2189 128.223C60.2364 126.817 60.7985 125.474 61.7834 124.486C62.7682 123.498 64.0965 122.944 65.4806 122.944C66.1628 122.944 66.8383 123.081 67.4686 123.346C68.0989 123.611 68.6716 124 69.154 124.49C69.6364 124.98 70.0191 125.562 70.2802 126.203C70.5412 126.843 70.6756 127.53 70.6756 128.223C70.6757 129.63 70.1305 130.979 69.1581 131.98C68.1857 132.981 66.8645 133.552 65.4806 133.57Z"
            fill="#585F83"
        />
        <path
            d="M121.626 116.447C119.333 116.447 117.093 117.137 115.187 118.431C113.281 119.725 111.796 121.565 110.919 123.716C110.042 125.868 109.812 128.236 110.259 130.521C110.706 132.805 111.81 134.904 113.431 136.551C115.052 138.198 117.117 139.319 119.365 139.774C121.613 140.228 123.943 139.995 126.06 139.103C128.178 138.212 129.988 136.703 131.261 134.766C132.535 132.829 133.215 130.552 133.215 128.223C133.215 125.1 131.994 122.104 129.82 119.896C127.647 117.687 124.699 116.447 121.626 116.447ZM121.626 133.57C120.242 133.552 118.92 132.981 117.948 131.98C116.976 130.979 116.43 129.63 116.431 128.223C116.576 126.917 117.189 125.712 118.154 124.836C119.118 123.961 120.366 123.477 121.659 123.477C122.952 123.477 124.2 123.961 125.164 124.836C126.129 125.712 126.742 126.917 126.887 128.223C126.887 129.641 126.333 131.001 125.346 132.004C124.359 133.007 123.021 133.57 121.626 133.57Z"
            fill="#585F83"
        />
        <path
            d="M36.7748 116.446C34.4721 116.392 32.2059 117.037 30.2654 118.298C28.3249 119.559 26.7981 121.379 25.88 123.525C24.9618 125.672 24.694 128.048 25.1106 130.35C25.5272 132.652 26.6094 134.775 28.219 136.449C29.8287 138.124 31.8927 139.272 34.1477 139.749C36.4027 140.226 38.7464 140.009 40.8796 139.126C43.0127 138.243 44.8386 136.735 46.1242 134.793C47.4098 132.851 48.0967 130.563 48.0973 128.223C48.0981 125.146 46.9138 122.19 44.7977 119.99C42.6817 117.789 39.802 116.517 36.7748 116.446ZM36.7748 133.569C35.3909 133.552 34.0696 132.981 33.0972 131.98C32.1248 130.979 31.5796 129.629 31.5798 128.223C31.5798 127.529 31.7141 126.843 31.9752 126.202C32.2363 125.562 32.6189 124.98 33.1014 124.49C33.5838 123.999 34.1565 123.611 34.7867 123.345C35.417 123.08 36.0926 122.943 36.7748 122.943C38.1588 122.943 39.4871 123.497 40.472 124.485C41.4569 125.474 42.0189 126.816 42.0365 128.223C42.0192 129.635 41.4593 130.985 40.4763 131.984C39.4932 132.983 38.1649 133.552 36.7748 133.569Z"
            fill="#585F83"
        />
        <path
            d="M147.069 61.6927L131.617 45.5167C130.077 43.8781 128.227 42.5721 126.178 41.6766C124.13 40.7812 121.925 40.3147 119.695 40.3052H113.035V94.4507H149.999V68.7316C149.969 66.0854 148.917 63.5573 147.069 61.6927Z"
            fill="#585F83"
        />
        <path
            d="M13.9962 101.218C12.9363 101.218 11.9199 101.646 11.1705 102.408C10.421 103.169 10 104.202 10 105.279V121.387C10 124.08 11.0526 126.662 12.9261 128.566C14.7997 130.47 17.3408 131.54 19.9905 131.54H21.9886C21.753 130.427 21.6193 129.294 21.589 128.156C21.557 127.615 21.557 127.072 21.589 126.531C21.5563 125.945 21.5563 125.358 21.589 124.771C22.3327 121.432 24.1717 118.449 26.8041 116.311C29.4364 114.174 32.7057 113.01 36.0751 113.01C39.4446 113.01 42.7139 114.174 45.3462 116.311C47.9786 118.449 49.8176 121.432 50.5613 124.771C51.3339 121.448 53.188 118.487 55.8232 116.368C58.4584 114.249 61.7204 113.096 65.0808 113.096C68.4413 113.096 71.7033 114.249 74.3385 116.368C76.9737 118.487 78.8278 121.448 79.6003 124.771C79.633 125.358 79.633 125.945 79.6003 126.531C79.6323 127.072 79.6323 127.615 79.6003 128.156C79.57 129.294 79.4362 130.427 79.2007 131.54H108.106C107.838 130.432 107.704 129.296 107.707 128.156C107.674 127.615 107.674 127.072 107.707 126.531C107.675 125.945 107.675 125.358 107.707 124.771C108.451 121.432 110.29 118.449 112.922 116.311C115.554 114.174 118.824 113.01 122.193 113.01C125.562 113.01 128.832 114.174 131.464 116.311C134.097 118.449 135.936 121.432 136.679 124.771C136.711 125.358 136.711 125.945 136.679 126.531C136.712 127.072 136.712 127.615 136.679 128.156C136.682 129.296 136.548 130.432 136.28 131.54H138.278C140.927 131.54 143.468 130.47 145.342 128.566C147.216 126.662 148.268 124.08 148.268 121.387V101.083L13.9962 101.218Z"
            fill="#C6D3E3"
        />
        <path
            d="M96.7173 20H13.9962C13.4714 20 12.9518 20.105 12.4669 20.3091C11.9821 20.5132 11.5415 20.8123 11.1705 21.1894C10.7994 21.5665 10.505 22.0142 10.3042 22.5069C10.1034 22.9996 10 23.5276 10 24.0609V90.5245C10 91.6016 10.421 92.6345 11.1705 93.396C11.9199 94.1576 12.9363 94.5855 13.9962 94.5855H106.641V30.1523C106.641 27.4714 105.598 24.8993 103.739 22.9974C101.879 21.0954 99.3554 20.0179 96.7173 20Z"
            fill="#585F83"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M63.2333 46.5C57.9498 46.5 53.6667 50.6787 53.6667 55.8333C53.6667 60.988 57.9498 65.1667 63.2333 65.1667C68.5169 65.1667 72.8 60.988 72.8 55.8333C72.8 50.6787 68.5169 46.5 63.2333 46.5ZM45.4667 55.8333C45.4667 46.2604 53.4211 38.5 63.2333 38.5C73.0456 38.5 81 46.2604 81 55.8333C81 65.4063 73.0456 73.1667 63.2333 73.1667C59.8126 73.1667 56.6177 72.2235 53.9068 70.5892L46.9991 77.3284C45.398 78.8905 42.802 78.8905 41.2009 77.3284C39.5997 75.7663 39.5997 73.2337 41.2009 71.6716L48.1086 64.9324C46.4334 62.2876 45.4667 59.1706 45.4667 55.8333Z"
            fill="#F4F5FA"
        />
    </svg>
);

type Props = {
    filter_id: string;
    is_empty_filters: boolean;
    default_filters: Record<string, any>;
    styles?: React.CSSProperties;
    size?: ComponentProps<typeof FallbackContent>['size'];
    onClearFilters?: () => void;
    updateType?: 'search' | 'redux';
};

export default function EmptyState({
    filter_id,
    is_empty_filters,
    default_filters,
    styles = {},
    size = 'large',
    onClearFilters,
    updateType = 'redux'
}: Props) {
    const [createDraft] = LoadDraftsGrpcService.useCreateDraftMutation();
    const newLoadsDialog = useNewLoadsDialog();
    const dispatch = useAppDispatch();

    const updateSearchFilters = useUpdateSearchFilters(default_filters);

    const icon = is_empty_filters ? emptyLoadsWithFilters : emptyLoadsWithoutFilters;
    const text = getText(is_empty_filters);

    const click = () => {
        if (is_empty_filters) {
            createDraft(true);
            newLoadsDialog.open({});
            return;
        }
        if (onClearFilters) {
            onClearFilters();
        }
        if (updateType === 'search') {
            updateSearchFilters(default_filters);
            return;
        }
        dispatch(updateFilters(filter_id, { ...default_filters }));
    };

    return (
        <FallbackContent
            size={size}
            onClick={click}
            icon={icon}
            firstText={text.first_title}
            buttonText={text.text_btn}
            textAfterButton={text.second_title}
            secondText={text.desc}
            styles={styles}
        />
    );
}
