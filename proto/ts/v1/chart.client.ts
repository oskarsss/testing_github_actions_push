// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/chart.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ChartService } from "./chart";
import type { ChartAgingReportRetrieveReply } from "./chart";
import type { ChartAgingReportRetrieveRequest } from "./chart";
import type { ChartTopDebtorsGetReply } from "./chart";
import type { ChartTopDebtorsGetRequest } from "./chart";
import type { ChartTotalOrdersGetReply } from "./chart";
import type { ChartTotalOrdersGetRequest } from "./chart";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ChartTotalUnpaidRetrieveReply } from "./chart";
import type { ChartTotalUnpaidRetrieveRequest } from "./chart";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ChartService
 */
export interface IChartServiceClient {
    /**
     * @generated from protobuf rpc: ChartTotalUnpaidRetrieve(ChartTotalUnpaidRetrieveRequest) returns (ChartTotalUnpaidRetrieveReply);
     */
    chartTotalUnpaidRetrieve(input: ChartTotalUnpaidRetrieveRequest, options?: RpcOptions): UnaryCall<ChartTotalUnpaidRetrieveRequest, ChartTotalUnpaidRetrieveReply>;
    /**
     * @generated from protobuf rpc: ChartTotalOrdersGet(ChartTotalOrdersGetRequest) returns (ChartTotalOrdersGetReply);
     */
    chartTotalOrdersGet(input: ChartTotalOrdersGetRequest, options?: RpcOptions): UnaryCall<ChartTotalOrdersGetRequest, ChartTotalOrdersGetReply>;
    /**
     * @generated from protobuf rpc: ChartTopDebtorsGet(ChartTopDebtorsGetRequest) returns (ChartTopDebtorsGetReply);
     */
    chartTopDebtorsGet(input: ChartTopDebtorsGetRequest, options?: RpcOptions): UnaryCall<ChartTopDebtorsGetRequest, ChartTopDebtorsGetReply>;
    /**
     * @generated from protobuf rpc: ChartAgingReportRetrieve(ChartAgingReportRetrieveRequest) returns (ChartAgingReportRetrieveReply);
     */
    chartAgingReportRetrieve(input: ChartAgingReportRetrieveRequest, options?: RpcOptions): UnaryCall<ChartAgingReportRetrieveRequest, ChartAgingReportRetrieveReply>;
}
/**
 * @generated from protobuf service ChartService
 */
export class ChartServiceClient implements IChartServiceClient, ServiceInfo {
    typeName = ChartService.typeName;
    methods = ChartService.methods;
    options = ChartService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ChartTotalUnpaidRetrieve(ChartTotalUnpaidRetrieveRequest) returns (ChartTotalUnpaidRetrieveReply);
     */
    chartTotalUnpaidRetrieve(input: ChartTotalUnpaidRetrieveRequest, options?: RpcOptions): UnaryCall<ChartTotalUnpaidRetrieveRequest, ChartTotalUnpaidRetrieveReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChartTotalUnpaidRetrieveRequest, ChartTotalUnpaidRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChartTotalOrdersGet(ChartTotalOrdersGetRequest) returns (ChartTotalOrdersGetReply);
     */
    chartTotalOrdersGet(input: ChartTotalOrdersGetRequest, options?: RpcOptions): UnaryCall<ChartTotalOrdersGetRequest, ChartTotalOrdersGetReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChartTotalOrdersGetRequest, ChartTotalOrdersGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChartTopDebtorsGet(ChartTopDebtorsGetRequest) returns (ChartTopDebtorsGetReply);
     */
    chartTopDebtorsGet(input: ChartTopDebtorsGetRequest, options?: RpcOptions): UnaryCall<ChartTopDebtorsGetRequest, ChartTopDebtorsGetReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChartTopDebtorsGetRequest, ChartTopDebtorsGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChartAgingReportRetrieve(ChartAgingReportRetrieveRequest) returns (ChartAgingReportRetrieveReply);
     */
    chartAgingReportRetrieve(input: ChartAgingReportRetrieveRequest, options?: RpcOptions): UnaryCall<ChartAgingReportRetrieveRequest, ChartAgingReportRetrieveReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChartAgingReportRetrieveRequest, ChartAgingReportRetrieveReply>("unary", this._transport, method, opt, input);
    }
}
