// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/load_drafts.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LoadDraftsService } from "./load_drafts";
import type { CancelExtractReply } from "./load_drafts";
import type { CancelExtractRequest } from "./load_drafts";
import type { StartExtractReply } from "./load_drafts";
import type { StartExtractRequest } from "./load_drafts";
import type { LoadDraftCreateLoadReply } from "./load_drafts";
import type { LoadDraftCreateLoadRequest } from "./load_drafts";
import type { LoadDraftsDeleteAllReply } from "./load_drafts";
import type { LoadDraftsDeleteAllRequest } from "./load_drafts";
import type { LoadDraftCheckDuplicateReply } from "./load_drafts";
import type { LoadDraftCheckDuplicateRequest } from "./load_drafts";
import type { LoadDraftDeleteReply } from "./load_drafts";
import type { LoadDraftDeleteRequest } from "./load_drafts";
import type { LoadDraftUpdateReply } from "./load_drafts";
import type { LoadDraftUpdateRequest } from "./load_drafts";
import type { LoadDraftRetrieveReply } from "./load_drafts";
import type { LoadDraftRetrieveRequest } from "./load_drafts";
import type { LoadDraftCreateFromLoadReply } from "./load_drafts";
import type { LoadDraftCreateFromLoadRequest } from "./load_drafts";
import type { LoadDraftCreateReply } from "./load_drafts";
import type { LoadDraftCreateRequest } from "./load_drafts";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoadDraftsGetReply } from "./load_drafts";
import type { LoadDraftsGetRequest } from "./load_drafts";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service LoadDraftsService
 */
export interface ILoadDraftsServiceClient {
    /**
     * @generated from protobuf rpc: LoadDraftsGet(LoadDraftsGetRequest) returns (LoadDraftsGetReply);
     */
    loadDraftsGet(input: LoadDraftsGetRequest, options?: RpcOptions): UnaryCall<LoadDraftsGetRequest, LoadDraftsGetReply>;
    /**
     * @generated from protobuf rpc: LoadDraftCreate(LoadDraftCreateRequest) returns (LoadDraftCreateReply);
     */
    loadDraftCreate(input: LoadDraftCreateRequest, options?: RpcOptions): UnaryCall<LoadDraftCreateRequest, LoadDraftCreateReply>;
    /**
     * @generated from protobuf rpc: LoadDraftCreateFromLoad(LoadDraftCreateFromLoadRequest) returns (LoadDraftCreateFromLoadReply);
     */
    loadDraftCreateFromLoad(input: LoadDraftCreateFromLoadRequest, options?: RpcOptions): UnaryCall<LoadDraftCreateFromLoadRequest, LoadDraftCreateFromLoadReply>;
    /**
     * @generated from protobuf rpc: LoadDraftRetrieve(LoadDraftRetrieveRequest) returns (LoadDraftRetrieveReply);
     */
    loadDraftRetrieve(input: LoadDraftRetrieveRequest, options?: RpcOptions): UnaryCall<LoadDraftRetrieveRequest, LoadDraftRetrieveReply>;
    /**
     * @generated from protobuf rpc: LoadDraftUpdate(LoadDraftUpdateRequest) returns (LoadDraftUpdateReply);
     */
    loadDraftUpdate(input: LoadDraftUpdateRequest, options?: RpcOptions): UnaryCall<LoadDraftUpdateRequest, LoadDraftUpdateReply>;
    /**
     * @generated from protobuf rpc: LoadDraftDelete(LoadDraftDeleteRequest) returns (LoadDraftDeleteReply);
     */
    loadDraftDelete(input: LoadDraftDeleteRequest, options?: RpcOptions): UnaryCall<LoadDraftDeleteRequest, LoadDraftDeleteReply>;
    /**
     * @generated from protobuf rpc: LoadDraftCheckDuplicate(LoadDraftCheckDuplicateRequest) returns (LoadDraftCheckDuplicateReply);
     */
    loadDraftCheckDuplicate(input: LoadDraftCheckDuplicateRequest, options?: RpcOptions): UnaryCall<LoadDraftCheckDuplicateRequest, LoadDraftCheckDuplicateReply>;
    /**
     * @generated from protobuf rpc: LoadDraftsDeleteAll(LoadDraftsDeleteAllRequest) returns (LoadDraftsDeleteAllReply);
     */
    loadDraftsDeleteAll(input: LoadDraftsDeleteAllRequest, options?: RpcOptions): UnaryCall<LoadDraftsDeleteAllRequest, LoadDraftsDeleteAllReply>;
    /**
     * @generated from protobuf rpc: LoadDraftCreateLoad(LoadDraftCreateLoadRequest) returns (LoadDraftCreateLoadReply);
     */
    loadDraftCreateLoad(input: LoadDraftCreateLoadRequest, options?: RpcOptions): UnaryCall<LoadDraftCreateLoadRequest, LoadDraftCreateLoadReply>;
    /**
     * @generated from protobuf rpc: StartExtract(StartExtractRequest) returns (StartExtractReply);
     */
    startExtract(input: StartExtractRequest, options?: RpcOptions): UnaryCall<StartExtractRequest, StartExtractReply>;
    /**
     * @generated from protobuf rpc: CancelExtract(CancelExtractRequest) returns (CancelExtractReply);
     */
    cancelExtract(input: CancelExtractRequest, options?: RpcOptions): UnaryCall<CancelExtractRequest, CancelExtractReply>;
}
/**
 * @generated from protobuf service LoadDraftsService
 */
export class LoadDraftsServiceClient implements ILoadDraftsServiceClient, ServiceInfo {
    typeName = LoadDraftsService.typeName;
    methods = LoadDraftsService.methods;
    options = LoadDraftsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: LoadDraftsGet(LoadDraftsGetRequest) returns (LoadDraftsGetReply);
     */
    loadDraftsGet(input: LoadDraftsGetRequest, options?: RpcOptions): UnaryCall<LoadDraftsGetRequest, LoadDraftsGetReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftsGetRequest, LoadDraftsGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDraftCreate(LoadDraftCreateRequest) returns (LoadDraftCreateReply);
     */
    loadDraftCreate(input: LoadDraftCreateRequest, options?: RpcOptions): UnaryCall<LoadDraftCreateRequest, LoadDraftCreateReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftCreateRequest, LoadDraftCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDraftCreateFromLoad(LoadDraftCreateFromLoadRequest) returns (LoadDraftCreateFromLoadReply);
     */
    loadDraftCreateFromLoad(input: LoadDraftCreateFromLoadRequest, options?: RpcOptions): UnaryCall<LoadDraftCreateFromLoadRequest, LoadDraftCreateFromLoadReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftCreateFromLoadRequest, LoadDraftCreateFromLoadReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDraftRetrieve(LoadDraftRetrieveRequest) returns (LoadDraftRetrieveReply);
     */
    loadDraftRetrieve(input: LoadDraftRetrieveRequest, options?: RpcOptions): UnaryCall<LoadDraftRetrieveRequest, LoadDraftRetrieveReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftRetrieveRequest, LoadDraftRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDraftUpdate(LoadDraftUpdateRequest) returns (LoadDraftUpdateReply);
     */
    loadDraftUpdate(input: LoadDraftUpdateRequest, options?: RpcOptions): UnaryCall<LoadDraftUpdateRequest, LoadDraftUpdateReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftUpdateRequest, LoadDraftUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDraftDelete(LoadDraftDeleteRequest) returns (LoadDraftDeleteReply);
     */
    loadDraftDelete(input: LoadDraftDeleteRequest, options?: RpcOptions): UnaryCall<LoadDraftDeleteRequest, LoadDraftDeleteReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftDeleteRequest, LoadDraftDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDraftCheckDuplicate(LoadDraftCheckDuplicateRequest) returns (LoadDraftCheckDuplicateReply);
     */
    loadDraftCheckDuplicate(input: LoadDraftCheckDuplicateRequest, options?: RpcOptions): UnaryCall<LoadDraftCheckDuplicateRequest, LoadDraftCheckDuplicateReply> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftCheckDuplicateRequest, LoadDraftCheckDuplicateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDraftsDeleteAll(LoadDraftsDeleteAllRequest) returns (LoadDraftsDeleteAllReply);
     */
    loadDraftsDeleteAll(input: LoadDraftsDeleteAllRequest, options?: RpcOptions): UnaryCall<LoadDraftsDeleteAllRequest, LoadDraftsDeleteAllReply> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftsDeleteAllRequest, LoadDraftsDeleteAllReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDraftCreateLoad(LoadDraftCreateLoadRequest) returns (LoadDraftCreateLoadReply);
     */
    loadDraftCreateLoad(input: LoadDraftCreateLoadRequest, options?: RpcOptions): UnaryCall<LoadDraftCreateLoadRequest, LoadDraftCreateLoadReply> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDraftCreateLoadRequest, LoadDraftCreateLoadReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: StartExtract(StartExtractRequest) returns (StartExtractReply);
     */
    startExtract(input: StartExtractRequest, options?: RpcOptions): UnaryCall<StartExtractRequest, StartExtractReply> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<StartExtractRequest, StartExtractReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CancelExtract(CancelExtractRequest) returns (CancelExtractReply);
     */
    cancelExtract(input: CancelExtractRequest, options?: RpcOptions): UnaryCall<CancelExtractRequest, CancelExtractReply> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<CancelExtractRequest, CancelExtractReply>("unary", this._transport, method, opt, input);
    }
}
