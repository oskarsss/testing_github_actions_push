// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/manifest_stops.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ManifestModel_LoadStop_Status } from "./models/model_manifest";
import { ManifestModel_ManifestStop_Status } from "./models/model_manifest";
import { ManifestModel_StopID } from "./models/model_manifest";
import { ManifestModel_Stop } from "./models/model_manifest";
import { ManifestModel_ManifestStop_Type } from "./models/model_manifest";
/**
 * @generated from protobuf message ManifestStopAddRequest
 */
export interface ManifestStopAddRequest {
    /**
     * @generated from protobuf field: string manifest_id = 1;
     */
    manifestId: string;
    /**
     * @generated from protobuf field: int64 sequence = 2;
     */
    sequence: number;
    /**
     * @generated from protobuf field: string note = 3;
     */
    note: string;
    /**
     * @generated from protobuf field: optional string appointment_start_at = 4;
     */
    appointmentStartAt?: string;
    /**
     * @generated from protobuf field: optional string appointment_end_at = 5;
     */
    appointmentEndAt?: string;
    /**
     * @generated from protobuf field: optional string arrived_at = 6;
     */
    arrivedAt?: string;
    /**
     * @generated from protobuf field: optional string checked_in_at = 7;
     */
    checkedInAt?: string;
    /**
     * @generated from protobuf field: optional string checked_out_at = 8;
     */
    checkedOutAt?: string;
    /**
     * @generated from protobuf field: optional string departed_at = 9;
     */
    departedAt?: string;
    /**
     * @generated from protobuf field: ManifestModel.ManifestStop.Type type = 10;
     */
    type: ManifestModel_ManifestStop_Type;
    /**
     * @generated from protobuf field: string reference_id = 11;
     */
    referenceId: string;
    /**
     * @generated from protobuf field: ManifestStopAddRequest.Location location = 12;
     */
    location?: ManifestStopAddRequest_Location;
}
/**
 * @generated from protobuf message ManifestStopAddRequest.Location
 */
export interface ManifestStopAddRequest_Location {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: double lat = 2;
     */
    lat: number;
    /**
     * @generated from protobuf field: double lon = 3;
     */
    lon: number;
    /**
     * @generated from protobuf field: string line_1 = 4;
     */
    line1: string;
    /**
     * @generated from protobuf field: optional string line_2 = 5;
     */
    line2?: string;
    /**
     * @generated from protobuf field: string city = 6;
     */
    city: string;
    /**
     * @generated from protobuf field: string state = 7;
     */
    state: string;
    /**
     * @generated from protobuf field: string postal_code = 8;
     */
    postalCode: string;
    /**
     * @generated from protobuf field: string address = 9;
     */
    address: string;
}
/**
 * @generated from protobuf message ManifestStopAddReply
 */
export interface ManifestStopAddReply {
    /**
     * @generated from protobuf field: ManifestModel.Stop stop = 1;
     */
    stop?: ManifestModel_Stop;
    /**
     * @generated from protobuf field: repeated ManifestModel.StopID stops_order = 2;
     */
    stopsOrder: ManifestModel_StopID[];
}
/**
 * @generated from protobuf message ManifestStopSequenceUpdateRequest
 */
export interface ManifestStopSequenceUpdateRequest {
    /**
     * @generated from protobuf field: string manifest_id = 1;
     */
    manifestId: string;
    /**
     * @generated from protobuf field: repeated ManifestModel.StopID new_stop_sequences = 2;
     */
    newStopSequences: ManifestModel_StopID[];
}
/**
 * @generated from protobuf message ManifestStopSequenceUpdateReply
 */
export interface ManifestStopSequenceUpdateReply {
}
/**
 * @generated from protobuf message ManifestStopUpdateRequest
 */
export interface ManifestStopUpdateRequest {
    /**
     * @generated from protobuf field: string manifest_id = 1;
     */
    manifestId: string;
    /**
     * @generated from protobuf field: string manifest_stop_id = 2;
     */
    manifestStopId: string;
    /**
     * @generated from protobuf field: string note = 3;
     */
    note: string;
    /**
     * @generated from protobuf field: optional string appointment_start_at = 4;
     */
    appointmentStartAt?: string;
    /**
     * @generated from protobuf field: optional string appointment_end_at = 5;
     */
    appointmentEndAt?: string;
    /**
     * @generated from protobuf field: optional string arrived_at = 6;
     */
    arrivedAt?: string;
    /**
     * @generated from protobuf field: optional string checked_in_at = 7;
     */
    checkedInAt?: string;
    /**
     * @generated from protobuf field: optional string checked_out_at = 8;
     */
    checkedOutAt?: string;
    /**
     * @generated from protobuf field: optional string departed_at = 9;
     */
    departedAt?: string;
    /**
     * @generated from protobuf field: ManifestModel.ManifestStop.Type type = 10;
     */
    type: ManifestModel_ManifestStop_Type;
    /**
     * @generated from protobuf field: string reference_id = 11;
     */
    referenceId: string;
    /**
     * @generated from protobuf field: ManifestStopUpdateRequest.Location location = 12;
     */
    location?: ManifestStopUpdateRequest_Location;
}
/**
 * @generated from protobuf message ManifestStopUpdateRequest.Location
 */
export interface ManifestStopUpdateRequest_Location {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: double lat = 2;
     */
    lat: number;
    /**
     * @generated from protobuf field: double lon = 3;
     */
    lon: number;
    /**
     * @generated from protobuf field: string line_1 = 4;
     */
    line1: string;
    /**
     * @generated from protobuf field: optional string line_2 = 5;
     */
    line2?: string;
    /**
     * @generated from protobuf field: string city = 6;
     */
    city: string;
    /**
     * @generated from protobuf field: string state = 7;
     */
    state: string;
    /**
     * @generated from protobuf field: string postal_code = 8;
     */
    postalCode: string;
    /**
     * @generated from protobuf field: string address = 9;
     */
    address: string;
}
/**
 * @generated from protobuf message ManifestStopUpdateReply
 */
export interface ManifestStopUpdateReply {
}
/**
 * @generated from protobuf message ManifestStopStatusUpdateRequest
 */
export interface ManifestStopStatusUpdateRequest {
    /**
     * @generated from protobuf field: string manifest_id = 1;
     */
    manifestId: string;
    /**
     * @generated from protobuf field: ManifestStopStatusUpdateRequest.StopStatusUpdate stop_status_updates = 2;
     */
    stopStatusUpdates?: ManifestStopStatusUpdateRequest_StopStatusUpdate;
}
/**
 * @generated from protobuf message ManifestStopStatusUpdateRequest.ManifestStop
 */
export interface ManifestStopStatusUpdateRequest_ManifestStop {
    /**
     * @generated from protobuf field: string manifest_stop_id = 1;
     */
    manifestStopId: string;
    /**
     * @generated from protobuf field: ManifestModel.ManifestStop.Status status = 2;
     */
    status: ManifestModel_ManifestStop_Status;
}
/**
 * @generated from protobuf message ManifestStopStatusUpdateRequest.LoadStop
 */
export interface ManifestStopStatusUpdateRequest_LoadStop {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: string stop_id = 2;
     */
    stopId: string;
    /**
     * @generated from protobuf field: ManifestModel.LoadStop.Status status = 3;
     */
    status: ManifestModel_LoadStop_Status;
}
/**
 * @generated from protobuf message ManifestStopStatusUpdateRequest.StopStatusUpdate
 */
export interface ManifestStopStatusUpdateRequest_StopStatusUpdate {
    /**
     * @generated from protobuf oneof: stop_id
     */
    stopId: {
        oneofKind: "manifestStop";
        /**
         * @generated from protobuf field: ManifestStopStatusUpdateRequest.ManifestStop manifest_stop = 1;
         */
        manifestStop: ManifestStopStatusUpdateRequest_ManifestStop;
    } | {
        oneofKind: "loadStop";
        /**
         * @generated from protobuf field: ManifestStopStatusUpdateRequest.LoadStop load_stop = 2;
         */
        loadStop: ManifestStopStatusUpdateRequest_LoadStop;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message ManifestStopStatusUpdateReply
 */
export interface ManifestStopStatusUpdateReply {
}
/**
 * @generated from protobuf message ManifestStopRemoveRequest
 */
export interface ManifestStopRemoveRequest {
    /**
     * @generated from protobuf field: string manifest_id = 1;
     */
    manifestId: string;
    /**
     * @generated from protobuf field: string manifest_stop_id = 2;
     */
    manifestStopId: string;
}
/**
 * @generated from protobuf message ManifestStopRemoveReply
 */
export interface ManifestStopRemoveReply {
}
/**
 * @generated from protobuf message ManifestStopTakeoutRequest
 */
export interface ManifestStopTakeoutRequest {
    /**
     * @generated from protobuf field: string from_manifest_id = 1;
     */
    fromManifestId: string;
    /**
     * @generated from protobuf field: string to_manifest_id = 2;
     */
    toManifestId: string;
    /**
     * @generated from protobuf field: repeated ManifestModel.StopID stops = 3;
     */
    stops: ManifestModel_StopID[];
}
/**
 * @generated from protobuf message ManifestStopTakeoutReply
 */
export interface ManifestStopTakeoutReply {
}
/**
 * @generated from protobuf message ManifestStopTakeoutSeparateRequest
 */
export interface ManifestStopTakeoutSeparateRequest {
    /**
     * @generated from protobuf field: string from_manifest_id = 1;
     */
    fromManifestId: string;
    /**
     * @generated from protobuf field: repeated ManifestModel.StopID stops = 3;
     */
    stops: ManifestModel_StopID[];
}
/**
 * @generated from protobuf message ManifestStopTakeoutSeparateReply
 */
export interface ManifestStopTakeoutSeparateReply {
    /**
     * @generated from protobuf field: string new_manifest_id = 1;
     */
    newManifestId: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopAddRequest$Type extends MessageType<ManifestStopAddRequest> {
    constructor() {
        super("ManifestStopAddRequest", [
            { no: 1, name: "manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "sequence", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "appointment_start_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "appointment_end_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "arrived_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "checked_in_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "checked_out_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "departed_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "type", kind: "enum", T: () => ["ManifestModel.ManifestStop.Type", ManifestModel_ManifestStop_Type, "TYPE_"] },
            { no: 11, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "location", kind: "message", T: () => ManifestStopAddRequest_Location }
        ]);
    }
    create(value?: PartialMessage<ManifestStopAddRequest>): ManifestStopAddRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.manifestId = "";
        message.sequence = 0;
        message.note = "";
        message.type = 0;
        message.referenceId = "";
        if (value !== undefined)
            reflectionMergePartial<ManifestStopAddRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopAddRequest): ManifestStopAddRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string manifest_id */ 1:
                    message.manifestId = reader.string();
                    break;
                case /* int64 sequence */ 2:
                    message.sequence = reader.int64().toNumber();
                    break;
                case /* string note */ 3:
                    message.note = reader.string();
                    break;
                case /* optional string appointment_start_at */ 4:
                    message.appointmentStartAt = reader.string();
                    break;
                case /* optional string appointment_end_at */ 5:
                    message.appointmentEndAt = reader.string();
                    break;
                case /* optional string arrived_at */ 6:
                    message.arrivedAt = reader.string();
                    break;
                case /* optional string checked_in_at */ 7:
                    message.checkedInAt = reader.string();
                    break;
                case /* optional string checked_out_at */ 8:
                    message.checkedOutAt = reader.string();
                    break;
                case /* optional string departed_at */ 9:
                    message.departedAt = reader.string();
                    break;
                case /* ManifestModel.ManifestStop.Type type */ 10:
                    message.type = reader.int32();
                    break;
                case /* string reference_id */ 11:
                    message.referenceId = reader.string();
                    break;
                case /* ManifestStopAddRequest.Location location */ 12:
                    message.location = ManifestStopAddRequest_Location.internalBinaryRead(reader, reader.uint32(), options, message.location);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopAddRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string manifest_id = 1; */
        if (message.manifestId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.manifestId);
        /* int64 sequence = 2; */
        if (message.sequence !== 0)
            writer.tag(2, WireType.Varint).int64(message.sequence);
        /* string note = 3; */
        if (message.note !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.note);
        /* optional string appointment_start_at = 4; */
        if (message.appointmentStartAt !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.appointmentStartAt);
        /* optional string appointment_end_at = 5; */
        if (message.appointmentEndAt !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.appointmentEndAt);
        /* optional string arrived_at = 6; */
        if (message.arrivedAt !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.arrivedAt);
        /* optional string checked_in_at = 7; */
        if (message.checkedInAt !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.checkedInAt);
        /* optional string checked_out_at = 8; */
        if (message.checkedOutAt !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.checkedOutAt);
        /* optional string departed_at = 9; */
        if (message.departedAt !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.departedAt);
        /* ManifestModel.ManifestStop.Type type = 10; */
        if (message.type !== 0)
            writer.tag(10, WireType.Varint).int32(message.type);
        /* string reference_id = 11; */
        if (message.referenceId !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.referenceId);
        /* ManifestStopAddRequest.Location location = 12; */
        if (message.location)
            ManifestStopAddRequest_Location.internalBinaryWrite(message.location, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopAddRequest
 */
export const ManifestStopAddRequest = new ManifestStopAddRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopAddRequest_Location$Type extends MessageType<ManifestStopAddRequest_Location> {
    constructor() {
        super("ManifestStopAddRequest.Location", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "lat", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "lon", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "line_2", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ManifestStopAddRequest_Location>): ManifestStopAddRequest_Location {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.lat = 0;
        message.lon = 0;
        message.line1 = "";
        message.city = "";
        message.state = "";
        message.postalCode = "";
        message.address = "";
        if (value !== undefined)
            reflectionMergePartial<ManifestStopAddRequest_Location>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopAddRequest_Location): ManifestStopAddRequest_Location {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* double lat */ 2:
                    message.lat = reader.double();
                    break;
                case /* double lon */ 3:
                    message.lon = reader.double();
                    break;
                case /* string line_1 */ 4:
                    message.line1 = reader.string();
                    break;
                case /* optional string line_2 */ 5:
                    message.line2 = reader.string();
                    break;
                case /* string city */ 6:
                    message.city = reader.string();
                    break;
                case /* string state */ 7:
                    message.state = reader.string();
                    break;
                case /* string postal_code */ 8:
                    message.postalCode = reader.string();
                    break;
                case /* string address */ 9:
                    message.address = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopAddRequest_Location, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* double lat = 2; */
        if (message.lat !== 0)
            writer.tag(2, WireType.Bit64).double(message.lat);
        /* double lon = 3; */
        if (message.lon !== 0)
            writer.tag(3, WireType.Bit64).double(message.lon);
        /* string line_1 = 4; */
        if (message.line1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.line1);
        /* optional string line_2 = 5; */
        if (message.line2 !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.line2);
        /* string city = 6; */
        if (message.city !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.city);
        /* string state = 7; */
        if (message.state !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.state);
        /* string postal_code = 8; */
        if (message.postalCode !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.postalCode);
        /* string address = 9; */
        if (message.address !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.address);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopAddRequest.Location
 */
export const ManifestStopAddRequest_Location = new ManifestStopAddRequest_Location$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopAddReply$Type extends MessageType<ManifestStopAddReply> {
    constructor() {
        super("ManifestStopAddReply", [
            { no: 1, name: "stop", kind: "message", T: () => ManifestModel_Stop },
            { no: 2, name: "stops_order", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ManifestModel_StopID }
        ]);
    }
    create(value?: PartialMessage<ManifestStopAddReply>): ManifestStopAddReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.stopsOrder = [];
        if (value !== undefined)
            reflectionMergePartial<ManifestStopAddReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopAddReply): ManifestStopAddReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ManifestModel.Stop stop */ 1:
                    message.stop = ManifestModel_Stop.internalBinaryRead(reader, reader.uint32(), options, message.stop);
                    break;
                case /* repeated ManifestModel.StopID stops_order */ 2:
                    message.stopsOrder.push(ManifestModel_StopID.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopAddReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ManifestModel.Stop stop = 1; */
        if (message.stop)
            ManifestModel_Stop.internalBinaryWrite(message.stop, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ManifestModel.StopID stops_order = 2; */
        for (let i = 0; i < message.stopsOrder.length; i++)
            ManifestModel_StopID.internalBinaryWrite(message.stopsOrder[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopAddReply
 */
export const ManifestStopAddReply = new ManifestStopAddReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopSequenceUpdateRequest$Type extends MessageType<ManifestStopSequenceUpdateRequest> {
    constructor() {
        super("ManifestStopSequenceUpdateRequest", [
            { no: 1, name: "manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "new_stop_sequences", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ManifestModel_StopID }
        ]);
    }
    create(value?: PartialMessage<ManifestStopSequenceUpdateRequest>): ManifestStopSequenceUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.manifestId = "";
        message.newStopSequences = [];
        if (value !== undefined)
            reflectionMergePartial<ManifestStopSequenceUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopSequenceUpdateRequest): ManifestStopSequenceUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string manifest_id */ 1:
                    message.manifestId = reader.string();
                    break;
                case /* repeated ManifestModel.StopID new_stop_sequences */ 2:
                    message.newStopSequences.push(ManifestModel_StopID.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopSequenceUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string manifest_id = 1; */
        if (message.manifestId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.manifestId);
        /* repeated ManifestModel.StopID new_stop_sequences = 2; */
        for (let i = 0; i < message.newStopSequences.length; i++)
            ManifestModel_StopID.internalBinaryWrite(message.newStopSequences[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopSequenceUpdateRequest
 */
export const ManifestStopSequenceUpdateRequest = new ManifestStopSequenceUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopSequenceUpdateReply$Type extends MessageType<ManifestStopSequenceUpdateReply> {
    constructor() {
        super("ManifestStopSequenceUpdateReply", []);
    }
    create(value?: PartialMessage<ManifestStopSequenceUpdateReply>): ManifestStopSequenceUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ManifestStopSequenceUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopSequenceUpdateReply): ManifestStopSequenceUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ManifestStopSequenceUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopSequenceUpdateReply
 */
export const ManifestStopSequenceUpdateReply = new ManifestStopSequenceUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopUpdateRequest$Type extends MessageType<ManifestStopUpdateRequest> {
    constructor() {
        super("ManifestStopUpdateRequest", [
            { no: 1, name: "manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "manifest_stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "appointment_start_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "appointment_end_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "arrived_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "checked_in_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "checked_out_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "departed_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "type", kind: "enum", T: () => ["ManifestModel.ManifestStop.Type", ManifestModel_ManifestStop_Type, "TYPE_"] },
            { no: 11, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "location", kind: "message", T: () => ManifestStopUpdateRequest_Location }
        ]);
    }
    create(value?: PartialMessage<ManifestStopUpdateRequest>): ManifestStopUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.manifestId = "";
        message.manifestStopId = "";
        message.note = "";
        message.type = 0;
        message.referenceId = "";
        if (value !== undefined)
            reflectionMergePartial<ManifestStopUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopUpdateRequest): ManifestStopUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string manifest_id */ 1:
                    message.manifestId = reader.string();
                    break;
                case /* string manifest_stop_id */ 2:
                    message.manifestStopId = reader.string();
                    break;
                case /* string note */ 3:
                    message.note = reader.string();
                    break;
                case /* optional string appointment_start_at */ 4:
                    message.appointmentStartAt = reader.string();
                    break;
                case /* optional string appointment_end_at */ 5:
                    message.appointmentEndAt = reader.string();
                    break;
                case /* optional string arrived_at */ 6:
                    message.arrivedAt = reader.string();
                    break;
                case /* optional string checked_in_at */ 7:
                    message.checkedInAt = reader.string();
                    break;
                case /* optional string checked_out_at */ 8:
                    message.checkedOutAt = reader.string();
                    break;
                case /* optional string departed_at */ 9:
                    message.departedAt = reader.string();
                    break;
                case /* ManifestModel.ManifestStop.Type type */ 10:
                    message.type = reader.int32();
                    break;
                case /* string reference_id */ 11:
                    message.referenceId = reader.string();
                    break;
                case /* ManifestStopUpdateRequest.Location location */ 12:
                    message.location = ManifestStopUpdateRequest_Location.internalBinaryRead(reader, reader.uint32(), options, message.location);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string manifest_id = 1; */
        if (message.manifestId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.manifestId);
        /* string manifest_stop_id = 2; */
        if (message.manifestStopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.manifestStopId);
        /* string note = 3; */
        if (message.note !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.note);
        /* optional string appointment_start_at = 4; */
        if (message.appointmentStartAt !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.appointmentStartAt);
        /* optional string appointment_end_at = 5; */
        if (message.appointmentEndAt !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.appointmentEndAt);
        /* optional string arrived_at = 6; */
        if (message.arrivedAt !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.arrivedAt);
        /* optional string checked_in_at = 7; */
        if (message.checkedInAt !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.checkedInAt);
        /* optional string checked_out_at = 8; */
        if (message.checkedOutAt !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.checkedOutAt);
        /* optional string departed_at = 9; */
        if (message.departedAt !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.departedAt);
        /* ManifestModel.ManifestStop.Type type = 10; */
        if (message.type !== 0)
            writer.tag(10, WireType.Varint).int32(message.type);
        /* string reference_id = 11; */
        if (message.referenceId !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.referenceId);
        /* ManifestStopUpdateRequest.Location location = 12; */
        if (message.location)
            ManifestStopUpdateRequest_Location.internalBinaryWrite(message.location, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopUpdateRequest
 */
export const ManifestStopUpdateRequest = new ManifestStopUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopUpdateRequest_Location$Type extends MessageType<ManifestStopUpdateRequest_Location> {
    constructor() {
        super("ManifestStopUpdateRequest.Location", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "lat", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "lon", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "line_2", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ManifestStopUpdateRequest_Location>): ManifestStopUpdateRequest_Location {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.lat = 0;
        message.lon = 0;
        message.line1 = "";
        message.city = "";
        message.state = "";
        message.postalCode = "";
        message.address = "";
        if (value !== undefined)
            reflectionMergePartial<ManifestStopUpdateRequest_Location>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopUpdateRequest_Location): ManifestStopUpdateRequest_Location {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* double lat */ 2:
                    message.lat = reader.double();
                    break;
                case /* double lon */ 3:
                    message.lon = reader.double();
                    break;
                case /* string line_1 */ 4:
                    message.line1 = reader.string();
                    break;
                case /* optional string line_2 */ 5:
                    message.line2 = reader.string();
                    break;
                case /* string city */ 6:
                    message.city = reader.string();
                    break;
                case /* string state */ 7:
                    message.state = reader.string();
                    break;
                case /* string postal_code */ 8:
                    message.postalCode = reader.string();
                    break;
                case /* string address */ 9:
                    message.address = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopUpdateRequest_Location, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* double lat = 2; */
        if (message.lat !== 0)
            writer.tag(2, WireType.Bit64).double(message.lat);
        /* double lon = 3; */
        if (message.lon !== 0)
            writer.tag(3, WireType.Bit64).double(message.lon);
        /* string line_1 = 4; */
        if (message.line1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.line1);
        /* optional string line_2 = 5; */
        if (message.line2 !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.line2);
        /* string city = 6; */
        if (message.city !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.city);
        /* string state = 7; */
        if (message.state !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.state);
        /* string postal_code = 8; */
        if (message.postalCode !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.postalCode);
        /* string address = 9; */
        if (message.address !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.address);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopUpdateRequest.Location
 */
export const ManifestStopUpdateRequest_Location = new ManifestStopUpdateRequest_Location$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopUpdateReply$Type extends MessageType<ManifestStopUpdateReply> {
    constructor() {
        super("ManifestStopUpdateReply", []);
    }
    create(value?: PartialMessage<ManifestStopUpdateReply>): ManifestStopUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ManifestStopUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopUpdateReply): ManifestStopUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ManifestStopUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopUpdateReply
 */
export const ManifestStopUpdateReply = new ManifestStopUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopStatusUpdateRequest$Type extends MessageType<ManifestStopStatusUpdateRequest> {
    constructor() {
        super("ManifestStopStatusUpdateRequest", [
            { no: 1, name: "manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_status_updates", kind: "message", T: () => ManifestStopStatusUpdateRequest_StopStatusUpdate }
        ]);
    }
    create(value?: PartialMessage<ManifestStopStatusUpdateRequest>): ManifestStopStatusUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.manifestId = "";
        if (value !== undefined)
            reflectionMergePartial<ManifestStopStatusUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopStatusUpdateRequest): ManifestStopStatusUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string manifest_id */ 1:
                    message.manifestId = reader.string();
                    break;
                case /* ManifestStopStatusUpdateRequest.StopStatusUpdate stop_status_updates */ 2:
                    message.stopStatusUpdates = ManifestStopStatusUpdateRequest_StopStatusUpdate.internalBinaryRead(reader, reader.uint32(), options, message.stopStatusUpdates);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopStatusUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string manifest_id = 1; */
        if (message.manifestId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.manifestId);
        /* ManifestStopStatusUpdateRequest.StopStatusUpdate stop_status_updates = 2; */
        if (message.stopStatusUpdates)
            ManifestStopStatusUpdateRequest_StopStatusUpdate.internalBinaryWrite(message.stopStatusUpdates, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopStatusUpdateRequest
 */
export const ManifestStopStatusUpdateRequest = new ManifestStopStatusUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopStatusUpdateRequest_ManifestStop$Type extends MessageType<ManifestStopStatusUpdateRequest_ManifestStop> {
    constructor() {
        super("ManifestStopStatusUpdateRequest.ManifestStop", [
            { no: 1, name: "manifest_stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "status", kind: "enum", T: () => ["ManifestModel.ManifestStop.Status", ManifestModel_ManifestStop_Status, "STATUS_"] }
        ]);
    }
    create(value?: PartialMessage<ManifestStopStatusUpdateRequest_ManifestStop>): ManifestStopStatusUpdateRequest_ManifestStop {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.manifestStopId = "";
        message.status = 0;
        if (value !== undefined)
            reflectionMergePartial<ManifestStopStatusUpdateRequest_ManifestStop>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopStatusUpdateRequest_ManifestStop): ManifestStopStatusUpdateRequest_ManifestStop {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string manifest_stop_id */ 1:
                    message.manifestStopId = reader.string();
                    break;
                case /* ManifestModel.ManifestStop.Status status */ 2:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopStatusUpdateRequest_ManifestStop, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string manifest_stop_id = 1; */
        if (message.manifestStopId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.manifestStopId);
        /* ManifestModel.ManifestStop.Status status = 2; */
        if (message.status !== 0)
            writer.tag(2, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopStatusUpdateRequest.ManifestStop
 */
export const ManifestStopStatusUpdateRequest_ManifestStop = new ManifestStopStatusUpdateRequest_ManifestStop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopStatusUpdateRequest_LoadStop$Type extends MessageType<ManifestStopStatusUpdateRequest_LoadStop> {
    constructor() {
        super("ManifestStopStatusUpdateRequest.LoadStop", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "status", kind: "enum", T: () => ["ManifestModel.LoadStop.Status", ManifestModel_LoadStop_Status, "STATUS_"] }
        ]);
    }
    create(value?: PartialMessage<ManifestStopStatusUpdateRequest_LoadStop>): ManifestStopStatusUpdateRequest_LoadStop {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.stopId = "";
        message.status = 0;
        if (value !== undefined)
            reflectionMergePartial<ManifestStopStatusUpdateRequest_LoadStop>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopStatusUpdateRequest_LoadStop): ManifestStopStatusUpdateRequest_LoadStop {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* string stop_id */ 2:
                    message.stopId = reader.string();
                    break;
                case /* ManifestModel.LoadStop.Status status */ 3:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopStatusUpdateRequest_LoadStop, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* string stop_id = 2; */
        if (message.stopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.stopId);
        /* ManifestModel.LoadStop.Status status = 3; */
        if (message.status !== 0)
            writer.tag(3, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopStatusUpdateRequest.LoadStop
 */
export const ManifestStopStatusUpdateRequest_LoadStop = new ManifestStopStatusUpdateRequest_LoadStop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopStatusUpdateRequest_StopStatusUpdate$Type extends MessageType<ManifestStopStatusUpdateRequest_StopStatusUpdate> {
    constructor() {
        super("ManifestStopStatusUpdateRequest.StopStatusUpdate", [
            { no: 1, name: "manifest_stop", kind: "message", oneof: "stopId", T: () => ManifestStopStatusUpdateRequest_ManifestStop },
            { no: 2, name: "load_stop", kind: "message", oneof: "stopId", T: () => ManifestStopStatusUpdateRequest_LoadStop }
        ]);
    }
    create(value?: PartialMessage<ManifestStopStatusUpdateRequest_StopStatusUpdate>): ManifestStopStatusUpdateRequest_StopStatusUpdate {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.stopId = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<ManifestStopStatusUpdateRequest_StopStatusUpdate>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopStatusUpdateRequest_StopStatusUpdate): ManifestStopStatusUpdateRequest_StopStatusUpdate {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ManifestStopStatusUpdateRequest.ManifestStop manifest_stop */ 1:
                    message.stopId = {
                        oneofKind: "manifestStop",
                        manifestStop: ManifestStopStatusUpdateRequest_ManifestStop.internalBinaryRead(reader, reader.uint32(), options, (message.stopId as any).manifestStop)
                    };
                    break;
                case /* ManifestStopStatusUpdateRequest.LoadStop load_stop */ 2:
                    message.stopId = {
                        oneofKind: "loadStop",
                        loadStop: ManifestStopStatusUpdateRequest_LoadStop.internalBinaryRead(reader, reader.uint32(), options, (message.stopId as any).loadStop)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopStatusUpdateRequest_StopStatusUpdate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ManifestStopStatusUpdateRequest.ManifestStop manifest_stop = 1; */
        if (message.stopId.oneofKind === "manifestStop")
            ManifestStopStatusUpdateRequest_ManifestStop.internalBinaryWrite(message.stopId.manifestStop, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ManifestStopStatusUpdateRequest.LoadStop load_stop = 2; */
        if (message.stopId.oneofKind === "loadStop")
            ManifestStopStatusUpdateRequest_LoadStop.internalBinaryWrite(message.stopId.loadStop, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopStatusUpdateRequest.StopStatusUpdate
 */
export const ManifestStopStatusUpdateRequest_StopStatusUpdate = new ManifestStopStatusUpdateRequest_StopStatusUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopStatusUpdateReply$Type extends MessageType<ManifestStopStatusUpdateReply> {
    constructor() {
        super("ManifestStopStatusUpdateReply", []);
    }
    create(value?: PartialMessage<ManifestStopStatusUpdateReply>): ManifestStopStatusUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ManifestStopStatusUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopStatusUpdateReply): ManifestStopStatusUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ManifestStopStatusUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopStatusUpdateReply
 */
export const ManifestStopStatusUpdateReply = new ManifestStopStatusUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopRemoveRequest$Type extends MessageType<ManifestStopRemoveRequest> {
    constructor() {
        super("ManifestStopRemoveRequest", [
            { no: 1, name: "manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "manifest_stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ManifestStopRemoveRequest>): ManifestStopRemoveRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.manifestId = "";
        message.manifestStopId = "";
        if (value !== undefined)
            reflectionMergePartial<ManifestStopRemoveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopRemoveRequest): ManifestStopRemoveRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string manifest_id */ 1:
                    message.manifestId = reader.string();
                    break;
                case /* string manifest_stop_id */ 2:
                    message.manifestStopId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopRemoveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string manifest_id = 1; */
        if (message.manifestId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.manifestId);
        /* string manifest_stop_id = 2; */
        if (message.manifestStopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.manifestStopId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopRemoveRequest
 */
export const ManifestStopRemoveRequest = new ManifestStopRemoveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopRemoveReply$Type extends MessageType<ManifestStopRemoveReply> {
    constructor() {
        super("ManifestStopRemoveReply", []);
    }
    create(value?: PartialMessage<ManifestStopRemoveReply>): ManifestStopRemoveReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ManifestStopRemoveReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopRemoveReply): ManifestStopRemoveReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ManifestStopRemoveReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopRemoveReply
 */
export const ManifestStopRemoveReply = new ManifestStopRemoveReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopTakeoutRequest$Type extends MessageType<ManifestStopTakeoutRequest> {
    constructor() {
        super("ManifestStopTakeoutRequest", [
            { no: 1, name: "from_manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "to_manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "stops", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ManifestModel_StopID }
        ]);
    }
    create(value?: PartialMessage<ManifestStopTakeoutRequest>): ManifestStopTakeoutRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.fromManifestId = "";
        message.toManifestId = "";
        message.stops = [];
        if (value !== undefined)
            reflectionMergePartial<ManifestStopTakeoutRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopTakeoutRequest): ManifestStopTakeoutRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string from_manifest_id */ 1:
                    message.fromManifestId = reader.string();
                    break;
                case /* string to_manifest_id */ 2:
                    message.toManifestId = reader.string();
                    break;
                case /* repeated ManifestModel.StopID stops */ 3:
                    message.stops.push(ManifestModel_StopID.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopTakeoutRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string from_manifest_id = 1; */
        if (message.fromManifestId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fromManifestId);
        /* string to_manifest_id = 2; */
        if (message.toManifestId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.toManifestId);
        /* repeated ManifestModel.StopID stops = 3; */
        for (let i = 0; i < message.stops.length; i++)
            ManifestModel_StopID.internalBinaryWrite(message.stops[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopTakeoutRequest
 */
export const ManifestStopTakeoutRequest = new ManifestStopTakeoutRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopTakeoutReply$Type extends MessageType<ManifestStopTakeoutReply> {
    constructor() {
        super("ManifestStopTakeoutReply", []);
    }
    create(value?: PartialMessage<ManifestStopTakeoutReply>): ManifestStopTakeoutReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ManifestStopTakeoutReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopTakeoutReply): ManifestStopTakeoutReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ManifestStopTakeoutReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopTakeoutReply
 */
export const ManifestStopTakeoutReply = new ManifestStopTakeoutReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopTakeoutSeparateRequest$Type extends MessageType<ManifestStopTakeoutSeparateRequest> {
    constructor() {
        super("ManifestStopTakeoutSeparateRequest", [
            { no: 1, name: "from_manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "stops", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ManifestModel_StopID }
        ]);
    }
    create(value?: PartialMessage<ManifestStopTakeoutSeparateRequest>): ManifestStopTakeoutSeparateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.fromManifestId = "";
        message.stops = [];
        if (value !== undefined)
            reflectionMergePartial<ManifestStopTakeoutSeparateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopTakeoutSeparateRequest): ManifestStopTakeoutSeparateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string from_manifest_id */ 1:
                    message.fromManifestId = reader.string();
                    break;
                case /* repeated ManifestModel.StopID stops */ 3:
                    message.stops.push(ManifestModel_StopID.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopTakeoutSeparateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string from_manifest_id = 1; */
        if (message.fromManifestId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fromManifestId);
        /* repeated ManifestModel.StopID stops = 3; */
        for (let i = 0; i < message.stops.length; i++)
            ManifestModel_StopID.internalBinaryWrite(message.stops[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopTakeoutSeparateRequest
 */
export const ManifestStopTakeoutSeparateRequest = new ManifestStopTakeoutSeparateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManifestStopTakeoutSeparateReply$Type extends MessageType<ManifestStopTakeoutSeparateReply> {
    constructor() {
        super("ManifestStopTakeoutSeparateReply", [
            { no: 1, name: "new_manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ManifestStopTakeoutSeparateReply>): ManifestStopTakeoutSeparateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.newManifestId = "";
        if (value !== undefined)
            reflectionMergePartial<ManifestStopTakeoutSeparateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManifestStopTakeoutSeparateReply): ManifestStopTakeoutSeparateReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string new_manifest_id */ 1:
                    message.newManifestId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManifestStopTakeoutSeparateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string new_manifest_id = 1; */
        if (message.newManifestId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.newManifestId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ManifestStopTakeoutSeparateReply
 */
export const ManifestStopTakeoutSeparateReply = new ManifestStopTakeoutSeparateReply$Type();
/**
 * @generated ServiceType for protobuf service ManifestStopsService
 */
export const ManifestStopsService = new ServiceType("ManifestStopsService", [
    { name: "ManifestStopAdd", options: {}, I: ManifestStopAddRequest, O: ManifestStopAddReply },
    { name: "ManifestStopSequenceUpdate", options: {}, I: ManifestStopSequenceUpdateRequest, O: ManifestStopSequenceUpdateReply },
    { name: "ManifestStopUpdate", options: {}, I: ManifestStopUpdateRequest, O: ManifestStopUpdateReply },
    { name: "ManifestStopStatusUpdate", options: {}, I: ManifestStopStatusUpdateRequest, O: ManifestStopStatusUpdateReply },
    { name: "ManifestStopRemove", options: {}, I: ManifestStopRemoveRequest, O: ManifestStopRemoveReply },
    { name: "ManifestStopTakeOut", options: {}, I: ManifestStopTakeoutRequest, O: ManifestStopTakeoutReply },
    { name: "ManifestStopTakeOutSeparate", options: {}, I: ManifestStopTakeoutSeparateRequest, O: ManifestStopTakeoutSeparateReply }
]);
