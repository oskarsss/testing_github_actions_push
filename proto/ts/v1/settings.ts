// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/settings.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CountryCode } from "./models/country_code";
/**
 * //////////////////////
 * SettingsRetrieve
 * //////////////////////
 *
 * @generated from protobuf message SettingsRetrieveRequest
 */
export interface SettingsRetrieveRequest {
}
/**
 * @generated from protobuf message SettingsRetrieveReply
 */
export interface SettingsRetrieveReply {
    /**
     * @generated from protobuf field: SettingsRetrieveReply.Company company = 1;
     */
    company?: SettingsRetrieveReply_Company;
    /**
     * @generated from protobuf field: SettingsRetrieveReply.Settlements settlements = 3;
     */
    settlements?: SettingsRetrieveReply_Settlements;
    /**
     * @generated from protobuf field: SettingsRetrieveReply.Security security = 4;
     */
    security?: SettingsRetrieveReply_Security;
    /**
     * @generated from protobuf field: SettingsRetrieveReply.Orders orders = 5;
     */
    orders?: SettingsRetrieveReply_Orders;
    /**
     * @generated from protobuf field: SettingsRetrieveReply.Misc misc = 6;
     */
    misc?: SettingsRetrieveReply_Misc;
    /**
     * @generated from protobuf field: SettingsRetrieveReply.DriverApp driver_app = 7;
     */
    driverApp?: SettingsRetrieveReply_DriverApp;
}
/**
 * @generated from protobuf message SettingsRetrieveReply.Company
 */
export interface SettingsRetrieveReply_Company {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string phone = 2;
     */
    phone: string;
    /**
     * @generated from protobuf field: string fax = 3;
     */
    fax: string;
    /**
     * @generated from protobuf field: string light_logo_url = 4;
     */
    lightLogoUrl: string;
    /**
     * @generated from protobuf field: string dark_logo_url = 5;
     */
    darkLogoUrl: string;
    /**
     * @generated from protobuf field: string email = 7;
     */
    email: string;
    /**
     * @generated from protobuf field: string billing_email = 8;
     */
    billingEmail: string;
    /**
     * @generated from protobuf field: string address_line_1 = 9;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 10;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 11;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_state = 12;
     */
    addressState: string;
    /**
     * @generated from protobuf field: string address_postal_code = 13;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 14;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: string timezone = 15;
     */
    timezone: string;
}
/**
 * @generated from protobuf message SettingsRetrieveReply.Settlements
 */
export interface SettingsRetrieveReply_Settlements {
    /**
     * @generated from protobuf field: string logo_url = 1;
     */
    logoUrl: string;
    /**
     * @generated from protobuf field: string company_name = 2;
     */
    companyName: string;
    /**
     * @generated from protobuf field: string phone = 3;
     */
    phone: string;
    /**
     * @generated from protobuf field: string fax = 4;
     */
    fax: string;
    /**
     * @generated from protobuf field: string email = 5;
     */
    email: string;
    /**
     * @generated from protobuf field: repeated string reply_to_emails = 6;
     */
    replyToEmails: string[];
    /**
     * @generated from protobuf field: repeated string cc_emails = 7;
     */
    ccEmails: string[];
    /**
     * @generated from protobuf field: string address_line_1 = 8;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 9;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 10;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_state = 11;
     */
    addressState: string;
    /**
     * @generated from protobuf field: string address_postal_code = 12;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 13;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: int64 friendly_id_start_number = 14;
     */
    friendlyIdStartNumber: number;
}
/**
 * @generated from protobuf message SettingsRetrieveReply.Security
 */
export interface SettingsRetrieveReply_Security {
    /**
     * @generated from protobuf field: bool enforce_second_step_auth = 1;
     */
    enforceSecondStepAuth: boolean;
    /**
     * @generated from protobuf field: bool enforce_strong_password = 2;
     */
    enforceStrongPassword: boolean;
}
/**
 * @generated from protobuf message SettingsRetrieveReply.Orders
 */
export interface SettingsRetrieveReply_Orders {
    /**
     * @generated from protobuf field: string friendly_id_prefix = 1;
     */
    friendlyIdPrefix: string;
    /**
     * @generated from protobuf field: int64 friendly_id_start_number = 2;
     */
    friendlyIdStartNumber: number;
}
/**
 * @generated from protobuf message SettingsRetrieveReply.Misc
 */
export interface SettingsRetrieveReply_Misc {
    /**
     * @generated from protobuf field: bool onboarding_completed = 1;
     */
    onboardingCompleted: boolean;
}
/**
 * @generated from protobuf message SettingsRetrieveReply.DriverApp
 */
export interface SettingsRetrieveReply_DriverApp {
    /**
     * @generated from protobuf field: string ios_app_version = 1;
     */
    iosAppVersion: string;
    /**
     * @generated from protobuf field: string android_app_version = 2;
     */
    androidAppVersion: string;
}
/**
 * //////////////////////
 * SettingsUpdate
 * //////////////////////
 *
 * @generated from protobuf message SettingsUpdateRequest
 */
export interface SettingsUpdateRequest {
    /**
     * @generated from protobuf field: optional SettingsUpdateRequest.Company company = 1;
     */
    company?: SettingsUpdateRequest_Company;
    /**
     * @generated from protobuf field: optional SettingsUpdateRequest.Settlements settlements = 3;
     */
    settlements?: SettingsUpdateRequest_Settlements;
    /**
     * @generated from protobuf field: optional SettingsUpdateRequest.Security security = 4;
     */
    security?: SettingsUpdateRequest_Security;
    /**
     * @generated from protobuf field: optional SettingsUpdateRequest.Orders orders = 5;
     */
    orders?: SettingsUpdateRequest_Orders;
    /**
     * @generated from protobuf field: optional SettingsUpdateRequest.Misc misc = 6;
     */
    misc?: SettingsUpdateRequest_Misc;
}
/**
 * @generated from protobuf message SettingsUpdateRequest.Company
 */
export interface SettingsUpdateRequest_Company {
    /**
     * @generated from protobuf field: optional string name = 1;
     */
    name?: string;
    /**
     * @generated from protobuf field: optional string phone = 2;
     */
    phone?: string;
    /**
     * @generated from protobuf field: optional string fax = 3;
     */
    fax?: string;
    /**
     * @generated from protobuf field: optional string light_logo_url = 4;
     */
    lightLogoUrl?: string;
    /**
     * @generated from protobuf field: optional string dark_logo_url = 5;
     */
    darkLogoUrl?: string;
    /**
     * @generated from protobuf field: optional string invoice_logo_url = 6;
     */
    invoiceLogoUrl?: string;
    /**
     * @generated from protobuf field: optional string email = 9;
     */
    email?: string;
    /**
     * @generated from protobuf field: optional string billing_email = 10;
     */
    billingEmail?: string;
    /**
     * @generated from protobuf field: optional string address_line_1 = 11;
     */
    addressLine1?: string;
    /**
     * @generated from protobuf field: optional string address_line_2 = 12;
     */
    addressLine2?: string;
    /**
     * @generated from protobuf field: optional string address_city = 13;
     */
    addressCity?: string;
    /**
     * @generated from protobuf field: optional string address_state = 14;
     */
    addressState?: string;
    /**
     * @generated from protobuf field: optional string address_postal_code = 15;
     */
    addressPostalCode?: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 16;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: optional string timezone = 17;
     */
    timezone?: string;
}
/**
 * @generated from protobuf message SettingsUpdateRequest.Settlements
 */
export interface SettingsUpdateRequest_Settlements {
    /**
     * @generated from protobuf field: optional string logo_url = 1;
     */
    logoUrl?: string;
    /**
     * @generated from protobuf field: optional string company_name = 2;
     */
    companyName?: string;
    /**
     * @generated from protobuf field: optional string phone = 3;
     */
    phone?: string;
    /**
     * @generated from protobuf field: optional string fax = 4;
     */
    fax?: string;
    /**
     * @generated from protobuf field: optional string email = 5;
     */
    email?: string;
    /**
     * @generated from protobuf field: repeated string reply_to_emails = 6;
     */
    replyToEmails: string[];
    /**
     * @generated from protobuf field: repeated string cc_emails = 7;
     */
    ccEmails: string[];
    /**
     * @generated from protobuf field: optional string address_line_1 = 8;
     */
    addressLine1?: string;
    /**
     * @generated from protobuf field: optional string address_line_2 = 9;
     */
    addressLine2?: string;
    /**
     * @generated from protobuf field: optional string address_city = 10;
     */
    addressCity?: string;
    /**
     * @generated from protobuf field: optional string address_state = 11;
     */
    addressState?: string;
    /**
     * @generated from protobuf field: optional string address_postal_code = 12;
     */
    addressPostalCode?: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 13;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: optional int64 friendly_id_start_number = 14;
     */
    friendlyIdStartNumber?: number;
}
/**
 * @generated from protobuf message SettingsUpdateRequest.Security
 */
export interface SettingsUpdateRequest_Security {
    /**
     * @generated from protobuf field: optional bool enforce_second_step_auth = 1;
     */
    enforceSecondStepAuth?: boolean;
    /**
     * @generated from protobuf field: optional bool enforce_strong_password = 2;
     */
    enforceStrongPassword?: boolean;
}
/**
 * @generated from protobuf message SettingsUpdateRequest.Orders
 */
export interface SettingsUpdateRequest_Orders {
    /**
     * @generated from protobuf field: optional string friendly_id_prefix = 1;
     */
    friendlyIdPrefix?: string;
    /**
     * @generated from protobuf field: optional int64 friendly_id_start_number = 2;
     */
    friendlyIdStartNumber?: number;
}
/**
 * @generated from protobuf message SettingsUpdateRequest.Misc
 */
export interface SettingsUpdateRequest_Misc {
    /**
     * @generated from protobuf field: optional bool onboarding_completed = 1;
     */
    onboardingCompleted?: boolean;
}
/**
 * @generated from protobuf message SettingsUpdateReply
 */
export interface SettingsUpdateReply {
}
// @generated message type with reflection information, may provide speed optimized methods
class SettingsRetrieveRequest$Type extends MessageType<SettingsRetrieveRequest> {
    constructor() {
        super("SettingsRetrieveRequest", []);
    }
    create(value?: PartialMessage<SettingsRetrieveRequest>): SettingsRetrieveRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettingsRetrieveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsRetrieveRequest): SettingsRetrieveRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SettingsRetrieveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsRetrieveRequest
 */
export const SettingsRetrieveRequest = new SettingsRetrieveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsRetrieveReply$Type extends MessageType<SettingsRetrieveReply> {
    constructor() {
        super("SettingsRetrieveReply", [
            { no: 1, name: "company", kind: "message", T: () => SettingsRetrieveReply_Company },
            { no: 3, name: "settlements", kind: "message", T: () => SettingsRetrieveReply_Settlements },
            { no: 4, name: "security", kind: "message", T: () => SettingsRetrieveReply_Security },
            { no: 5, name: "orders", kind: "message", T: () => SettingsRetrieveReply_Orders },
            { no: 6, name: "misc", kind: "message", T: () => SettingsRetrieveReply_Misc },
            { no: 7, name: "driver_app", kind: "message", T: () => SettingsRetrieveReply_DriverApp }
        ]);
    }
    create(value?: PartialMessage<SettingsRetrieveReply>): SettingsRetrieveReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettingsRetrieveReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsRetrieveReply): SettingsRetrieveReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* SettingsRetrieveReply.Company company */ 1:
                    message.company = SettingsRetrieveReply_Company.internalBinaryRead(reader, reader.uint32(), options, message.company);
                    break;
                case /* SettingsRetrieveReply.Settlements settlements */ 3:
                    message.settlements = SettingsRetrieveReply_Settlements.internalBinaryRead(reader, reader.uint32(), options, message.settlements);
                    break;
                case /* SettingsRetrieveReply.Security security */ 4:
                    message.security = SettingsRetrieveReply_Security.internalBinaryRead(reader, reader.uint32(), options, message.security);
                    break;
                case /* SettingsRetrieveReply.Orders orders */ 5:
                    message.orders = SettingsRetrieveReply_Orders.internalBinaryRead(reader, reader.uint32(), options, message.orders);
                    break;
                case /* SettingsRetrieveReply.Misc misc */ 6:
                    message.misc = SettingsRetrieveReply_Misc.internalBinaryRead(reader, reader.uint32(), options, message.misc);
                    break;
                case /* SettingsRetrieveReply.DriverApp driver_app */ 7:
                    message.driverApp = SettingsRetrieveReply_DriverApp.internalBinaryRead(reader, reader.uint32(), options, message.driverApp);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsRetrieveReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* SettingsRetrieveReply.Company company = 1; */
        if (message.company)
            SettingsRetrieveReply_Company.internalBinaryWrite(message.company, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* SettingsRetrieveReply.Settlements settlements = 3; */
        if (message.settlements)
            SettingsRetrieveReply_Settlements.internalBinaryWrite(message.settlements, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* SettingsRetrieveReply.Security security = 4; */
        if (message.security)
            SettingsRetrieveReply_Security.internalBinaryWrite(message.security, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* SettingsRetrieveReply.Orders orders = 5; */
        if (message.orders)
            SettingsRetrieveReply_Orders.internalBinaryWrite(message.orders, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* SettingsRetrieveReply.Misc misc = 6; */
        if (message.misc)
            SettingsRetrieveReply_Misc.internalBinaryWrite(message.misc, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* SettingsRetrieveReply.DriverApp driver_app = 7; */
        if (message.driverApp)
            SettingsRetrieveReply_DriverApp.internalBinaryWrite(message.driverApp, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsRetrieveReply
 */
export const SettingsRetrieveReply = new SettingsRetrieveReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsRetrieveReply_Company$Type extends MessageType<SettingsRetrieveReply_Company> {
    constructor() {
        super("SettingsRetrieveReply.Company", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "phone", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "fax", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "light_logo_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "dark_logo_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "billing_email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 15, name: "timezone", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsRetrieveReply_Company>): SettingsRetrieveReply_Company {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.phone = "";
        message.fax = "";
        message.lightLogoUrl = "";
        message.darkLogoUrl = "";
        message.email = "";
        message.billingEmail = "";
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressState = "";
        message.addressPostalCode = "";
        message.timezone = "";
        if (value !== undefined)
            reflectionMergePartial<SettingsRetrieveReply_Company>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsRetrieveReply_Company): SettingsRetrieveReply_Company {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string phone */ 2:
                    message.phone = reader.string();
                    break;
                case /* string fax */ 3:
                    message.fax = reader.string();
                    break;
                case /* string light_logo_url */ 4:
                    message.lightLogoUrl = reader.string();
                    break;
                case /* string dark_logo_url */ 5:
                    message.darkLogoUrl = reader.string();
                    break;
                case /* string email */ 7:
                    message.email = reader.string();
                    break;
                case /* string billing_email */ 8:
                    message.billingEmail = reader.string();
                    break;
                case /* string address_line_1 */ 9:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 10:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 11:
                    message.addressCity = reader.string();
                    break;
                case /* string address_state */ 12:
                    message.addressState = reader.string();
                    break;
                case /* string address_postal_code */ 13:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional CountryCode address_country */ 14:
                    message.addressCountry = reader.int32();
                    break;
                case /* string timezone */ 15:
                    message.timezone = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsRetrieveReply_Company, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* string phone = 2; */
        if (message.phone !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.phone);
        /* string fax = 3; */
        if (message.fax !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.fax);
        /* string light_logo_url = 4; */
        if (message.lightLogoUrl !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.lightLogoUrl);
        /* string dark_logo_url = 5; */
        if (message.darkLogoUrl !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.darkLogoUrl);
        /* string email = 7; */
        if (message.email !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.email);
        /* string billing_email = 8; */
        if (message.billingEmail !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.billingEmail);
        /* string address_line_1 = 9; */
        if (message.addressLine1 !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 10; */
        if (message.addressLine2 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 11; */
        if (message.addressCity !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.addressCity);
        /* string address_state = 12; */
        if (message.addressState !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.addressState);
        /* string address_postal_code = 13; */
        if (message.addressPostalCode !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional CountryCode address_country = 14; */
        if (message.addressCountry !== undefined)
            writer.tag(14, WireType.Varint).int32(message.addressCountry);
        /* string timezone = 15; */
        if (message.timezone !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.timezone);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsRetrieveReply.Company
 */
export const SettingsRetrieveReply_Company = new SettingsRetrieveReply_Company$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsRetrieveReply_Settlements$Type extends MessageType<SettingsRetrieveReply_Settlements> {
    constructor() {
        super("SettingsRetrieveReply.Settlements", [
            { no: 1, name: "logo_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "company_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "phone", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "fax", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "reply_to_emails", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "cc_emails", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 14, name: "friendly_id_start_number", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsRetrieveReply_Settlements>): SettingsRetrieveReply_Settlements {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.logoUrl = "";
        message.companyName = "";
        message.phone = "";
        message.fax = "";
        message.email = "";
        message.replyToEmails = [];
        message.ccEmails = [];
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressState = "";
        message.addressPostalCode = "";
        message.friendlyIdStartNumber = 0;
        if (value !== undefined)
            reflectionMergePartial<SettingsRetrieveReply_Settlements>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsRetrieveReply_Settlements): SettingsRetrieveReply_Settlements {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string logo_url */ 1:
                    message.logoUrl = reader.string();
                    break;
                case /* string company_name */ 2:
                    message.companyName = reader.string();
                    break;
                case /* string phone */ 3:
                    message.phone = reader.string();
                    break;
                case /* string fax */ 4:
                    message.fax = reader.string();
                    break;
                case /* string email */ 5:
                    message.email = reader.string();
                    break;
                case /* repeated string reply_to_emails */ 6:
                    message.replyToEmails.push(reader.string());
                    break;
                case /* repeated string cc_emails */ 7:
                    message.ccEmails.push(reader.string());
                    break;
                case /* string address_line_1 */ 8:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 9:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 10:
                    message.addressCity = reader.string();
                    break;
                case /* string address_state */ 11:
                    message.addressState = reader.string();
                    break;
                case /* string address_postal_code */ 12:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional CountryCode address_country */ 13:
                    message.addressCountry = reader.int32();
                    break;
                case /* int64 friendly_id_start_number */ 14:
                    message.friendlyIdStartNumber = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsRetrieveReply_Settlements, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string logo_url = 1; */
        if (message.logoUrl !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.logoUrl);
        /* string company_name = 2; */
        if (message.companyName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.companyName);
        /* string phone = 3; */
        if (message.phone !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.phone);
        /* string fax = 4; */
        if (message.fax !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.fax);
        /* string email = 5; */
        if (message.email !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.email);
        /* repeated string reply_to_emails = 6; */
        for (let i = 0; i < message.replyToEmails.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.replyToEmails[i]);
        /* repeated string cc_emails = 7; */
        for (let i = 0; i < message.ccEmails.length; i++)
            writer.tag(7, WireType.LengthDelimited).string(message.ccEmails[i]);
        /* string address_line_1 = 8; */
        if (message.addressLine1 !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 9; */
        if (message.addressLine2 !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 10; */
        if (message.addressCity !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressCity);
        /* string address_state = 11; */
        if (message.addressState !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.addressState);
        /* string address_postal_code = 12; */
        if (message.addressPostalCode !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional CountryCode address_country = 13; */
        if (message.addressCountry !== undefined)
            writer.tag(13, WireType.Varint).int32(message.addressCountry);
        /* int64 friendly_id_start_number = 14; */
        if (message.friendlyIdStartNumber !== 0)
            writer.tag(14, WireType.Varint).int64(message.friendlyIdStartNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsRetrieveReply.Settlements
 */
export const SettingsRetrieveReply_Settlements = new SettingsRetrieveReply_Settlements$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsRetrieveReply_Security$Type extends MessageType<SettingsRetrieveReply_Security> {
    constructor() {
        super("SettingsRetrieveReply.Security", [
            { no: 1, name: "enforce_second_step_auth", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "enforce_strong_password", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsRetrieveReply_Security>): SettingsRetrieveReply_Security {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.enforceSecondStepAuth = false;
        message.enforceStrongPassword = false;
        if (value !== undefined)
            reflectionMergePartial<SettingsRetrieveReply_Security>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsRetrieveReply_Security): SettingsRetrieveReply_Security {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool enforce_second_step_auth */ 1:
                    message.enforceSecondStepAuth = reader.bool();
                    break;
                case /* bool enforce_strong_password */ 2:
                    message.enforceStrongPassword = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsRetrieveReply_Security, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool enforce_second_step_auth = 1; */
        if (message.enforceSecondStepAuth !== false)
            writer.tag(1, WireType.Varint).bool(message.enforceSecondStepAuth);
        /* bool enforce_strong_password = 2; */
        if (message.enforceStrongPassword !== false)
            writer.tag(2, WireType.Varint).bool(message.enforceStrongPassword);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsRetrieveReply.Security
 */
export const SettingsRetrieveReply_Security = new SettingsRetrieveReply_Security$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsRetrieveReply_Orders$Type extends MessageType<SettingsRetrieveReply_Orders> {
    constructor() {
        super("SettingsRetrieveReply.Orders", [
            { no: 1, name: "friendly_id_prefix", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "friendly_id_start_number", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsRetrieveReply_Orders>): SettingsRetrieveReply_Orders {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.friendlyIdPrefix = "";
        message.friendlyIdStartNumber = 0;
        if (value !== undefined)
            reflectionMergePartial<SettingsRetrieveReply_Orders>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsRetrieveReply_Orders): SettingsRetrieveReply_Orders {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string friendly_id_prefix */ 1:
                    message.friendlyIdPrefix = reader.string();
                    break;
                case /* int64 friendly_id_start_number */ 2:
                    message.friendlyIdStartNumber = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsRetrieveReply_Orders, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string friendly_id_prefix = 1; */
        if (message.friendlyIdPrefix !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.friendlyIdPrefix);
        /* int64 friendly_id_start_number = 2; */
        if (message.friendlyIdStartNumber !== 0)
            writer.tag(2, WireType.Varint).int64(message.friendlyIdStartNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsRetrieveReply.Orders
 */
export const SettingsRetrieveReply_Orders = new SettingsRetrieveReply_Orders$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsRetrieveReply_Misc$Type extends MessageType<SettingsRetrieveReply_Misc> {
    constructor() {
        super("SettingsRetrieveReply.Misc", [
            { no: 1, name: "onboarding_completed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsRetrieveReply_Misc>): SettingsRetrieveReply_Misc {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.onboardingCompleted = false;
        if (value !== undefined)
            reflectionMergePartial<SettingsRetrieveReply_Misc>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsRetrieveReply_Misc): SettingsRetrieveReply_Misc {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool onboarding_completed */ 1:
                    message.onboardingCompleted = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsRetrieveReply_Misc, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool onboarding_completed = 1; */
        if (message.onboardingCompleted !== false)
            writer.tag(1, WireType.Varint).bool(message.onboardingCompleted);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsRetrieveReply.Misc
 */
export const SettingsRetrieveReply_Misc = new SettingsRetrieveReply_Misc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsRetrieveReply_DriverApp$Type extends MessageType<SettingsRetrieveReply_DriverApp> {
    constructor() {
        super("SettingsRetrieveReply.DriverApp", [
            { no: 1, name: "ios_app_version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "android_app_version", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsRetrieveReply_DriverApp>): SettingsRetrieveReply_DriverApp {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.iosAppVersion = "";
        message.androidAppVersion = "";
        if (value !== undefined)
            reflectionMergePartial<SettingsRetrieveReply_DriverApp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsRetrieveReply_DriverApp): SettingsRetrieveReply_DriverApp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string ios_app_version */ 1:
                    message.iosAppVersion = reader.string();
                    break;
                case /* string android_app_version */ 2:
                    message.androidAppVersion = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsRetrieveReply_DriverApp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string ios_app_version = 1; */
        if (message.iosAppVersion !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.iosAppVersion);
        /* string android_app_version = 2; */
        if (message.androidAppVersion !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.androidAppVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsRetrieveReply.DriverApp
 */
export const SettingsRetrieveReply_DriverApp = new SettingsRetrieveReply_DriverApp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsUpdateRequest$Type extends MessageType<SettingsUpdateRequest> {
    constructor() {
        super("SettingsUpdateRequest", [
            { no: 1, name: "company", kind: "message", T: () => SettingsUpdateRequest_Company },
            { no: 3, name: "settlements", kind: "message", T: () => SettingsUpdateRequest_Settlements },
            { no: 4, name: "security", kind: "message", T: () => SettingsUpdateRequest_Security },
            { no: 5, name: "orders", kind: "message", T: () => SettingsUpdateRequest_Orders },
            { no: 6, name: "misc", kind: "message", T: () => SettingsUpdateRequest_Misc }
        ]);
    }
    create(value?: PartialMessage<SettingsUpdateRequest>): SettingsUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettingsUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsUpdateRequest): SettingsUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional SettingsUpdateRequest.Company company */ 1:
                    message.company = SettingsUpdateRequest_Company.internalBinaryRead(reader, reader.uint32(), options, message.company);
                    break;
                case /* optional SettingsUpdateRequest.Settlements settlements */ 3:
                    message.settlements = SettingsUpdateRequest_Settlements.internalBinaryRead(reader, reader.uint32(), options, message.settlements);
                    break;
                case /* optional SettingsUpdateRequest.Security security */ 4:
                    message.security = SettingsUpdateRequest_Security.internalBinaryRead(reader, reader.uint32(), options, message.security);
                    break;
                case /* optional SettingsUpdateRequest.Orders orders */ 5:
                    message.orders = SettingsUpdateRequest_Orders.internalBinaryRead(reader, reader.uint32(), options, message.orders);
                    break;
                case /* optional SettingsUpdateRequest.Misc misc */ 6:
                    message.misc = SettingsUpdateRequest_Misc.internalBinaryRead(reader, reader.uint32(), options, message.misc);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional SettingsUpdateRequest.Company company = 1; */
        if (message.company)
            SettingsUpdateRequest_Company.internalBinaryWrite(message.company, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional SettingsUpdateRequest.Settlements settlements = 3; */
        if (message.settlements)
            SettingsUpdateRequest_Settlements.internalBinaryWrite(message.settlements, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional SettingsUpdateRequest.Security security = 4; */
        if (message.security)
            SettingsUpdateRequest_Security.internalBinaryWrite(message.security, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional SettingsUpdateRequest.Orders orders = 5; */
        if (message.orders)
            SettingsUpdateRequest_Orders.internalBinaryWrite(message.orders, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional SettingsUpdateRequest.Misc misc = 6; */
        if (message.misc)
            SettingsUpdateRequest_Misc.internalBinaryWrite(message.misc, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsUpdateRequest
 */
export const SettingsUpdateRequest = new SettingsUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsUpdateRequest_Company$Type extends MessageType<SettingsUpdateRequest_Company> {
    constructor() {
        super("SettingsUpdateRequest.Company", [
            { no: 1, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "phone", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "fax", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "light_logo_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "dark_logo_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "invoice_logo_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "email", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "billing_email", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_line_1", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_line_2", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_city", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "address_state", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "address_postal_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 17, name: "timezone", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsUpdateRequest_Company>): SettingsUpdateRequest_Company {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettingsUpdateRequest_Company>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsUpdateRequest_Company): SettingsUpdateRequest_Company {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string name */ 1:
                    message.name = reader.string();
                    break;
                case /* optional string phone */ 2:
                    message.phone = reader.string();
                    break;
                case /* optional string fax */ 3:
                    message.fax = reader.string();
                    break;
                case /* optional string light_logo_url */ 4:
                    message.lightLogoUrl = reader.string();
                    break;
                case /* optional string dark_logo_url */ 5:
                    message.darkLogoUrl = reader.string();
                    break;
                case /* optional string invoice_logo_url */ 6:
                    message.invoiceLogoUrl = reader.string();
                    break;
                case /* optional string email */ 9:
                    message.email = reader.string();
                    break;
                case /* optional string billing_email */ 10:
                    message.billingEmail = reader.string();
                    break;
                case /* optional string address_line_1 */ 11:
                    message.addressLine1 = reader.string();
                    break;
                case /* optional string address_line_2 */ 12:
                    message.addressLine2 = reader.string();
                    break;
                case /* optional string address_city */ 13:
                    message.addressCity = reader.string();
                    break;
                case /* optional string address_state */ 14:
                    message.addressState = reader.string();
                    break;
                case /* optional string address_postal_code */ 15:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional CountryCode address_country */ 16:
                    message.addressCountry = reader.int32();
                    break;
                case /* optional string timezone */ 17:
                    message.timezone = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsUpdateRequest_Company, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string name = 1; */
        if (message.name !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* optional string phone = 2; */
        if (message.phone !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.phone);
        /* optional string fax = 3; */
        if (message.fax !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.fax);
        /* optional string light_logo_url = 4; */
        if (message.lightLogoUrl !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.lightLogoUrl);
        /* optional string dark_logo_url = 5; */
        if (message.darkLogoUrl !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.darkLogoUrl);
        /* optional string invoice_logo_url = 6; */
        if (message.invoiceLogoUrl !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.invoiceLogoUrl);
        /* optional string email = 9; */
        if (message.email !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.email);
        /* optional string billing_email = 10; */
        if (message.billingEmail !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.billingEmail);
        /* optional string address_line_1 = 11; */
        if (message.addressLine1 !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.addressLine1);
        /* optional string address_line_2 = 12; */
        if (message.addressLine2 !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.addressLine2);
        /* optional string address_city = 13; */
        if (message.addressCity !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.addressCity);
        /* optional string address_state = 14; */
        if (message.addressState !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.addressState);
        /* optional string address_postal_code = 15; */
        if (message.addressPostalCode !== undefined)
            writer.tag(15, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional CountryCode address_country = 16; */
        if (message.addressCountry !== undefined)
            writer.tag(16, WireType.Varint).int32(message.addressCountry);
        /* optional string timezone = 17; */
        if (message.timezone !== undefined)
            writer.tag(17, WireType.LengthDelimited).string(message.timezone);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsUpdateRequest.Company
 */
export const SettingsUpdateRequest_Company = new SettingsUpdateRequest_Company$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsUpdateRequest_Settlements$Type extends MessageType<SettingsUpdateRequest_Settlements> {
    constructor() {
        super("SettingsUpdateRequest.Settlements", [
            { no: 1, name: "logo_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "company_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "phone", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "fax", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "email", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "reply_to_emails", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "cc_emails", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "address_line_1", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_line_2", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_city", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_state", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_postal_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 14, name: "friendly_id_start_number", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsUpdateRequest_Settlements>): SettingsUpdateRequest_Settlements {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.replyToEmails = [];
        message.ccEmails = [];
        if (value !== undefined)
            reflectionMergePartial<SettingsUpdateRequest_Settlements>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsUpdateRequest_Settlements): SettingsUpdateRequest_Settlements {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string logo_url */ 1:
                    message.logoUrl = reader.string();
                    break;
                case /* optional string company_name */ 2:
                    message.companyName = reader.string();
                    break;
                case /* optional string phone */ 3:
                    message.phone = reader.string();
                    break;
                case /* optional string fax */ 4:
                    message.fax = reader.string();
                    break;
                case /* optional string email */ 5:
                    message.email = reader.string();
                    break;
                case /* repeated string reply_to_emails */ 6:
                    message.replyToEmails.push(reader.string());
                    break;
                case /* repeated string cc_emails */ 7:
                    message.ccEmails.push(reader.string());
                    break;
                case /* optional string address_line_1 */ 8:
                    message.addressLine1 = reader.string();
                    break;
                case /* optional string address_line_2 */ 9:
                    message.addressLine2 = reader.string();
                    break;
                case /* optional string address_city */ 10:
                    message.addressCity = reader.string();
                    break;
                case /* optional string address_state */ 11:
                    message.addressState = reader.string();
                    break;
                case /* optional string address_postal_code */ 12:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional CountryCode address_country */ 13:
                    message.addressCountry = reader.int32();
                    break;
                case /* optional int64 friendly_id_start_number */ 14:
                    message.friendlyIdStartNumber = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsUpdateRequest_Settlements, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string logo_url = 1; */
        if (message.logoUrl !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.logoUrl);
        /* optional string company_name = 2; */
        if (message.companyName !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.companyName);
        /* optional string phone = 3; */
        if (message.phone !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.phone);
        /* optional string fax = 4; */
        if (message.fax !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.fax);
        /* optional string email = 5; */
        if (message.email !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.email);
        /* repeated string reply_to_emails = 6; */
        for (let i = 0; i < message.replyToEmails.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.replyToEmails[i]);
        /* repeated string cc_emails = 7; */
        for (let i = 0; i < message.ccEmails.length; i++)
            writer.tag(7, WireType.LengthDelimited).string(message.ccEmails[i]);
        /* optional string address_line_1 = 8; */
        if (message.addressLine1 !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.addressLine1);
        /* optional string address_line_2 = 9; */
        if (message.addressLine2 !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.addressLine2);
        /* optional string address_city = 10; */
        if (message.addressCity !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.addressCity);
        /* optional string address_state = 11; */
        if (message.addressState !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.addressState);
        /* optional string address_postal_code = 12; */
        if (message.addressPostalCode !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional CountryCode address_country = 13; */
        if (message.addressCountry !== undefined)
            writer.tag(13, WireType.Varint).int32(message.addressCountry);
        /* optional int64 friendly_id_start_number = 14; */
        if (message.friendlyIdStartNumber !== undefined)
            writer.tag(14, WireType.Varint).int64(message.friendlyIdStartNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsUpdateRequest.Settlements
 */
export const SettingsUpdateRequest_Settlements = new SettingsUpdateRequest_Settlements$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsUpdateRequest_Security$Type extends MessageType<SettingsUpdateRequest_Security> {
    constructor() {
        super("SettingsUpdateRequest.Security", [
            { no: 1, name: "enforce_second_step_auth", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "enforce_strong_password", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsUpdateRequest_Security>): SettingsUpdateRequest_Security {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettingsUpdateRequest_Security>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsUpdateRequest_Security): SettingsUpdateRequest_Security {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool enforce_second_step_auth */ 1:
                    message.enforceSecondStepAuth = reader.bool();
                    break;
                case /* optional bool enforce_strong_password */ 2:
                    message.enforceStrongPassword = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsUpdateRequest_Security, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool enforce_second_step_auth = 1; */
        if (message.enforceSecondStepAuth !== undefined)
            writer.tag(1, WireType.Varint).bool(message.enforceSecondStepAuth);
        /* optional bool enforce_strong_password = 2; */
        if (message.enforceStrongPassword !== undefined)
            writer.tag(2, WireType.Varint).bool(message.enforceStrongPassword);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsUpdateRequest.Security
 */
export const SettingsUpdateRequest_Security = new SettingsUpdateRequest_Security$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsUpdateRequest_Orders$Type extends MessageType<SettingsUpdateRequest_Orders> {
    constructor() {
        super("SettingsUpdateRequest.Orders", [
            { no: 1, name: "friendly_id_prefix", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "friendly_id_start_number", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsUpdateRequest_Orders>): SettingsUpdateRequest_Orders {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettingsUpdateRequest_Orders>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsUpdateRequest_Orders): SettingsUpdateRequest_Orders {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string friendly_id_prefix */ 1:
                    message.friendlyIdPrefix = reader.string();
                    break;
                case /* optional int64 friendly_id_start_number */ 2:
                    message.friendlyIdStartNumber = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsUpdateRequest_Orders, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string friendly_id_prefix = 1; */
        if (message.friendlyIdPrefix !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.friendlyIdPrefix);
        /* optional int64 friendly_id_start_number = 2; */
        if (message.friendlyIdStartNumber !== undefined)
            writer.tag(2, WireType.Varint).int64(message.friendlyIdStartNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsUpdateRequest.Orders
 */
export const SettingsUpdateRequest_Orders = new SettingsUpdateRequest_Orders$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsUpdateRequest_Misc$Type extends MessageType<SettingsUpdateRequest_Misc> {
    constructor() {
        super("SettingsUpdateRequest.Misc", [
            { no: 1, name: "onboarding_completed", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<SettingsUpdateRequest_Misc>): SettingsUpdateRequest_Misc {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettingsUpdateRequest_Misc>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsUpdateRequest_Misc): SettingsUpdateRequest_Misc {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool onboarding_completed */ 1:
                    message.onboardingCompleted = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettingsUpdateRequest_Misc, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool onboarding_completed = 1; */
        if (message.onboardingCompleted !== undefined)
            writer.tag(1, WireType.Varint).bool(message.onboardingCompleted);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsUpdateRequest.Misc
 */
export const SettingsUpdateRequest_Misc = new SettingsUpdateRequest_Misc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingsUpdateReply$Type extends MessageType<SettingsUpdateReply> {
    constructor() {
        super("SettingsUpdateReply", []);
    }
    create(value?: PartialMessage<SettingsUpdateReply>): SettingsUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettingsUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettingsUpdateReply): SettingsUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SettingsUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettingsUpdateReply
 */
export const SettingsUpdateReply = new SettingsUpdateReply$Type();
/**
 * @generated ServiceType for protobuf service SettingsService
 */
export const SettingsService = new ServiceType("SettingsService", [
    { name: "SettingsRetrieve", options: {}, I: SettingsRetrieveRequest, O: SettingsRetrieveReply },
    { name: "SettingsUpdate", options: {}, I: SettingsUpdateRequest, O: SettingsUpdateReply }
]);
