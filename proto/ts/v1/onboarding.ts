// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/onboarding.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * ====================
 * MarkCompleted
 * ====================
 *
 * @generated from protobuf message OnboardingMarkCompletedRequest
 */
export interface OnboardingMarkCompletedRequest {
}
/**
 * @generated from protobuf message OnboardingMarkCompletedReply
 */
export interface OnboardingMarkCompletedReply {
}
/**
 * @generated from protobuf message OnboardingGetChecklistRequest
 */
export interface OnboardingGetChecklistRequest {
}
/**
 * @generated from protobuf message OnboardingGetChecklistReply
 */
export interface OnboardingGetChecklistReply {
    /**
     * @generated from protobuf field: bool company_profile_complete = 1;
     */
    companyProfileComplete: boolean;
    /**
     * @generated from protobuf field: bool factoring_company_added = 2;
     */
    factoringCompanyAdded: boolean;
    /**
     * @generated from protobuf field: bool settlements_personalized = 3;
     */
    settlementsPersonalized: boolean;
    /**
     * @generated from protobuf field: bool invoice_customized = 4;
     */
    invoiceCustomized: boolean;
    /**
     * @generated from protobuf field: bool truck_added = 5;
     */
    truckAdded: boolean;
    /**
     * @generated from protobuf field: bool trailer_added = 6;
     */
    trailerAdded: boolean;
    /**
     * @generated from protobuf field: bool driver_added = 7;
     */
    driverAdded: boolean;
    /**
     * @generated from protobuf field: bool vendor_added = 8;
     */
    vendorAdded: boolean;
    /**
     * @generated from protobuf field: bool gps_eld_provider_connected = 9;
     */
    gpsEldProviderConnected: boolean;
    /**
     * @generated from protobuf field: bool fuel_connected = 10;
     */
    fuelConnected: boolean;
    /**
     * @generated from protobuf field: bool toll_transponder_connected = 11;
     */
    tollTransponderConnected: boolean;
    /**
     * @generated from protobuf field: bool quickbooks_connected = 12;
     */
    quickbooksConnected: boolean;
    /**
     * @generated from protobuf field: bool loadboards_brokers_connected = 13;
     */
    loadboardsBrokersConnected: boolean;
    /**
     * @generated from protobuf field: bool payroll_cycle_created = 14;
     */
    payrollCycleCreated: boolean;
    /**
     * @generated from protobuf field: bool revenue_types_configured = 15;
     */
    revenueTypesConfigured: boolean;
    /**
     * @generated from protobuf field: bool debit_categories_configured = 16;
     */
    debitCategoriesConfigured: boolean;
    /**
     * @generated from protobuf field: bool recurring_transactions_added = 17;
     */
    recurringTransactionsAdded: boolean;
    /**
     * @generated from protobuf field: bool items_shown_to_driver_configured = 18;
     */
    itemsShownToDriverConfigured: boolean;
    /**
     * @generated from protobuf field: bool user_roles_permissions_reviewed = 19;
     */
    userRolesPermissionsReviewed: boolean;
    /**
     * @generated from protobuf field: bool document_types_reviewed = 20;
     */
    documentTypesReviewed: boolean;
    /**
     * @generated from protobuf field: bool invoice_items_reviewed = 21;
     */
    invoiceItemsReviewed: boolean;
    /**
     * @generated from protobuf field: bool loads = 22;
     */
    loads: boolean;
    /**
     * @generated from protobuf field: bool users = 23;
     */
    users: boolean;
    /**
     * @generated from protobuf field: bool subscription_active = 24;
     */
    subscriptionActive: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class OnboardingMarkCompletedRequest$Type extends MessageType<OnboardingMarkCompletedRequest> {
    constructor() {
        super("OnboardingMarkCompletedRequest", []);
    }
    create(value?: PartialMessage<OnboardingMarkCompletedRequest>): OnboardingMarkCompletedRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<OnboardingMarkCompletedRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OnboardingMarkCompletedRequest): OnboardingMarkCompletedRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: OnboardingMarkCompletedRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message OnboardingMarkCompletedRequest
 */
export const OnboardingMarkCompletedRequest = new OnboardingMarkCompletedRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OnboardingMarkCompletedReply$Type extends MessageType<OnboardingMarkCompletedReply> {
    constructor() {
        super("OnboardingMarkCompletedReply", []);
    }
    create(value?: PartialMessage<OnboardingMarkCompletedReply>): OnboardingMarkCompletedReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<OnboardingMarkCompletedReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OnboardingMarkCompletedReply): OnboardingMarkCompletedReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: OnboardingMarkCompletedReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message OnboardingMarkCompletedReply
 */
export const OnboardingMarkCompletedReply = new OnboardingMarkCompletedReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OnboardingGetChecklistRequest$Type extends MessageType<OnboardingGetChecklistRequest> {
    constructor() {
        super("OnboardingGetChecklistRequest", []);
    }
    create(value?: PartialMessage<OnboardingGetChecklistRequest>): OnboardingGetChecklistRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<OnboardingGetChecklistRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OnboardingGetChecklistRequest): OnboardingGetChecklistRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: OnboardingGetChecklistRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message OnboardingGetChecklistRequest
 */
export const OnboardingGetChecklistRequest = new OnboardingGetChecklistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OnboardingGetChecklistReply$Type extends MessageType<OnboardingGetChecklistReply> {
    constructor() {
        super("OnboardingGetChecklistReply", [
            { no: 1, name: "company_profile_complete", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "factoring_company_added", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "settlements_personalized", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "invoice_customized", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "truck_added", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "trailer_added", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "driver_added", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "vendor_added", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "gps_eld_provider_connected", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "fuel_connected", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "toll_transponder_connected", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "quickbooks_connected", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "loadboards_brokers_connected", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "payroll_cycle_created", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "revenue_types_configured", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "debit_categories_configured", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "recurring_transactions_added", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 18, name: "items_shown_to_driver_configured", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 19, name: "user_roles_permissions_reviewed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 20, name: "document_types_reviewed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 21, name: "invoice_items_reviewed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 22, name: "loads", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 23, name: "users", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 24, name: "subscription_active", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<OnboardingGetChecklistReply>): OnboardingGetChecklistReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.companyProfileComplete = false;
        message.factoringCompanyAdded = false;
        message.settlementsPersonalized = false;
        message.invoiceCustomized = false;
        message.truckAdded = false;
        message.trailerAdded = false;
        message.driverAdded = false;
        message.vendorAdded = false;
        message.gpsEldProviderConnected = false;
        message.fuelConnected = false;
        message.tollTransponderConnected = false;
        message.quickbooksConnected = false;
        message.loadboardsBrokersConnected = false;
        message.payrollCycleCreated = false;
        message.revenueTypesConfigured = false;
        message.debitCategoriesConfigured = false;
        message.recurringTransactionsAdded = false;
        message.itemsShownToDriverConfigured = false;
        message.userRolesPermissionsReviewed = false;
        message.documentTypesReviewed = false;
        message.invoiceItemsReviewed = false;
        message.loads = false;
        message.users = false;
        message.subscriptionActive = false;
        if (value !== undefined)
            reflectionMergePartial<OnboardingGetChecklistReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OnboardingGetChecklistReply): OnboardingGetChecklistReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool company_profile_complete */ 1:
                    message.companyProfileComplete = reader.bool();
                    break;
                case /* bool factoring_company_added */ 2:
                    message.factoringCompanyAdded = reader.bool();
                    break;
                case /* bool settlements_personalized */ 3:
                    message.settlementsPersonalized = reader.bool();
                    break;
                case /* bool invoice_customized */ 4:
                    message.invoiceCustomized = reader.bool();
                    break;
                case /* bool truck_added */ 5:
                    message.truckAdded = reader.bool();
                    break;
                case /* bool trailer_added */ 6:
                    message.trailerAdded = reader.bool();
                    break;
                case /* bool driver_added */ 7:
                    message.driverAdded = reader.bool();
                    break;
                case /* bool vendor_added */ 8:
                    message.vendorAdded = reader.bool();
                    break;
                case /* bool gps_eld_provider_connected */ 9:
                    message.gpsEldProviderConnected = reader.bool();
                    break;
                case /* bool fuel_connected */ 10:
                    message.fuelConnected = reader.bool();
                    break;
                case /* bool toll_transponder_connected */ 11:
                    message.tollTransponderConnected = reader.bool();
                    break;
                case /* bool quickbooks_connected */ 12:
                    message.quickbooksConnected = reader.bool();
                    break;
                case /* bool loadboards_brokers_connected */ 13:
                    message.loadboardsBrokersConnected = reader.bool();
                    break;
                case /* bool payroll_cycle_created */ 14:
                    message.payrollCycleCreated = reader.bool();
                    break;
                case /* bool revenue_types_configured */ 15:
                    message.revenueTypesConfigured = reader.bool();
                    break;
                case /* bool debit_categories_configured */ 16:
                    message.debitCategoriesConfigured = reader.bool();
                    break;
                case /* bool recurring_transactions_added */ 17:
                    message.recurringTransactionsAdded = reader.bool();
                    break;
                case /* bool items_shown_to_driver_configured */ 18:
                    message.itemsShownToDriverConfigured = reader.bool();
                    break;
                case /* bool user_roles_permissions_reviewed */ 19:
                    message.userRolesPermissionsReviewed = reader.bool();
                    break;
                case /* bool document_types_reviewed */ 20:
                    message.documentTypesReviewed = reader.bool();
                    break;
                case /* bool invoice_items_reviewed */ 21:
                    message.invoiceItemsReviewed = reader.bool();
                    break;
                case /* bool loads */ 22:
                    message.loads = reader.bool();
                    break;
                case /* bool users */ 23:
                    message.users = reader.bool();
                    break;
                case /* bool subscription_active */ 24:
                    message.subscriptionActive = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OnboardingGetChecklistReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool company_profile_complete = 1; */
        if (message.companyProfileComplete !== false)
            writer.tag(1, WireType.Varint).bool(message.companyProfileComplete);
        /* bool factoring_company_added = 2; */
        if (message.factoringCompanyAdded !== false)
            writer.tag(2, WireType.Varint).bool(message.factoringCompanyAdded);
        /* bool settlements_personalized = 3; */
        if (message.settlementsPersonalized !== false)
            writer.tag(3, WireType.Varint).bool(message.settlementsPersonalized);
        /* bool invoice_customized = 4; */
        if (message.invoiceCustomized !== false)
            writer.tag(4, WireType.Varint).bool(message.invoiceCustomized);
        /* bool truck_added = 5; */
        if (message.truckAdded !== false)
            writer.tag(5, WireType.Varint).bool(message.truckAdded);
        /* bool trailer_added = 6; */
        if (message.trailerAdded !== false)
            writer.tag(6, WireType.Varint).bool(message.trailerAdded);
        /* bool driver_added = 7; */
        if (message.driverAdded !== false)
            writer.tag(7, WireType.Varint).bool(message.driverAdded);
        /* bool vendor_added = 8; */
        if (message.vendorAdded !== false)
            writer.tag(8, WireType.Varint).bool(message.vendorAdded);
        /* bool gps_eld_provider_connected = 9; */
        if (message.gpsEldProviderConnected !== false)
            writer.tag(9, WireType.Varint).bool(message.gpsEldProviderConnected);
        /* bool fuel_connected = 10; */
        if (message.fuelConnected !== false)
            writer.tag(10, WireType.Varint).bool(message.fuelConnected);
        /* bool toll_transponder_connected = 11; */
        if (message.tollTransponderConnected !== false)
            writer.tag(11, WireType.Varint).bool(message.tollTransponderConnected);
        /* bool quickbooks_connected = 12; */
        if (message.quickbooksConnected !== false)
            writer.tag(12, WireType.Varint).bool(message.quickbooksConnected);
        /* bool loadboards_brokers_connected = 13; */
        if (message.loadboardsBrokersConnected !== false)
            writer.tag(13, WireType.Varint).bool(message.loadboardsBrokersConnected);
        /* bool payroll_cycle_created = 14; */
        if (message.payrollCycleCreated !== false)
            writer.tag(14, WireType.Varint).bool(message.payrollCycleCreated);
        /* bool revenue_types_configured = 15; */
        if (message.revenueTypesConfigured !== false)
            writer.tag(15, WireType.Varint).bool(message.revenueTypesConfigured);
        /* bool debit_categories_configured = 16; */
        if (message.debitCategoriesConfigured !== false)
            writer.tag(16, WireType.Varint).bool(message.debitCategoriesConfigured);
        /* bool recurring_transactions_added = 17; */
        if (message.recurringTransactionsAdded !== false)
            writer.tag(17, WireType.Varint).bool(message.recurringTransactionsAdded);
        /* bool items_shown_to_driver_configured = 18; */
        if (message.itemsShownToDriverConfigured !== false)
            writer.tag(18, WireType.Varint).bool(message.itemsShownToDriverConfigured);
        /* bool user_roles_permissions_reviewed = 19; */
        if (message.userRolesPermissionsReviewed !== false)
            writer.tag(19, WireType.Varint).bool(message.userRolesPermissionsReviewed);
        /* bool document_types_reviewed = 20; */
        if (message.documentTypesReviewed !== false)
            writer.tag(20, WireType.Varint).bool(message.documentTypesReviewed);
        /* bool invoice_items_reviewed = 21; */
        if (message.invoiceItemsReviewed !== false)
            writer.tag(21, WireType.Varint).bool(message.invoiceItemsReviewed);
        /* bool loads = 22; */
        if (message.loads !== false)
            writer.tag(22, WireType.Varint).bool(message.loads);
        /* bool users = 23; */
        if (message.users !== false)
            writer.tag(23, WireType.Varint).bool(message.users);
        /* bool subscription_active = 24; */
        if (message.subscriptionActive !== false)
            writer.tag(24, WireType.Varint).bool(message.subscriptionActive);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message OnboardingGetChecklistReply
 */
export const OnboardingGetChecklistReply = new OnboardingGetChecklistReply$Type();
/**
 * @generated ServiceType for protobuf service OnboardingService
 */
export const OnboardingService = new ServiceType("OnboardingService", [
    { name: "OnboardingGetChecklist", options: {}, I: OnboardingGetChecklistRequest, O: OnboardingGetChecklistReply },
    { name: "OnboardingMarkCompleted", options: {}, I: OnboardingMarkCompletedRequest, O: OnboardingMarkCompletedReply }
]);
