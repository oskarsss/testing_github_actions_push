// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/integration_provider_trufund.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { IntegrationProviderTruFund } from "./integration_provider_trufund";
import type { IP_TruFund_Invoices_Create_Reply } from "./integration_provider_trufund";
import type { IP_TruFund_Invoices_Create_Request } from "./integration_provider_trufund";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { IP_TruFund_Invoices_PreviewReply } from "./integration_provider_trufund";
import type { IP_TruFund_Invoices_PreviewRequest } from "./integration_provider_trufund";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service IntegrationProviderTruFund
 */
export interface IIntegrationProviderTruFundClient {
    /**
     * @generated from protobuf rpc: IP_TruFund_Invoices_Preview(IP_TruFund_Invoices_PreviewRequest) returns (IP_TruFund_Invoices_PreviewReply);
     */
    iPTruFundInvoicesPreview(input: IP_TruFund_Invoices_PreviewRequest, options?: RpcOptions): UnaryCall<IP_TruFund_Invoices_PreviewRequest, IP_TruFund_Invoices_PreviewReply>;
    /**
     * @generated from protobuf rpc: IP_TruFund_Invoices_Create(IP_TruFund_Invoices_Create_Request) returns (stream IP_TruFund_Invoices_Create_Reply);
     */
    iPTruFundInvoicesCreate(input: IP_TruFund_Invoices_Create_Request, options?: RpcOptions): ServerStreamingCall<IP_TruFund_Invoices_Create_Request, IP_TruFund_Invoices_Create_Reply>;
}
/**
 * @generated from protobuf service IntegrationProviderTruFund
 */
export class IntegrationProviderTruFundClient implements IIntegrationProviderTruFundClient, ServiceInfo {
    typeName = IntegrationProviderTruFund.typeName;
    methods = IntegrationProviderTruFund.methods;
    options = IntegrationProviderTruFund.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: IP_TruFund_Invoices_Preview(IP_TruFund_Invoices_PreviewRequest) returns (IP_TruFund_Invoices_PreviewReply);
     */
    iPTruFundInvoicesPreview(input: IP_TruFund_Invoices_PreviewRequest, options?: RpcOptions): UnaryCall<IP_TruFund_Invoices_PreviewRequest, IP_TruFund_Invoices_PreviewReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<IP_TruFund_Invoices_PreviewRequest, IP_TruFund_Invoices_PreviewReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: IP_TruFund_Invoices_Create(IP_TruFund_Invoices_Create_Request) returns (stream IP_TruFund_Invoices_Create_Reply);
     */
    iPTruFundInvoicesCreate(input: IP_TruFund_Invoices_Create_Request, options?: RpcOptions): ServerStreamingCall<IP_TruFund_Invoices_Create_Request, IP_TruFund_Invoices_Create_Reply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<IP_TruFund_Invoices_Create_Request, IP_TruFund_Invoices_Create_Reply>("serverStreaming", this._transport, method, opt, input);
    }
}
