// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/truck.time_off.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * /////////////////////////
 * TruckTimeOffCreate
 * /////////////////////////
 *
 * @generated from protobuf message TruckTimeOffCreateRequest
 */
export interface TruckTimeOffCreateRequest {
    /**
     * @generated from protobuf field: string truck_id = 1;
     */
    truckId: string;
    /**
     * @generated from protobuf field: string start_at = 2;
     */
    startAt: string;
    /**
     * @generated from protobuf field: string end_at = 3;
     */
    endAt: string;
    /**
     * @generated from protobuf field: string description = 4;
     */
    description: string;
}
/**
 * @generated from protobuf message TruckTimeOffCreateReply
 */
export interface TruckTimeOffCreateReply {
    /**
     * @generated from protobuf field: string truck_time_off_id = 1;
     */
    truckTimeOffId: string;
}
/**
 * /////////////////////////
 * TruckTimeOffUpdate
 * /////////////////////////
 *
 * @generated from protobuf message TruckTimeOffUpdateRequest
 */
export interface TruckTimeOffUpdateRequest {
    /**
     * @generated from protobuf field: string truck_id = 1;
     */
    truckId: string;
    /**
     * @generated from protobuf field: string truck_time_off_id = 2;
     */
    truckTimeOffId: string;
    /**
     * @generated from protobuf field: string start_at = 3;
     */
    startAt: string;
    /**
     * @generated from protobuf field: string end_at = 4;
     */
    endAt: string;
    /**
     * @generated from protobuf field: string description = 5;
     */
    description: string;
}
/**
 * @generated from protobuf message TruckTimeOffUpdateReply
 */
export interface TruckTimeOffUpdateReply {
}
/**
 * /////////////////////////
 * TruckTimeDeleteOff
 * /////////////////////////
 *
 * @generated from protobuf message TruckTimeOffDeleteRequest
 */
export interface TruckTimeOffDeleteRequest {
    /**
     * @generated from protobuf field: string truck_id = 1;
     */
    truckId: string;
    /**
     * @generated from protobuf field: string truck_time_off_id = 2;
     */
    truckTimeOffId: string;
}
/**
 * @generated from protobuf message TruckTimeOffDeleteReply
 */
export interface TruckTimeOffDeleteReply {
}
// @generated message type with reflection information, may provide speed optimized methods
class TruckTimeOffCreateRequest$Type extends MessageType<TruckTimeOffCreateRequest> {
    constructor() {
        super("TruckTimeOffCreateRequest", [
            { no: 1, name: "truck_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "start_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "end_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TruckTimeOffCreateRequest>): TruckTimeOffCreateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.truckId = "";
        message.startAt = "";
        message.endAt = "";
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<TruckTimeOffCreateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TruckTimeOffCreateRequest): TruckTimeOffCreateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string truck_id */ 1:
                    message.truckId = reader.string();
                    break;
                case /* string start_at */ 2:
                    message.startAt = reader.string();
                    break;
                case /* string end_at */ 3:
                    message.endAt = reader.string();
                    break;
                case /* string description */ 4:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TruckTimeOffCreateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string truck_id = 1; */
        if (message.truckId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.truckId);
        /* string start_at = 2; */
        if (message.startAt !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.startAt);
        /* string end_at = 3; */
        if (message.endAt !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.endAt);
        /* string description = 4; */
        if (message.description !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TruckTimeOffCreateRequest
 */
export const TruckTimeOffCreateRequest = new TruckTimeOffCreateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TruckTimeOffCreateReply$Type extends MessageType<TruckTimeOffCreateReply> {
    constructor() {
        super("TruckTimeOffCreateReply", [
            { no: 1, name: "truck_time_off_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TruckTimeOffCreateReply>): TruckTimeOffCreateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.truckTimeOffId = "";
        if (value !== undefined)
            reflectionMergePartial<TruckTimeOffCreateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TruckTimeOffCreateReply): TruckTimeOffCreateReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string truck_time_off_id */ 1:
                    message.truckTimeOffId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TruckTimeOffCreateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string truck_time_off_id = 1; */
        if (message.truckTimeOffId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.truckTimeOffId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TruckTimeOffCreateReply
 */
export const TruckTimeOffCreateReply = new TruckTimeOffCreateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TruckTimeOffUpdateRequest$Type extends MessageType<TruckTimeOffUpdateRequest> {
    constructor() {
        super("TruckTimeOffUpdateRequest", [
            { no: 1, name: "truck_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "truck_time_off_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "start_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "end_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TruckTimeOffUpdateRequest>): TruckTimeOffUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.truckId = "";
        message.truckTimeOffId = "";
        message.startAt = "";
        message.endAt = "";
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<TruckTimeOffUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TruckTimeOffUpdateRequest): TruckTimeOffUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string truck_id */ 1:
                    message.truckId = reader.string();
                    break;
                case /* string truck_time_off_id */ 2:
                    message.truckTimeOffId = reader.string();
                    break;
                case /* string start_at */ 3:
                    message.startAt = reader.string();
                    break;
                case /* string end_at */ 4:
                    message.endAt = reader.string();
                    break;
                case /* string description */ 5:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TruckTimeOffUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string truck_id = 1; */
        if (message.truckId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.truckId);
        /* string truck_time_off_id = 2; */
        if (message.truckTimeOffId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.truckTimeOffId);
        /* string start_at = 3; */
        if (message.startAt !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.startAt);
        /* string end_at = 4; */
        if (message.endAt !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.endAt);
        /* string description = 5; */
        if (message.description !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TruckTimeOffUpdateRequest
 */
export const TruckTimeOffUpdateRequest = new TruckTimeOffUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TruckTimeOffUpdateReply$Type extends MessageType<TruckTimeOffUpdateReply> {
    constructor() {
        super("TruckTimeOffUpdateReply", []);
    }
    create(value?: PartialMessage<TruckTimeOffUpdateReply>): TruckTimeOffUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<TruckTimeOffUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TruckTimeOffUpdateReply): TruckTimeOffUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: TruckTimeOffUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TruckTimeOffUpdateReply
 */
export const TruckTimeOffUpdateReply = new TruckTimeOffUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TruckTimeOffDeleteRequest$Type extends MessageType<TruckTimeOffDeleteRequest> {
    constructor() {
        super("TruckTimeOffDeleteRequest", [
            { no: 1, name: "truck_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "truck_time_off_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TruckTimeOffDeleteRequest>): TruckTimeOffDeleteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.truckId = "";
        message.truckTimeOffId = "";
        if (value !== undefined)
            reflectionMergePartial<TruckTimeOffDeleteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TruckTimeOffDeleteRequest): TruckTimeOffDeleteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string truck_id */ 1:
                    message.truckId = reader.string();
                    break;
                case /* string truck_time_off_id */ 2:
                    message.truckTimeOffId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TruckTimeOffDeleteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string truck_id = 1; */
        if (message.truckId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.truckId);
        /* string truck_time_off_id = 2; */
        if (message.truckTimeOffId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.truckTimeOffId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TruckTimeOffDeleteRequest
 */
export const TruckTimeOffDeleteRequest = new TruckTimeOffDeleteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TruckTimeOffDeleteReply$Type extends MessageType<TruckTimeOffDeleteReply> {
    constructor() {
        super("TruckTimeOffDeleteReply", []);
    }
    create(value?: PartialMessage<TruckTimeOffDeleteReply>): TruckTimeOffDeleteReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<TruckTimeOffDeleteReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TruckTimeOffDeleteReply): TruckTimeOffDeleteReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: TruckTimeOffDeleteReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TruckTimeOffDeleteReply
 */
export const TruckTimeOffDeleteReply = new TruckTimeOffDeleteReply$Type();
/**
 * @generated ServiceType for protobuf service TruckTimeOffService
 */
export const TruckTimeOffService = new ServiceType("TruckTimeOffService", [
    { name: "TruckTimeOffCreate", options: {}, I: TruckTimeOffCreateRequest, O: TruckTimeOffCreateReply },
    { name: "TruckTimeOffUpdate", options: {}, I: TruckTimeOffUpdateRequest, O: TruckTimeOffUpdateReply },
    { name: "TruckTimeOffDelete", options: {}, I: TruckTimeOffDeleteRequest, O: TruckTimeOffDeleteReply }
]);
