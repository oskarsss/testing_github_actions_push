// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/manifest_driver_pay_items.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ManifestDriverPayItemsService } from "./manifest_driver_pay_items";
import type { ManifestDriverPayItemDeleteReply } from "./manifest_driver_pay_items";
import type { ManifestDriverPayItemDeleteRequest } from "./manifest_driver_pay_items";
import type { ManifestDriverPayItemUpdateReply } from "./manifest_driver_pay_items";
import type { ManifestDriverPayItemUpdateRequest } from "./manifest_driver_pay_items";
import type { ManifestDriverPayItemRetrieveReply } from "./manifest_driver_pay_items";
import type { ManifestDriverPayItemRetrieveRequest } from "./manifest_driver_pay_items";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ManifestDriverPayItemAddReply } from "./manifest_driver_pay_items";
import type { ManifestDriverPayItemAddRequest } from "./manifest_driver_pay_items";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ManifestDriverPayItemsService
 */
export interface IManifestDriverPayItemsServiceClient {
    /**
     * @generated from protobuf rpc: ManifestDriverPayItemAdd(ManifestDriverPayItemAddRequest) returns (ManifestDriverPayItemAddReply);
     */
    manifestDriverPayItemAdd(input: ManifestDriverPayItemAddRequest, options?: RpcOptions): UnaryCall<ManifestDriverPayItemAddRequest, ManifestDriverPayItemAddReply>;
    /**
     * @generated from protobuf rpc: ManifestDriverPayItemRetrieve(ManifestDriverPayItemRetrieveRequest) returns (ManifestDriverPayItemRetrieveReply);
     */
    manifestDriverPayItemRetrieve(input: ManifestDriverPayItemRetrieveRequest, options?: RpcOptions): UnaryCall<ManifestDriverPayItemRetrieveRequest, ManifestDriverPayItemRetrieveReply>;
    /**
     * @generated from protobuf rpc: ManifestDriverPayItemUpdate(ManifestDriverPayItemUpdateRequest) returns (ManifestDriverPayItemUpdateReply);
     */
    manifestDriverPayItemUpdate(input: ManifestDriverPayItemUpdateRequest, options?: RpcOptions): UnaryCall<ManifestDriverPayItemUpdateRequest, ManifestDriverPayItemUpdateReply>;
    /**
     * @generated from protobuf rpc: ManifestDriverPayItemDelete(ManifestDriverPayItemDeleteRequest) returns (ManifestDriverPayItemDeleteReply);
     */
    manifestDriverPayItemDelete(input: ManifestDriverPayItemDeleteRequest, options?: RpcOptions): UnaryCall<ManifestDriverPayItemDeleteRequest, ManifestDriverPayItemDeleteReply>;
}
/**
 * @generated from protobuf service ManifestDriverPayItemsService
 */
export class ManifestDriverPayItemsServiceClient implements IManifestDriverPayItemsServiceClient, ServiceInfo {
    typeName = ManifestDriverPayItemsService.typeName;
    methods = ManifestDriverPayItemsService.methods;
    options = ManifestDriverPayItemsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ManifestDriverPayItemAdd(ManifestDriverPayItemAddRequest) returns (ManifestDriverPayItemAddReply);
     */
    manifestDriverPayItemAdd(input: ManifestDriverPayItemAddRequest, options?: RpcOptions): UnaryCall<ManifestDriverPayItemAddRequest, ManifestDriverPayItemAddReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ManifestDriverPayItemAddRequest, ManifestDriverPayItemAddReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ManifestDriverPayItemRetrieve(ManifestDriverPayItemRetrieveRequest) returns (ManifestDriverPayItemRetrieveReply);
     */
    manifestDriverPayItemRetrieve(input: ManifestDriverPayItemRetrieveRequest, options?: RpcOptions): UnaryCall<ManifestDriverPayItemRetrieveRequest, ManifestDriverPayItemRetrieveReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ManifestDriverPayItemRetrieveRequest, ManifestDriverPayItemRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ManifestDriverPayItemUpdate(ManifestDriverPayItemUpdateRequest) returns (ManifestDriverPayItemUpdateReply);
     */
    manifestDriverPayItemUpdate(input: ManifestDriverPayItemUpdateRequest, options?: RpcOptions): UnaryCall<ManifestDriverPayItemUpdateRequest, ManifestDriverPayItemUpdateReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ManifestDriverPayItemUpdateRequest, ManifestDriverPayItemUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ManifestDriverPayItemDelete(ManifestDriverPayItemDeleteRequest) returns (ManifestDriverPayItemDeleteReply);
     */
    manifestDriverPayItemDelete(input: ManifestDriverPayItemDeleteRequest, options?: RpcOptions): UnaryCall<ManifestDriverPayItemDeleteRequest, ManifestDriverPayItemDeleteReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<ManifestDriverPayItemDeleteRequest, ManifestDriverPayItemDeleteReply>("unary", this._transport, method, opt, input);
    }
}
