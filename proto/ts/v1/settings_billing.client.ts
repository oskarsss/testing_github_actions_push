// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/settings_billing.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SettingsBillingService } from "./settings_billing";
import type { CancelAccountReply } from "./settings_billing";
import type { CancelAccountRequest } from "./settings_billing";
import type { CreateSessionReply } from "./settings_billing";
import type { CreateSessionRequest } from "./settings_billing";
import type { GetInvoicesReply } from "./settings_billing";
import type { GetInvoicesRequest } from "./settings_billing";
import type { CheckoutReply } from "./settings_billing";
import type { CheckoutRequest } from "./settings_billing";
import type { GetSubscriptionReply } from "./settings_billing";
import type { GetSubscriptionRequest } from "./settings_billing";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetPaymentMethodReply } from "./settings_billing";
import type { GetPaymentMethodRequest } from "./settings_billing";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service SettingsBillingService
 */
export interface ISettingsBillingServiceClient {
    /**
     * @generated from protobuf rpc: GetPaymentMethod(GetPaymentMethodRequest) returns (GetPaymentMethodReply);
     */
    getPaymentMethod(input: GetPaymentMethodRequest, options?: RpcOptions): UnaryCall<GetPaymentMethodRequest, GetPaymentMethodReply>;
    /**
     * @generated from protobuf rpc: GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionReply);
     */
    getSubscription(input: GetSubscriptionRequest, options?: RpcOptions): UnaryCall<GetSubscriptionRequest, GetSubscriptionReply>;
    /**
     * @generated from protobuf rpc: Checkout(CheckoutRequest) returns (CheckoutReply);
     */
    checkout(input: CheckoutRequest, options?: RpcOptions): UnaryCall<CheckoutRequest, CheckoutReply>;
    /**
     * @generated from protobuf rpc: GetInvoices(GetInvoicesRequest) returns (GetInvoicesReply);
     */
    getInvoices(input: GetInvoicesRequest, options?: RpcOptions): UnaryCall<GetInvoicesRequest, GetInvoicesReply>;
    /**
     * @generated from protobuf rpc: CreateSession(CreateSessionRequest) returns (CreateSessionReply);
     */
    createSession(input: CreateSessionRequest, options?: RpcOptions): UnaryCall<CreateSessionRequest, CreateSessionReply>;
    /**
     * @generated from protobuf rpc: CancelAccount(CancelAccountRequest) returns (CancelAccountReply);
     */
    cancelAccount(input: CancelAccountRequest, options?: RpcOptions): UnaryCall<CancelAccountRequest, CancelAccountReply>;
}
/**
 * @generated from protobuf service SettingsBillingService
 */
export class SettingsBillingServiceClient implements ISettingsBillingServiceClient, ServiceInfo {
    typeName = SettingsBillingService.typeName;
    methods = SettingsBillingService.methods;
    options = SettingsBillingService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetPaymentMethod(GetPaymentMethodRequest) returns (GetPaymentMethodReply);
     */
    getPaymentMethod(input: GetPaymentMethodRequest, options?: RpcOptions): UnaryCall<GetPaymentMethodRequest, GetPaymentMethodReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetPaymentMethodRequest, GetPaymentMethodReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionReply);
     */
    getSubscription(input: GetSubscriptionRequest, options?: RpcOptions): UnaryCall<GetSubscriptionRequest, GetSubscriptionReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetSubscriptionRequest, GetSubscriptionReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Checkout(CheckoutRequest) returns (CheckoutReply);
     */
    checkout(input: CheckoutRequest, options?: RpcOptions): UnaryCall<CheckoutRequest, CheckoutReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CheckoutRequest, CheckoutReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetInvoices(GetInvoicesRequest) returns (GetInvoicesReply);
     */
    getInvoices(input: GetInvoicesRequest, options?: RpcOptions): UnaryCall<GetInvoicesRequest, GetInvoicesReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetInvoicesRequest, GetInvoicesReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateSession(CreateSessionRequest) returns (CreateSessionReply);
     */
    createSession(input: CreateSessionRequest, options?: RpcOptions): UnaryCall<CreateSessionRequest, CreateSessionReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateSessionRequest, CreateSessionReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CancelAccount(CancelAccountRequest) returns (CancelAccountReply);
     */
    cancelAccount(input: CancelAccountRequest, options?: RpcOptions): UnaryCall<CancelAccountRequest, CancelAccountReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<CancelAccountRequest, CancelAccountReply>("unary", this._transport, method, opt, input);
    }
}
