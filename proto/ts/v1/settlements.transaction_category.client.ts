// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/settlements.transaction_category.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SettlementTransactionCategoriesService } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryRestoreReply } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryRestoreRequest } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryDeleteReply } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryDeleteRequest } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryUpdateReply } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryUpdateRequest } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryGetReply } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryGetRequest } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryRetrieveReply } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryRetrieveRequest } from "./settlements.transaction_category";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { SettlementTransactionCategoryCreateReply } from "./settlements.transaction_category";
import type { SettlementTransactionCategoryCreateRequest } from "./settlements.transaction_category";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service SettlementTransactionCategoriesService
 */
export interface ISettlementTransactionCategoriesServiceClient {
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryCreate(SettlementTransactionCategoryCreateRequest) returns (SettlementTransactionCategoryCreateReply);
     */
    settlementTransactionCategoryCreate(input: SettlementTransactionCategoryCreateRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryCreateRequest, SettlementTransactionCategoryCreateReply>;
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryRetrieve(SettlementTransactionCategoryRetrieveRequest) returns (SettlementTransactionCategoryRetrieveReply);
     */
    settlementTransactionCategoryRetrieve(input: SettlementTransactionCategoryRetrieveRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryRetrieveRequest, SettlementTransactionCategoryRetrieveReply>;
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryGet(SettlementTransactionCategoryGetRequest) returns (SettlementTransactionCategoryGetReply);
     */
    settlementTransactionCategoryGet(input: SettlementTransactionCategoryGetRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryGetRequest, SettlementTransactionCategoryGetReply>;
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryUpdate(SettlementTransactionCategoryUpdateRequest) returns (SettlementTransactionCategoryUpdateReply);
     */
    settlementTransactionCategoryUpdate(input: SettlementTransactionCategoryUpdateRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryUpdateRequest, SettlementTransactionCategoryUpdateReply>;
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryDelete(SettlementTransactionCategoryDeleteRequest) returns (SettlementTransactionCategoryDeleteReply);
     */
    settlementTransactionCategoryDelete(input: SettlementTransactionCategoryDeleteRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryDeleteRequest, SettlementTransactionCategoryDeleteReply>;
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryRestore(SettlementTransactionCategoryRestoreRequest) returns (SettlementTransactionCategoryRestoreReply);
     */
    settlementTransactionCategoryRestore(input: SettlementTransactionCategoryRestoreRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryRestoreRequest, SettlementTransactionCategoryRestoreReply>;
}
/**
 * @generated from protobuf service SettlementTransactionCategoriesService
 */
export class SettlementTransactionCategoriesServiceClient implements ISettlementTransactionCategoriesServiceClient, ServiceInfo {
    typeName = SettlementTransactionCategoriesService.typeName;
    methods = SettlementTransactionCategoriesService.methods;
    options = SettlementTransactionCategoriesService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryCreate(SettlementTransactionCategoryCreateRequest) returns (SettlementTransactionCategoryCreateReply);
     */
    settlementTransactionCategoryCreate(input: SettlementTransactionCategoryCreateRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryCreateRequest, SettlementTransactionCategoryCreateReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SettlementTransactionCategoryCreateRequest, SettlementTransactionCategoryCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryRetrieve(SettlementTransactionCategoryRetrieveRequest) returns (SettlementTransactionCategoryRetrieveReply);
     */
    settlementTransactionCategoryRetrieve(input: SettlementTransactionCategoryRetrieveRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryRetrieveRequest, SettlementTransactionCategoryRetrieveReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<SettlementTransactionCategoryRetrieveRequest, SettlementTransactionCategoryRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryGet(SettlementTransactionCategoryGetRequest) returns (SettlementTransactionCategoryGetReply);
     */
    settlementTransactionCategoryGet(input: SettlementTransactionCategoryGetRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryGetRequest, SettlementTransactionCategoryGetReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<SettlementTransactionCategoryGetRequest, SettlementTransactionCategoryGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryUpdate(SettlementTransactionCategoryUpdateRequest) returns (SettlementTransactionCategoryUpdateReply);
     */
    settlementTransactionCategoryUpdate(input: SettlementTransactionCategoryUpdateRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryUpdateRequest, SettlementTransactionCategoryUpdateReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<SettlementTransactionCategoryUpdateRequest, SettlementTransactionCategoryUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryDelete(SettlementTransactionCategoryDeleteRequest) returns (SettlementTransactionCategoryDeleteReply);
     */
    settlementTransactionCategoryDelete(input: SettlementTransactionCategoryDeleteRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryDeleteRequest, SettlementTransactionCategoryDeleteReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<SettlementTransactionCategoryDeleteRequest, SettlementTransactionCategoryDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SettlementTransactionCategoryRestore(SettlementTransactionCategoryRestoreRequest) returns (SettlementTransactionCategoryRestoreReply);
     */
    settlementTransactionCategoryRestore(input: SettlementTransactionCategoryRestoreRequest, options?: RpcOptions): UnaryCall<SettlementTransactionCategoryRestoreRequest, SettlementTransactionCategoryRestoreReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<SettlementTransactionCategoryRestoreRequest, SettlementTransactionCategoryRestoreReply>("unary", this._transport, method, opt, input);
    }
}
