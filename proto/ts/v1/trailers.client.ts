// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/trailers.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TrailersService } from "./trailers";
import type { TrailerCompanyRemoveReply } from "./trailers";
import type { TrailerCompanyRemoveRequest } from "./trailers";
import type { TrailerCompanyAssignReply } from "./trailers";
import type { TrailerCompanyAssignRequest } from "./trailers";
import type { TrailerGetReply } from "./trailers";
import type { TrailerGetRequest } from "./trailers";
import type { TrailerUpdateReply } from "./trailers";
import type { TrailerUpdateRequest } from "./trailers";
import type { TrailerParkingLocationUpdateReply } from "./trailers";
import type { TrailerParkingLocationUpdateRequest } from "./trailers";
import type { TrailerStatusUpdateReply } from "./trailers";
import type { TrailerStatusUpdateRequest } from "./trailers";
import type { TrailerDeleteReply } from "./trailers";
import type { TrailerDeleteRequest } from "./trailers";
import type { TrailerRetrieveReply } from "./trailers";
import type { TrailerRetrieveRequest } from "./trailers";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { TrailerCreateReply } from "./trailers";
import type { TrailerCreateRequest } from "./trailers";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service TrailersService
 */
export interface ITrailersServiceClient {
    /**
     * @generated from protobuf rpc: TrailerCreate(TrailerCreateRequest) returns (TrailerCreateReply);
     */
    trailerCreate(input: TrailerCreateRequest, options?: RpcOptions): UnaryCall<TrailerCreateRequest, TrailerCreateReply>;
    /**
     * @generated from protobuf rpc: TrailerRetrieve(TrailerRetrieveRequest) returns (TrailerRetrieveReply);
     */
    trailerRetrieve(input: TrailerRetrieveRequest, options?: RpcOptions): UnaryCall<TrailerRetrieveRequest, TrailerRetrieveReply>;
    /**
     * @generated from protobuf rpc: TrailerDelete(TrailerDeleteRequest) returns (TrailerDeleteReply);
     */
    trailerDelete(input: TrailerDeleteRequest, options?: RpcOptions): UnaryCall<TrailerDeleteRequest, TrailerDeleteReply>;
    /**
     * @generated from protobuf rpc: TrailerStatusUpdate(TrailerStatusUpdateRequest) returns (TrailerStatusUpdateReply);
     */
    trailerStatusUpdate(input: TrailerStatusUpdateRequest, options?: RpcOptions): UnaryCall<TrailerStatusUpdateRequest, TrailerStatusUpdateReply>;
    /**
     * @generated from protobuf rpc: TrailerParkingLocationUpdate(TrailerParkingLocationUpdateRequest) returns (TrailerParkingLocationUpdateReply);
     */
    trailerParkingLocationUpdate(input: TrailerParkingLocationUpdateRequest, options?: RpcOptions): UnaryCall<TrailerParkingLocationUpdateRequest, TrailerParkingLocationUpdateReply>;
    /**
     * @generated from protobuf rpc: TrailerUpdate(TrailerUpdateRequest) returns (TrailerUpdateReply);
     */
    trailerUpdate(input: TrailerUpdateRequest, options?: RpcOptions): UnaryCall<TrailerUpdateRequest, TrailerUpdateReply>;
    /**
     * @generated from protobuf rpc: TrailerGet(TrailerGetRequest) returns (TrailerGetReply);
     */
    trailerGet(input: TrailerGetRequest, options?: RpcOptions): UnaryCall<TrailerGetRequest, TrailerGetReply>;
    /**
     * @generated from protobuf rpc: TrailerCompanyAssign(TrailerCompanyAssignRequest) returns (TrailerCompanyAssignReply);
     */
    trailerCompanyAssign(input: TrailerCompanyAssignRequest, options?: RpcOptions): UnaryCall<TrailerCompanyAssignRequest, TrailerCompanyAssignReply>;
    /**
     * @generated from protobuf rpc: TrailerCompanyRemove(TrailerCompanyRemoveRequest) returns (TrailerCompanyRemoveReply);
     */
    trailerCompanyRemove(input: TrailerCompanyRemoveRequest, options?: RpcOptions): UnaryCall<TrailerCompanyRemoveRequest, TrailerCompanyRemoveReply>;
}
/**
 * @generated from protobuf service TrailersService
 */
export class TrailersServiceClient implements ITrailersServiceClient, ServiceInfo {
    typeName = TrailersService.typeName;
    methods = TrailersService.methods;
    options = TrailersService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: TrailerCreate(TrailerCreateRequest) returns (TrailerCreateReply);
     */
    trailerCreate(input: TrailerCreateRequest, options?: RpcOptions): UnaryCall<TrailerCreateRequest, TrailerCreateReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerCreateRequest, TrailerCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrailerRetrieve(TrailerRetrieveRequest) returns (TrailerRetrieveReply);
     */
    trailerRetrieve(input: TrailerRetrieveRequest, options?: RpcOptions): UnaryCall<TrailerRetrieveRequest, TrailerRetrieveReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerRetrieveRequest, TrailerRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrailerDelete(TrailerDeleteRequest) returns (TrailerDeleteReply);
     */
    trailerDelete(input: TrailerDeleteRequest, options?: RpcOptions): UnaryCall<TrailerDeleteRequest, TrailerDeleteReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerDeleteRequest, TrailerDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrailerStatusUpdate(TrailerStatusUpdateRequest) returns (TrailerStatusUpdateReply);
     */
    trailerStatusUpdate(input: TrailerStatusUpdateRequest, options?: RpcOptions): UnaryCall<TrailerStatusUpdateRequest, TrailerStatusUpdateReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerStatusUpdateRequest, TrailerStatusUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrailerParkingLocationUpdate(TrailerParkingLocationUpdateRequest) returns (TrailerParkingLocationUpdateReply);
     */
    trailerParkingLocationUpdate(input: TrailerParkingLocationUpdateRequest, options?: RpcOptions): UnaryCall<TrailerParkingLocationUpdateRequest, TrailerParkingLocationUpdateReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerParkingLocationUpdateRequest, TrailerParkingLocationUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrailerUpdate(TrailerUpdateRequest) returns (TrailerUpdateReply);
     */
    trailerUpdate(input: TrailerUpdateRequest, options?: RpcOptions): UnaryCall<TrailerUpdateRequest, TrailerUpdateReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerUpdateRequest, TrailerUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrailerGet(TrailerGetRequest) returns (TrailerGetReply);
     */
    trailerGet(input: TrailerGetRequest, options?: RpcOptions): UnaryCall<TrailerGetRequest, TrailerGetReply> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerGetRequest, TrailerGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrailerCompanyAssign(TrailerCompanyAssignRequest) returns (TrailerCompanyAssignReply);
     */
    trailerCompanyAssign(input: TrailerCompanyAssignRequest, options?: RpcOptions): UnaryCall<TrailerCompanyAssignRequest, TrailerCompanyAssignReply> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerCompanyAssignRequest, TrailerCompanyAssignReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrailerCompanyRemove(TrailerCompanyRemoveRequest) returns (TrailerCompanyRemoveReply);
     */
    trailerCompanyRemove(input: TrailerCompanyRemoveRequest, options?: RpcOptions): UnaryCall<TrailerCompanyRemoveRequest, TrailerCompanyRemoveReply> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrailerCompanyRemoveRequest, TrailerCompanyRemoveReply>("unary", this._transport, method, opt, input);
    }
}
