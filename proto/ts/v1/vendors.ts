// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/vendors.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { VendorModel_Vendor } from "./models/model_vendor";
import { VendorModel_Type } from "./models/model_vendor";
/**
 * @generated from protobuf message VendorCreateRequest
 */
export interface VendorCreateRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: VendorModel.Type type = 3;
     */
    type: VendorModel_Type;
    /**
     * @generated from protobuf field: optional string friendly_name = 2;
     */
    friendlyName?: string;
    /**
     * @generated from protobuf field: optional string email = 4;
     */
    email?: string;
    /**
     * @generated from protobuf field: optional string address_line_1 = 5;
     */
    addressLine1?: string;
    /**
     * @generated from protobuf field: optional string address_line_2 = 6;
     */
    addressLine2?: string;
    /**
     * @generated from protobuf field: optional string address_city = 7;
     */
    addressCity?: string;
    /**
     * @generated from protobuf field: optional string address_state = 8;
     */
    addressState?: string;
    /**
     * @generated from protobuf field: optional string address_postal_code = 9;
     */
    addressPostalCode?: string;
    /**
     * @generated from protobuf field: optional string tax_id = 10;
     */
    taxId?: string;
    /**
     * @generated from protobuf field: optional string contact_name = 11;
     */
    contactName?: string;
    /**
     * @generated from protobuf field: optional string contact_email = 12;
     */
    contactEmail?: string;
    /**
     * @generated from protobuf field: optional string contact_phone_number = 13;
     */
    contactPhoneNumber?: string;
}
/**
 * @generated from protobuf message VendorCreateReply
 */
export interface VendorCreateReply {
    /**
     * @generated from protobuf field: string vendor_id = 1;
     */
    vendorId: string;
}
/**
 * @generated from protobuf message VendorRetrieveRequest
 */
export interface VendorRetrieveRequest {
    /**
     * @generated from protobuf field: string vendor_id = 1;
     */
    vendorId: string;
}
/**
 * @generated from protobuf message VendorRetrieveReply
 */
export interface VendorRetrieveReply {
    /**
     * @generated from protobuf field: VendorModel.Vendor vendor = 1;
     */
    vendor?: VendorModel_Vendor;
}
/**
 * @generated from protobuf message VendorGetRequest
 */
export interface VendorGetRequest {
}
/**
 * @generated from protobuf message VendorGetReply
 */
export interface VendorGetReply {
    /**
     * @generated from protobuf field: repeated VendorModel.Vendor vendors = 1;
     */
    vendors: VendorModel_Vendor[];
}
/**
 * @generated from protobuf message VendorUpdateRequest
 */
export interface VendorUpdateRequest {
    /**
     * @generated from protobuf field: string vendor_id = 1;
     */
    vendorId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: VendorModel.Type type = 3;
     */
    type: VendorModel_Type;
    /**
     * @generated from protobuf field: string friendly_name = 4;
     */
    friendlyName: string;
    /**
     * @generated from protobuf field: string email = 5;
     */
    email: string;
    /**
     * @generated from protobuf field: string address_line_1 = 6;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 7;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 8;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_state = 9;
     */
    addressState: string;
    /**
     * @generated from protobuf field: string address_postal_code = 10;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: string tax_id = 11;
     */
    taxId: string;
    /**
     * @generated from protobuf field: string contact_name = 12;
     */
    contactName: string;
    /**
     * @generated from protobuf field: string contact_email = 13;
     */
    contactEmail: string;
    /**
     * @generated from protobuf field: string contact_phone_number = 14;
     */
    contactPhoneNumber: string;
}
/**
 * @generated from protobuf message VendorUpdateReply
 */
export interface VendorUpdateReply {
}
/**
 * @generated from protobuf message VendorDeleteRequest
 */
export interface VendorDeleteRequest {
    /**
     * @generated from protobuf field: string vendor_id = 1;
     */
    vendorId: string;
}
/**
 * @generated from protobuf message VendorDeleteReply
 */
export interface VendorDeleteReply {
}
// @generated message type with reflection information, may provide speed optimized methods
class VendorCreateRequest$Type extends MessageType<VendorCreateRequest> {
    constructor() {
        super("VendorCreateRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", T: () => ["VendorModel.Type", VendorModel_Type, "TYPE_"] },
            { no: 2, name: "friendly_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "email", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "address_line_1", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "address_line_2", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "address_city", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "address_state", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_postal_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "tax_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "contact_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "contact_email", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "contact_phone_number", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VendorCreateRequest>): VendorCreateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.type = 0;
        if (value !== undefined)
            reflectionMergePartial<VendorCreateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorCreateRequest): VendorCreateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* VendorModel.Type type */ 3:
                    message.type = reader.int32();
                    break;
                case /* optional string friendly_name */ 2:
                    message.friendlyName = reader.string();
                    break;
                case /* optional string email */ 4:
                    message.email = reader.string();
                    break;
                case /* optional string address_line_1 */ 5:
                    message.addressLine1 = reader.string();
                    break;
                case /* optional string address_line_2 */ 6:
                    message.addressLine2 = reader.string();
                    break;
                case /* optional string address_city */ 7:
                    message.addressCity = reader.string();
                    break;
                case /* optional string address_state */ 8:
                    message.addressState = reader.string();
                    break;
                case /* optional string address_postal_code */ 9:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional string tax_id */ 10:
                    message.taxId = reader.string();
                    break;
                case /* optional string contact_name */ 11:
                    message.contactName = reader.string();
                    break;
                case /* optional string contact_email */ 12:
                    message.contactEmail = reader.string();
                    break;
                case /* optional string contact_phone_number */ 13:
                    message.contactPhoneNumber = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VendorCreateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* VendorModel.Type type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        /* optional string friendly_name = 2; */
        if (message.friendlyName !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.friendlyName);
        /* optional string email = 4; */
        if (message.email !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.email);
        /* optional string address_line_1 = 5; */
        if (message.addressLine1 !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.addressLine1);
        /* optional string address_line_2 = 6; */
        if (message.addressLine2 !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.addressLine2);
        /* optional string address_city = 7; */
        if (message.addressCity !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.addressCity);
        /* optional string address_state = 8; */
        if (message.addressState !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.addressState);
        /* optional string address_postal_code = 9; */
        if (message.addressPostalCode !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional string tax_id = 10; */
        if (message.taxId !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.taxId);
        /* optional string contact_name = 11; */
        if (message.contactName !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.contactName);
        /* optional string contact_email = 12; */
        if (message.contactEmail !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.contactEmail);
        /* optional string contact_phone_number = 13; */
        if (message.contactPhoneNumber !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.contactPhoneNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorCreateRequest
 */
export const VendorCreateRequest = new VendorCreateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorCreateReply$Type extends MessageType<VendorCreateReply> {
    constructor() {
        super("VendorCreateReply", [
            { no: 1, name: "vendor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VendorCreateReply>): VendorCreateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vendorId = "";
        if (value !== undefined)
            reflectionMergePartial<VendorCreateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorCreateReply): VendorCreateReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vendor_id */ 1:
                    message.vendorId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VendorCreateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vendor_id = 1; */
        if (message.vendorId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vendorId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorCreateReply
 */
export const VendorCreateReply = new VendorCreateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorRetrieveRequest$Type extends MessageType<VendorRetrieveRequest> {
    constructor() {
        super("VendorRetrieveRequest", [
            { no: 1, name: "vendor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VendorRetrieveRequest>): VendorRetrieveRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vendorId = "";
        if (value !== undefined)
            reflectionMergePartial<VendorRetrieveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorRetrieveRequest): VendorRetrieveRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vendor_id */ 1:
                    message.vendorId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VendorRetrieveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vendor_id = 1; */
        if (message.vendorId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vendorId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorRetrieveRequest
 */
export const VendorRetrieveRequest = new VendorRetrieveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorRetrieveReply$Type extends MessageType<VendorRetrieveReply> {
    constructor() {
        super("VendorRetrieveReply", [
            { no: 1, name: "vendor", kind: "message", T: () => VendorModel_Vendor }
        ]);
    }
    create(value?: PartialMessage<VendorRetrieveReply>): VendorRetrieveReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<VendorRetrieveReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorRetrieveReply): VendorRetrieveReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* VendorModel.Vendor vendor */ 1:
                    message.vendor = VendorModel_Vendor.internalBinaryRead(reader, reader.uint32(), options, message.vendor);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VendorRetrieveReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* VendorModel.Vendor vendor = 1; */
        if (message.vendor)
            VendorModel_Vendor.internalBinaryWrite(message.vendor, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorRetrieveReply
 */
export const VendorRetrieveReply = new VendorRetrieveReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorGetRequest$Type extends MessageType<VendorGetRequest> {
    constructor() {
        super("VendorGetRequest", []);
    }
    create(value?: PartialMessage<VendorGetRequest>): VendorGetRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<VendorGetRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorGetRequest): VendorGetRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: VendorGetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorGetRequest
 */
export const VendorGetRequest = new VendorGetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorGetReply$Type extends MessageType<VendorGetReply> {
    constructor() {
        super("VendorGetReply", [
            { no: 1, name: "vendors", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => VendorModel_Vendor }
        ]);
    }
    create(value?: PartialMessage<VendorGetReply>): VendorGetReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vendors = [];
        if (value !== undefined)
            reflectionMergePartial<VendorGetReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorGetReply): VendorGetReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated VendorModel.Vendor vendors */ 1:
                    message.vendors.push(VendorModel_Vendor.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VendorGetReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated VendorModel.Vendor vendors = 1; */
        for (let i = 0; i < message.vendors.length; i++)
            VendorModel_Vendor.internalBinaryWrite(message.vendors[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorGetReply
 */
export const VendorGetReply = new VendorGetReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorUpdateRequest$Type extends MessageType<VendorUpdateRequest> {
    constructor() {
        super("VendorUpdateRequest", [
            { no: 1, name: "vendor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", T: () => ["VendorModel.Type", VendorModel_Type, "TYPE_"] },
            { no: 4, name: "friendly_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "tax_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "contact_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "contact_email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "contact_phone_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VendorUpdateRequest>): VendorUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vendorId = "";
        message.name = "";
        message.type = 0;
        message.friendlyName = "";
        message.email = "";
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressState = "";
        message.addressPostalCode = "";
        message.taxId = "";
        message.contactName = "";
        message.contactEmail = "";
        message.contactPhoneNumber = "";
        if (value !== undefined)
            reflectionMergePartial<VendorUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorUpdateRequest): VendorUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vendor_id */ 1:
                    message.vendorId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* VendorModel.Type type */ 3:
                    message.type = reader.int32();
                    break;
                case /* string friendly_name */ 4:
                    message.friendlyName = reader.string();
                    break;
                case /* string email */ 5:
                    message.email = reader.string();
                    break;
                case /* string address_line_1 */ 6:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 7:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 8:
                    message.addressCity = reader.string();
                    break;
                case /* string address_state */ 9:
                    message.addressState = reader.string();
                    break;
                case /* string address_postal_code */ 10:
                    message.addressPostalCode = reader.string();
                    break;
                case /* string tax_id */ 11:
                    message.taxId = reader.string();
                    break;
                case /* string contact_name */ 12:
                    message.contactName = reader.string();
                    break;
                case /* string contact_email */ 13:
                    message.contactEmail = reader.string();
                    break;
                case /* string contact_phone_number */ 14:
                    message.contactPhoneNumber = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VendorUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vendor_id = 1; */
        if (message.vendorId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vendorId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* VendorModel.Type type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        /* string friendly_name = 4; */
        if (message.friendlyName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.friendlyName);
        /* string email = 5; */
        if (message.email !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.email);
        /* string address_line_1 = 6; */
        if (message.addressLine1 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 7; */
        if (message.addressLine2 !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 8; */
        if (message.addressCity !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.addressCity);
        /* string address_state = 9; */
        if (message.addressState !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressState);
        /* string address_postal_code = 10; */
        if (message.addressPostalCode !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressPostalCode);
        /* string tax_id = 11; */
        if (message.taxId !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.taxId);
        /* string contact_name = 12; */
        if (message.contactName !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.contactName);
        /* string contact_email = 13; */
        if (message.contactEmail !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.contactEmail);
        /* string contact_phone_number = 14; */
        if (message.contactPhoneNumber !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.contactPhoneNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorUpdateRequest
 */
export const VendorUpdateRequest = new VendorUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorUpdateReply$Type extends MessageType<VendorUpdateReply> {
    constructor() {
        super("VendorUpdateReply", []);
    }
    create(value?: PartialMessage<VendorUpdateReply>): VendorUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<VendorUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorUpdateReply): VendorUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: VendorUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorUpdateReply
 */
export const VendorUpdateReply = new VendorUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorDeleteRequest$Type extends MessageType<VendorDeleteRequest> {
    constructor() {
        super("VendorDeleteRequest", [
            { no: 1, name: "vendor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VendorDeleteRequest>): VendorDeleteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vendorId = "";
        if (value !== undefined)
            reflectionMergePartial<VendorDeleteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorDeleteRequest): VendorDeleteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vendor_id */ 1:
                    message.vendorId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VendorDeleteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vendor_id = 1; */
        if (message.vendorId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vendorId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorDeleteRequest
 */
export const VendorDeleteRequest = new VendorDeleteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorDeleteReply$Type extends MessageType<VendorDeleteReply> {
    constructor() {
        super("VendorDeleteReply", []);
    }
    create(value?: PartialMessage<VendorDeleteReply>): VendorDeleteReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<VendorDeleteReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorDeleteReply): VendorDeleteReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: VendorDeleteReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorDeleteReply
 */
export const VendorDeleteReply = new VendorDeleteReply$Type();
/**
 * @generated ServiceType for protobuf service VendorsService
 */
export const VendorsService = new ServiceType("VendorsService", [
    { name: "VendorCreate", options: {}, I: VendorCreateRequest, O: VendorCreateReply },
    { name: "VendorRetrieve", options: {}, I: VendorRetrieveRequest, O: VendorRetrieveReply },
    { name: "VendorGet", options: {}, I: VendorGetRequest, O: VendorGetReply },
    { name: "VendorUpdate", options: {}, I: VendorUpdateRequest, O: VendorUpdateReply },
    { name: "VendorDelete", options: {}, I: VendorDeleteRequest, O: VendorDeleteReply }
]);
