// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/vehicle_warranty.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { VehicleWarrantyModel_VehicleWarranty } from "./models/model_vehicle_warranty";
import { VehicleWarrantyModel_WarrantyPeriodUnitsEnum } from "./models/model_vehicle_warranty";
import { VehicleMaintenanceModel_VehicleType } from "./models/model_vehicle_maintenance";
/**
 * Create
 *
 * @generated from protobuf message WarrantyCreateRequest
 */
export interface WarrantyCreateRequest {
    /**
     * @generated from protobuf field: VehicleMaintenanceModel.VehicleType vehicle_type = 1;
     */
    vehicleType: VehicleMaintenanceModel_VehicleType;
    /**
     * @generated from protobuf field: optional string truck_id = 2;
     */
    truckId?: string;
    /**
     * @generated from protobuf field: optional string trailer_id = 3;
     */
    trailerId?: string;
    /**
     * @generated from protobuf field: optional int64 period = 4;
     */
    period?: number;
    /**
     * @generated from protobuf field: optional VehicleWarrantyModel.WarrantyPeriodUnitsEnum period_units = 5;
     */
    periodUnits?: VehicleWarrantyModel_WarrantyPeriodUnitsEnum;
    /**
     * @generated from protobuf field: optional string started_at = 6;
     */
    startedAt?: string;
    /**
     * @generated from protobuf field: optional int64 distance_miles = 7;
     */
    distanceMiles?: number;
    /**
     * @generated from protobuf field: optional int64 distance_kilometers = 8;
     */
    distanceKilometers?: number;
}
/**
 * @generated from protobuf message WarrantyCreateReply
 */
export interface WarrantyCreateReply {
    /**
     * @generated from protobuf field: string vehicle_warranty_id = 1;
     */
    vehicleWarrantyId: string;
}
/**
 * Update
 *
 * @generated from protobuf message WarrantyUpdateRequest
 */
export interface WarrantyUpdateRequest {
    /**
     * @generated from protobuf field: string vehicle_warranty_id = 1;
     */
    vehicleWarrantyId: string;
    /**
     * @generated from protobuf field: optional int64 period = 2;
     */
    period?: number;
    /**
     * @generated from protobuf field: optional VehicleWarrantyModel.WarrantyPeriodUnitsEnum period_units = 3;
     */
    periodUnits?: VehicleWarrantyModel_WarrantyPeriodUnitsEnum;
    /**
     * @generated from protobuf field: optional string started_at = 4;
     */
    startedAt?: string;
    /**
     * @generated from protobuf field: optional int64 distance_miles = 5;
     */
    distanceMiles?: number;
    /**
     * @generated from protobuf field: optional int64 distance_kilometers = 6;
     */
    distanceKilometers?: number;
}
/**
 * @generated from protobuf message WarrantyUpdateReply
 */
export interface WarrantyUpdateReply {
}
/**
 * Read
 *
 * @generated from protobuf message WarrantyRetrieveRequest
 */
export interface WarrantyRetrieveRequest {
    /**
     * @generated from protobuf field: VehicleMaintenanceModel.VehicleType vehicle_type = 1;
     */
    vehicleType: VehicleMaintenanceModel_VehicleType;
    /**
     * @generated from protobuf field: string vehicle_id = 2;
     */
    vehicleId: string;
}
/**
 * @generated from protobuf message WarrantyRetrieveReply
 */
export interface WarrantyRetrieveReply {
    /**
     * @generated from protobuf field: VehicleWarrantyModel.VehicleWarranty warranty = 1;
     */
    warranty?: VehicleWarrantyModel_VehicleWarranty;
}
/**
 * @generated from protobuf message WarrantyEldRetrieveRequest
 */
export interface WarrantyEldRetrieveRequest {
    /**
     * @generated from protobuf field: string truck_id = 1;
     */
    truckId: string;
}
/**
 * @generated from protobuf message WarrantyEldRetrieveReply
 */
export interface WarrantyEldRetrieveReply {
    /**
     * @generated from protobuf field: optional int64 odometer_miles = 1;
     */
    odometerMiles?: number; // optional
    /**
     * @generated from protobuf field: optional int64 odometer_kilometers = 2;
     */
    odometerKilometers?: number; // optional
    /**
     * @generated from protobuf field: optional int64 engine_hours = 3;
     */
    engineHours?: number; // optional
}
/**
 * Delete
 *
 * @generated from protobuf message WarrantyDeleteRequest
 */
export interface WarrantyDeleteRequest {
    /**
     * @generated from protobuf field: string vehicle_warranty_id = 1;
     */
    vehicleWarrantyId: string;
}
/**
 * @generated from protobuf message WarrantyDeleteReply
 */
export interface WarrantyDeleteReply {
}
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyCreateRequest$Type extends MessageType<WarrantyCreateRequest> {
    constructor() {
        super("WarrantyCreateRequest", [
            { no: 1, name: "vehicle_type", kind: "enum", T: () => ["VehicleMaintenanceModel.VehicleType", VehicleMaintenanceModel_VehicleType, "VEHICLE_TYPE_"] },
            { no: 2, name: "truck_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "trailer_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "period", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "period_units", kind: "enum", opt: true, T: () => ["VehicleWarrantyModel.WarrantyPeriodUnitsEnum", VehicleWarrantyModel_WarrantyPeriodUnitsEnum] },
            { no: 6, name: "started_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "distance_miles", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 8, name: "distance_kilometers", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<WarrantyCreateRequest>): WarrantyCreateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vehicleType = 0;
        if (value !== undefined)
            reflectionMergePartial<WarrantyCreateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyCreateRequest): WarrantyCreateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* VehicleMaintenanceModel.VehicleType vehicle_type */ 1:
                    message.vehicleType = reader.int32();
                    break;
                case /* optional string truck_id */ 2:
                    message.truckId = reader.string();
                    break;
                case /* optional string trailer_id */ 3:
                    message.trailerId = reader.string();
                    break;
                case /* optional int64 period */ 4:
                    message.period = reader.int64().toNumber();
                    break;
                case /* optional VehicleWarrantyModel.WarrantyPeriodUnitsEnum period_units */ 5:
                    message.periodUnits = reader.int32();
                    break;
                case /* optional string started_at */ 6:
                    message.startedAt = reader.string();
                    break;
                case /* optional int64 distance_miles */ 7:
                    message.distanceMiles = reader.int64().toNumber();
                    break;
                case /* optional int64 distance_kilometers */ 8:
                    message.distanceKilometers = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WarrantyCreateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* VehicleMaintenanceModel.VehicleType vehicle_type = 1; */
        if (message.vehicleType !== 0)
            writer.tag(1, WireType.Varint).int32(message.vehicleType);
        /* optional string truck_id = 2; */
        if (message.truckId !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.truckId);
        /* optional string trailer_id = 3; */
        if (message.trailerId !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.trailerId);
        /* optional int64 period = 4; */
        if (message.period !== undefined)
            writer.tag(4, WireType.Varint).int64(message.period);
        /* optional VehicleWarrantyModel.WarrantyPeriodUnitsEnum period_units = 5; */
        if (message.periodUnits !== undefined)
            writer.tag(5, WireType.Varint).int32(message.periodUnits);
        /* optional string started_at = 6; */
        if (message.startedAt !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.startedAt);
        /* optional int64 distance_miles = 7; */
        if (message.distanceMiles !== undefined)
            writer.tag(7, WireType.Varint).int64(message.distanceMiles);
        /* optional int64 distance_kilometers = 8; */
        if (message.distanceKilometers !== undefined)
            writer.tag(8, WireType.Varint).int64(message.distanceKilometers);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyCreateRequest
 */
export const WarrantyCreateRequest = new WarrantyCreateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyCreateReply$Type extends MessageType<WarrantyCreateReply> {
    constructor() {
        super("WarrantyCreateReply", [
            { no: 1, name: "vehicle_warranty_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<WarrantyCreateReply>): WarrantyCreateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vehicleWarrantyId = "";
        if (value !== undefined)
            reflectionMergePartial<WarrantyCreateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyCreateReply): WarrantyCreateReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vehicle_warranty_id */ 1:
                    message.vehicleWarrantyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WarrantyCreateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vehicle_warranty_id = 1; */
        if (message.vehicleWarrantyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vehicleWarrantyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyCreateReply
 */
export const WarrantyCreateReply = new WarrantyCreateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyUpdateRequest$Type extends MessageType<WarrantyUpdateRequest> {
    constructor() {
        super("WarrantyUpdateRequest", [
            { no: 1, name: "vehicle_warranty_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "period", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "period_units", kind: "enum", opt: true, T: () => ["VehicleWarrantyModel.WarrantyPeriodUnitsEnum", VehicleWarrantyModel_WarrantyPeriodUnitsEnum] },
            { no: 4, name: "started_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "distance_miles", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "distance_kilometers", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<WarrantyUpdateRequest>): WarrantyUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vehicleWarrantyId = "";
        if (value !== undefined)
            reflectionMergePartial<WarrantyUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyUpdateRequest): WarrantyUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vehicle_warranty_id */ 1:
                    message.vehicleWarrantyId = reader.string();
                    break;
                case /* optional int64 period */ 2:
                    message.period = reader.int64().toNumber();
                    break;
                case /* optional VehicleWarrantyModel.WarrantyPeriodUnitsEnum period_units */ 3:
                    message.periodUnits = reader.int32();
                    break;
                case /* optional string started_at */ 4:
                    message.startedAt = reader.string();
                    break;
                case /* optional int64 distance_miles */ 5:
                    message.distanceMiles = reader.int64().toNumber();
                    break;
                case /* optional int64 distance_kilometers */ 6:
                    message.distanceKilometers = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WarrantyUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vehicle_warranty_id = 1; */
        if (message.vehicleWarrantyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vehicleWarrantyId);
        /* optional int64 period = 2; */
        if (message.period !== undefined)
            writer.tag(2, WireType.Varint).int64(message.period);
        /* optional VehicleWarrantyModel.WarrantyPeriodUnitsEnum period_units = 3; */
        if (message.periodUnits !== undefined)
            writer.tag(3, WireType.Varint).int32(message.periodUnits);
        /* optional string started_at = 4; */
        if (message.startedAt !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.startedAt);
        /* optional int64 distance_miles = 5; */
        if (message.distanceMiles !== undefined)
            writer.tag(5, WireType.Varint).int64(message.distanceMiles);
        /* optional int64 distance_kilometers = 6; */
        if (message.distanceKilometers !== undefined)
            writer.tag(6, WireType.Varint).int64(message.distanceKilometers);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyUpdateRequest
 */
export const WarrantyUpdateRequest = new WarrantyUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyUpdateReply$Type extends MessageType<WarrantyUpdateReply> {
    constructor() {
        super("WarrantyUpdateReply", []);
    }
    create(value?: PartialMessage<WarrantyUpdateReply>): WarrantyUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<WarrantyUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyUpdateReply): WarrantyUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: WarrantyUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyUpdateReply
 */
export const WarrantyUpdateReply = new WarrantyUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyRetrieveRequest$Type extends MessageType<WarrantyRetrieveRequest> {
    constructor() {
        super("WarrantyRetrieveRequest", [
            { no: 1, name: "vehicle_type", kind: "enum", T: () => ["VehicleMaintenanceModel.VehicleType", VehicleMaintenanceModel_VehicleType, "VEHICLE_TYPE_"] },
            { no: 2, name: "vehicle_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<WarrantyRetrieveRequest>): WarrantyRetrieveRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vehicleType = 0;
        message.vehicleId = "";
        if (value !== undefined)
            reflectionMergePartial<WarrantyRetrieveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyRetrieveRequest): WarrantyRetrieveRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* VehicleMaintenanceModel.VehicleType vehicle_type */ 1:
                    message.vehicleType = reader.int32();
                    break;
                case /* string vehicle_id */ 2:
                    message.vehicleId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WarrantyRetrieveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* VehicleMaintenanceModel.VehicleType vehicle_type = 1; */
        if (message.vehicleType !== 0)
            writer.tag(1, WireType.Varint).int32(message.vehicleType);
        /* string vehicle_id = 2; */
        if (message.vehicleId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.vehicleId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyRetrieveRequest
 */
export const WarrantyRetrieveRequest = new WarrantyRetrieveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyRetrieveReply$Type extends MessageType<WarrantyRetrieveReply> {
    constructor() {
        super("WarrantyRetrieveReply", [
            { no: 1, name: "warranty", kind: "message", T: () => VehicleWarrantyModel_VehicleWarranty }
        ]);
    }
    create(value?: PartialMessage<WarrantyRetrieveReply>): WarrantyRetrieveReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<WarrantyRetrieveReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyRetrieveReply): WarrantyRetrieveReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* VehicleWarrantyModel.VehicleWarranty warranty */ 1:
                    message.warranty = VehicleWarrantyModel_VehicleWarranty.internalBinaryRead(reader, reader.uint32(), options, message.warranty);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WarrantyRetrieveReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* VehicleWarrantyModel.VehicleWarranty warranty = 1; */
        if (message.warranty)
            VehicleWarrantyModel_VehicleWarranty.internalBinaryWrite(message.warranty, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyRetrieveReply
 */
export const WarrantyRetrieveReply = new WarrantyRetrieveReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyEldRetrieveRequest$Type extends MessageType<WarrantyEldRetrieveRequest> {
    constructor() {
        super("WarrantyEldRetrieveRequest", [
            { no: 1, name: "truck_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<WarrantyEldRetrieveRequest>): WarrantyEldRetrieveRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.truckId = "";
        if (value !== undefined)
            reflectionMergePartial<WarrantyEldRetrieveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyEldRetrieveRequest): WarrantyEldRetrieveRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string truck_id */ 1:
                    message.truckId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WarrantyEldRetrieveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string truck_id = 1; */
        if (message.truckId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.truckId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyEldRetrieveRequest
 */
export const WarrantyEldRetrieveRequest = new WarrantyEldRetrieveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyEldRetrieveReply$Type extends MessageType<WarrantyEldRetrieveReply> {
    constructor() {
        super("WarrantyEldRetrieveReply", [
            { no: 1, name: "odometer_miles", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "odometer_kilometers", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "engine_hours", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<WarrantyEldRetrieveReply>): WarrantyEldRetrieveReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<WarrantyEldRetrieveReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyEldRetrieveReply): WarrantyEldRetrieveReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 odometer_miles */ 1:
                    message.odometerMiles = reader.int64().toNumber();
                    break;
                case /* optional int64 odometer_kilometers */ 2:
                    message.odometerKilometers = reader.int64().toNumber();
                    break;
                case /* optional int64 engine_hours */ 3:
                    message.engineHours = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WarrantyEldRetrieveReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 odometer_miles = 1; */
        if (message.odometerMiles !== undefined)
            writer.tag(1, WireType.Varint).int64(message.odometerMiles);
        /* optional int64 odometer_kilometers = 2; */
        if (message.odometerKilometers !== undefined)
            writer.tag(2, WireType.Varint).int64(message.odometerKilometers);
        /* optional int64 engine_hours = 3; */
        if (message.engineHours !== undefined)
            writer.tag(3, WireType.Varint).int64(message.engineHours);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyEldRetrieveReply
 */
export const WarrantyEldRetrieveReply = new WarrantyEldRetrieveReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyDeleteRequest$Type extends MessageType<WarrantyDeleteRequest> {
    constructor() {
        super("WarrantyDeleteRequest", [
            { no: 1, name: "vehicle_warranty_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<WarrantyDeleteRequest>): WarrantyDeleteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vehicleWarrantyId = "";
        if (value !== undefined)
            reflectionMergePartial<WarrantyDeleteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyDeleteRequest): WarrantyDeleteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vehicle_warranty_id */ 1:
                    message.vehicleWarrantyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WarrantyDeleteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vehicle_warranty_id = 1; */
        if (message.vehicleWarrantyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vehicleWarrantyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyDeleteRequest
 */
export const WarrantyDeleteRequest = new WarrantyDeleteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WarrantyDeleteReply$Type extends MessageType<WarrantyDeleteReply> {
    constructor() {
        super("WarrantyDeleteReply", []);
    }
    create(value?: PartialMessage<WarrantyDeleteReply>): WarrantyDeleteReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<WarrantyDeleteReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WarrantyDeleteReply): WarrantyDeleteReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: WarrantyDeleteReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WarrantyDeleteReply
 */
export const WarrantyDeleteReply = new WarrantyDeleteReply$Type();
/**
 * @generated ServiceType for protobuf service VehicleWarrantyService
 */
export const VehicleWarrantyService = new ServiceType("VehicleWarrantyService", [
    { name: "WarrantyCreate", options: {}, I: WarrantyCreateRequest, O: WarrantyCreateReply },
    { name: "WarrantyRetrieve", options: {}, I: WarrantyRetrieveRequest, O: WarrantyRetrieveReply },
    { name: "WarrantyEldRetrieve", options: {}, I: WarrantyEldRetrieveRequest, O: WarrantyEldRetrieveReply },
    { name: "WarrantyUpdate", options: {}, I: WarrantyUpdateRequest, O: WarrantyUpdateReply },
    { name: "WarrantyDelete", options: {}, I: WarrantyDeleteRequest, O: WarrantyDeleteReply }
]);
