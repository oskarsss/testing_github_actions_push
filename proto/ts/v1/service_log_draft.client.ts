// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/service_log_draft.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ServiceLogDraftService } from "./service_log_draft";
import type { ServiceLogCancelExtractReply } from "./service_log_draft";
import type { ServiceLogCancelExtractRequest } from "./service_log_draft";
import type { ServiceLogStartExtractReply } from "./service_log_draft";
import type { ServiceLogStartExtractRequest } from "./service_log_draft";
import type { ServiceLogDraftDeleteAllReply } from "./service_log_draft";
import type { ServiceLogDraftDeleteAllRequest } from "./service_log_draft";
import type { ServiceLogDraftDeleteReply } from "./service_log_draft";
import type { ServiceLogDraftDeleteRequest } from "./service_log_draft";
import type { ServiceLogDraftUpdateReply } from "./service_log_draft";
import type { ServiceLogDraftUpdateRequest } from "./service_log_draft";
import type { ServiceLogDraftRetrieveReply } from "./service_log_draft";
import type { ServiceLogDraftRetrieveRequest } from "./service_log_draft";
import type { ServiceLogDraftGetReply } from "./service_log_draft";
import type { ServiceLogDraftGetRequest } from "./service_log_draft";
import type { ServiceLogDraftServiceLogCreateReply } from "./service_log_draft";
import type { ServiceLogDraftServiceLogCreateRequest } from "./service_log_draft";
import type { ServiceLogDraftFromSLCreateReply } from "./service_log_draft";
import type { ServiceLogDraftFromSLCreateRequest } from "./service_log_draft";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ServiceLogDraftCreateReply } from "./service_log_draft";
import type { ServiceLogDraftCreateRequest } from "./service_log_draft";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ServiceLogDraftService
 */
export interface IServiceLogDraftServiceClient {
    /**
     * @generated from protobuf rpc: ServiceLogDraftCreate(ServiceLogDraftCreateRequest) returns (ServiceLogDraftCreateReply);
     */
    serviceLogDraftCreate(input: ServiceLogDraftCreateRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftCreateRequest, ServiceLogDraftCreateReply>;
    /**
     * @generated from protobuf rpc: ServiceLogDraftFromSLCreate(ServiceLogDraftFromSLCreateRequest) returns (ServiceLogDraftFromSLCreateReply);
     */
    serviceLogDraftFromSLCreate(input: ServiceLogDraftFromSLCreateRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftFromSLCreateRequest, ServiceLogDraftFromSLCreateReply>;
    /**
     * @generated from protobuf rpc: ServiceLogDraftServiceLogCreate(ServiceLogDraftServiceLogCreateRequest) returns (ServiceLogDraftServiceLogCreateReply);
     */
    serviceLogDraftServiceLogCreate(input: ServiceLogDraftServiceLogCreateRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftServiceLogCreateRequest, ServiceLogDraftServiceLogCreateReply>;
    /**
     * @generated from protobuf rpc: ServiceLogDraftGet(ServiceLogDraftGetRequest) returns (ServiceLogDraftGetReply);
     */
    serviceLogDraftGet(input: ServiceLogDraftGetRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftGetRequest, ServiceLogDraftGetReply>;
    /**
     * @generated from protobuf rpc: ServiceLogDraftRetrieve(ServiceLogDraftRetrieveRequest) returns (ServiceLogDraftRetrieveReply);
     */
    serviceLogDraftRetrieve(input: ServiceLogDraftRetrieveRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftRetrieveRequest, ServiceLogDraftRetrieveReply>;
    /**
     * @generated from protobuf rpc: ServiceLogDraftUpdate(ServiceLogDraftUpdateRequest) returns (ServiceLogDraftUpdateReply);
     */
    serviceLogDraftUpdate(input: ServiceLogDraftUpdateRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftUpdateRequest, ServiceLogDraftUpdateReply>;
    /**
     * @generated from protobuf rpc: ServiceLogDraftDelete(ServiceLogDraftDeleteRequest) returns (ServiceLogDraftDeleteReply);
     */
    serviceLogDraftDelete(input: ServiceLogDraftDeleteRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftDeleteRequest, ServiceLogDraftDeleteReply>;
    /**
     * @generated from protobuf rpc: ServiceLogDraftDeleteAll(ServiceLogDraftDeleteAllRequest) returns (ServiceLogDraftDeleteAllReply);
     */
    serviceLogDraftDeleteAll(input: ServiceLogDraftDeleteAllRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftDeleteAllRequest, ServiceLogDraftDeleteAllReply>;
    /**
     * @generated from protobuf rpc: ServiceLogStartExtract(ServiceLogStartExtractRequest) returns (ServiceLogStartExtractReply);
     */
    serviceLogStartExtract(input: ServiceLogStartExtractRequest, options?: RpcOptions): UnaryCall<ServiceLogStartExtractRequest, ServiceLogStartExtractReply>;
    /**
     * @generated from protobuf rpc: ServiceLogCancelExtract(ServiceLogCancelExtractRequest) returns (ServiceLogCancelExtractReply);
     */
    serviceLogCancelExtract(input: ServiceLogCancelExtractRequest, options?: RpcOptions): UnaryCall<ServiceLogCancelExtractRequest, ServiceLogCancelExtractReply>;
}
/**
 * @generated from protobuf service ServiceLogDraftService
 */
export class ServiceLogDraftServiceClient implements IServiceLogDraftServiceClient, ServiceInfo {
    typeName = ServiceLogDraftService.typeName;
    methods = ServiceLogDraftService.methods;
    options = ServiceLogDraftService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ServiceLogDraftCreate(ServiceLogDraftCreateRequest) returns (ServiceLogDraftCreateReply);
     */
    serviceLogDraftCreate(input: ServiceLogDraftCreateRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftCreateRequest, ServiceLogDraftCreateReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogDraftCreateRequest, ServiceLogDraftCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogDraftFromSLCreate(ServiceLogDraftFromSLCreateRequest) returns (ServiceLogDraftFromSLCreateReply);
     */
    serviceLogDraftFromSLCreate(input: ServiceLogDraftFromSLCreateRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftFromSLCreateRequest, ServiceLogDraftFromSLCreateReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogDraftFromSLCreateRequest, ServiceLogDraftFromSLCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogDraftServiceLogCreate(ServiceLogDraftServiceLogCreateRequest) returns (ServiceLogDraftServiceLogCreateReply);
     */
    serviceLogDraftServiceLogCreate(input: ServiceLogDraftServiceLogCreateRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftServiceLogCreateRequest, ServiceLogDraftServiceLogCreateReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogDraftServiceLogCreateRequest, ServiceLogDraftServiceLogCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogDraftGet(ServiceLogDraftGetRequest) returns (ServiceLogDraftGetReply);
     */
    serviceLogDraftGet(input: ServiceLogDraftGetRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftGetRequest, ServiceLogDraftGetReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogDraftGetRequest, ServiceLogDraftGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogDraftRetrieve(ServiceLogDraftRetrieveRequest) returns (ServiceLogDraftRetrieveReply);
     */
    serviceLogDraftRetrieve(input: ServiceLogDraftRetrieveRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftRetrieveRequest, ServiceLogDraftRetrieveReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogDraftRetrieveRequest, ServiceLogDraftRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogDraftUpdate(ServiceLogDraftUpdateRequest) returns (ServiceLogDraftUpdateReply);
     */
    serviceLogDraftUpdate(input: ServiceLogDraftUpdateRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftUpdateRequest, ServiceLogDraftUpdateReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogDraftUpdateRequest, ServiceLogDraftUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogDraftDelete(ServiceLogDraftDeleteRequest) returns (ServiceLogDraftDeleteReply);
     */
    serviceLogDraftDelete(input: ServiceLogDraftDeleteRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftDeleteRequest, ServiceLogDraftDeleteReply> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogDraftDeleteRequest, ServiceLogDraftDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogDraftDeleteAll(ServiceLogDraftDeleteAllRequest) returns (ServiceLogDraftDeleteAllReply);
     */
    serviceLogDraftDeleteAll(input: ServiceLogDraftDeleteAllRequest, options?: RpcOptions): UnaryCall<ServiceLogDraftDeleteAllRequest, ServiceLogDraftDeleteAllReply> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogDraftDeleteAllRequest, ServiceLogDraftDeleteAllReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogStartExtract(ServiceLogStartExtractRequest) returns (ServiceLogStartExtractReply);
     */
    serviceLogStartExtract(input: ServiceLogStartExtractRequest, options?: RpcOptions): UnaryCall<ServiceLogStartExtractRequest, ServiceLogStartExtractReply> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogStartExtractRequest, ServiceLogStartExtractReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ServiceLogCancelExtract(ServiceLogCancelExtractRequest) returns (ServiceLogCancelExtractReply);
     */
    serviceLogCancelExtract(input: ServiceLogCancelExtractRequest, options?: RpcOptions): UnaryCall<ServiceLogCancelExtractRequest, ServiceLogCancelExtractReply> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<ServiceLogCancelExtractRequest, ServiceLogCancelExtractReply>("unary", this._transport, method, opt, input);
    }
}
