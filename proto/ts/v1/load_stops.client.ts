// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/load_stops.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LoadsStopsService } from "./load_stops";
import type { LoadStopAddCommodityGetForNewReply } from "./load_stops";
import type { LoadStopAddCommodityGetForNewRequest } from "./load_stops";
import type { LoadStopCommodityGetReply } from "./load_stops";
import type { LoadStopCommodityGetRequest } from "./load_stops";
import type { LoadStopCommodityUnassignReply } from "./load_stops";
import type { LoadStopCommodityUnassignRequest } from "./load_stops";
import type { LoadStopCommodityAssignReply } from "./load_stops";
import type { LoadStopCommodityAssignRequest } from "./load_stops";
import type { LoadStopUpdateStatusReply } from "./load_stops";
import type { LoadStopUpdateStatusRequest } from "./load_stops";
import type { LoadStopUpdateReply } from "./load_stops";
import type { LoadStopUpdateRequest } from "./load_stops";
import type { LoadStopDeleteReply } from "./load_stops";
import type { LoadStopDeleteRequest } from "./load_stops";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoadStopAddReply } from "./load_stops";
import type { LoadStopAddRequest } from "./load_stops";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service LoadsStopsService
 */
export interface ILoadsStopsServiceClient {
    /**
     * @generated from protobuf rpc: LoadStopAdd(LoadStopAddRequest) returns (LoadStopAddReply);
     */
    loadStopAdd(input: LoadStopAddRequest, options?: RpcOptions): UnaryCall<LoadStopAddRequest, LoadStopAddReply>;
    /**
     * @generated from protobuf rpc: LoadStopDelete(LoadStopDeleteRequest) returns (LoadStopDeleteReply);
     */
    loadStopDelete(input: LoadStopDeleteRequest, options?: RpcOptions): UnaryCall<LoadStopDeleteRequest, LoadStopDeleteReply>;
    /**
     * @generated from protobuf rpc: LoadStopUpdate(LoadStopUpdateRequest) returns (LoadStopUpdateReply);
     */
    loadStopUpdate(input: LoadStopUpdateRequest, options?: RpcOptions): UnaryCall<LoadStopUpdateRequest, LoadStopUpdateReply>;
    /**
     * @generated from protobuf rpc: LoadStopUpdateStatus(LoadStopUpdateStatusRequest) returns (LoadStopUpdateStatusReply);
     */
    loadStopUpdateStatus(input: LoadStopUpdateStatusRequest, options?: RpcOptions): UnaryCall<LoadStopUpdateStatusRequest, LoadStopUpdateStatusReply>;
    /**
     * @generated from protobuf rpc: LoadStopCommodityAssign(LoadStopCommodityAssignRequest) returns (LoadStopCommodityAssignReply);
     */
    loadStopCommodityAssign(input: LoadStopCommodityAssignRequest, options?: RpcOptions): UnaryCall<LoadStopCommodityAssignRequest, LoadStopCommodityAssignReply>;
    /**
     * @generated from protobuf rpc: LoadStopCommodityUnassign(LoadStopCommodityUnassignRequest) returns (LoadStopCommodityUnassignReply);
     */
    loadStopCommodityUnassign(input: LoadStopCommodityUnassignRequest, options?: RpcOptions): UnaryCall<LoadStopCommodityUnassignRequest, LoadStopCommodityUnassignReply>;
    /**
     * @generated from protobuf rpc: LoadStopCommodityGet(LoadStopCommodityGetRequest) returns (LoadStopCommodityGetReply);
     */
    loadStopCommodityGet(input: LoadStopCommodityGetRequest, options?: RpcOptions): UnaryCall<LoadStopCommodityGetRequest, LoadStopCommodityGetReply>;
    /**
     * @generated from protobuf rpc: LoadStopCommodityGetForNew(LoadStopAddCommodityGetForNewRequest) returns (LoadStopAddCommodityGetForNewReply);
     */
    loadStopCommodityGetForNew(input: LoadStopAddCommodityGetForNewRequest, options?: RpcOptions): UnaryCall<LoadStopAddCommodityGetForNewRequest, LoadStopAddCommodityGetForNewReply>;
}
/**
 * @generated from protobuf service LoadsStopsService
 */
export class LoadsStopsServiceClient implements ILoadsStopsServiceClient, ServiceInfo {
    typeName = LoadsStopsService.typeName;
    methods = LoadsStopsService.methods;
    options = LoadsStopsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: LoadStopAdd(LoadStopAddRequest) returns (LoadStopAddReply);
     */
    loadStopAdd(input: LoadStopAddRequest, options?: RpcOptions): UnaryCall<LoadStopAddRequest, LoadStopAddReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadStopAddRequest, LoadStopAddReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadStopDelete(LoadStopDeleteRequest) returns (LoadStopDeleteReply);
     */
    loadStopDelete(input: LoadStopDeleteRequest, options?: RpcOptions): UnaryCall<LoadStopDeleteRequest, LoadStopDeleteReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadStopDeleteRequest, LoadStopDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadStopUpdate(LoadStopUpdateRequest) returns (LoadStopUpdateReply);
     */
    loadStopUpdate(input: LoadStopUpdateRequest, options?: RpcOptions): UnaryCall<LoadStopUpdateRequest, LoadStopUpdateReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadStopUpdateRequest, LoadStopUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadStopUpdateStatus(LoadStopUpdateStatusRequest) returns (LoadStopUpdateStatusReply);
     */
    loadStopUpdateStatus(input: LoadStopUpdateStatusRequest, options?: RpcOptions): UnaryCall<LoadStopUpdateStatusRequest, LoadStopUpdateStatusReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadStopUpdateStatusRequest, LoadStopUpdateStatusReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadStopCommodityAssign(LoadStopCommodityAssignRequest) returns (LoadStopCommodityAssignReply);
     */
    loadStopCommodityAssign(input: LoadStopCommodityAssignRequest, options?: RpcOptions): UnaryCall<LoadStopCommodityAssignRequest, LoadStopCommodityAssignReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadStopCommodityAssignRequest, LoadStopCommodityAssignReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadStopCommodityUnassign(LoadStopCommodityUnassignRequest) returns (LoadStopCommodityUnassignReply);
     */
    loadStopCommodityUnassign(input: LoadStopCommodityUnassignRequest, options?: RpcOptions): UnaryCall<LoadStopCommodityUnassignRequest, LoadStopCommodityUnassignReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadStopCommodityUnassignRequest, LoadStopCommodityUnassignReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadStopCommodityGet(LoadStopCommodityGetRequest) returns (LoadStopCommodityGetReply);
     */
    loadStopCommodityGet(input: LoadStopCommodityGetRequest, options?: RpcOptions): UnaryCall<LoadStopCommodityGetRequest, LoadStopCommodityGetReply> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadStopCommodityGetRequest, LoadStopCommodityGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadStopCommodityGetForNew(LoadStopAddCommodityGetForNewRequest) returns (LoadStopAddCommodityGetForNewReply);
     */
    loadStopCommodityGetForNew(input: LoadStopAddCommodityGetForNewRequest, options?: RpcOptions): UnaryCall<LoadStopAddCommodityGetForNewRequest, LoadStopAddCommodityGetForNewReply> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadStopAddCommodityGetForNewRequest, LoadStopAddCommodityGetForNewReply>("unary", this._transport, method, opt, input);
    }
}
