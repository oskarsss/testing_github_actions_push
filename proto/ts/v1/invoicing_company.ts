// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/invoicing_company.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CountryCode } from "./models/country_code";
/**
 * /////////////////////////
 * InvoicingCompanyCreate
 * /////////////////////////
 *
 * @generated from protobuf message InvoicingCompanyCreateRequest
 */
export interface InvoicingCompanyCreateRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string phone = 2;
     */
    phone: string;
    /**
     * @generated from protobuf field: string logo_url = 3;
     */
    logoUrl: string;
    /**
     * @generated from protobuf field: string default_factoring_company_id = 4;
     */
    defaultFactoringCompanyId: string;
    /**
     * @generated from protobuf field: repeated string cc_emails = 5;
     */
    ccEmails: string[];
    /**
     * @generated from protobuf field: string payment_instructions = 6;
     */
    paymentInstructions: string;
    /**
     * @generated from protobuf field: string payment_terms = 7;
     */
    paymentTerms: string;
    /**
     * @generated from protobuf field: string address_line_1 = 8;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 9;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 10;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_state = 11;
     */
    addressState: string;
    /**
     * @generated from protobuf field: string address_postal_code = 12;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 13;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: string email = 14;
     */
    email: string;
    /**
     * @generated from protobuf field: repeated InvoicingCompanyCreateRequest.Document documents = 15;
     */
    documents: InvoicingCompanyCreateRequest_Document[];
}
/**
 * @generated from protobuf message InvoicingCompanyCreateRequest.Document
 */
export interface InvoicingCompanyCreateRequest_Document {
    /**
     * @generated from protobuf field: string document_type_id = 1;
     */
    documentTypeId: string;
}
/**
 * @generated from protobuf message InvoicingCompanyCreateReply
 */
export interface InvoicingCompanyCreateReply {
    /**
     * @generated from protobuf field: string invoicing_company_id = 1;
     */
    invoicingCompanyId: string;
}
/**
 * /////////////////////////
 * InvoicingCompanyGet
 * /////////////////////////
 *
 * @generated from protobuf message InvoicingCompanyGetRequest
 */
export interface InvoicingCompanyGetRequest {
}
/**
 * @generated from protobuf message InvoicingCompanyGetReply
 */
export interface InvoicingCompanyGetReply {
    /**
     * @generated from protobuf field: repeated InvoicingCompanyGetReply.InvoicingCompany invoicing_company = 1;
     */
    invoicingCompany: InvoicingCompanyGetReply_InvoicingCompany[];
}
/**
 * @generated from protobuf message InvoicingCompanyGetReply.InvoicingCompany
 */
export interface InvoicingCompanyGetReply_InvoicingCompany {
    /**
     * @generated from protobuf field: string invoicing_company_id = 1;
     */
    invoicingCompanyId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string phone = 3;
     */
    phone: string;
    /**
     * @generated from protobuf field: string logo_url = 4;
     */
    logoUrl: string;
    /**
     * @generated from protobuf field: string default_factoring_company_id = 5;
     */
    defaultFactoringCompanyId: string;
    /**
     * @generated from protobuf field: repeated string cc_emails = 6;
     */
    ccEmails: string[];
    /**
     * @generated from protobuf field: string payment_instructions = 7;
     */
    paymentInstructions: string;
    /**
     * @generated from protobuf field: string payment_terms = 8;
     */
    paymentTerms: string;
    /**
     * @generated from protobuf field: string address_line_1 = 9;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 10;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 11;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_state = 12;
     */
    addressState: string;
    /**
     * @generated from protobuf field: string address_postal_code = 13;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 14;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: string email = 15;
     */
    email: string;
    /**
     * @generated from protobuf field: bool is_default = 16;
     */
    isDefault: boolean;
    /**
     * @generated from protobuf field: string created_at = 17;
     */
    createdAt: string;
    /**
     * @generated from protobuf field: string updated_at = 18;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: bool deleted = 19;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: repeated InvoicingCompanyGetReply.InvoicingCompany.Document documents = 20;
     */
    documents: InvoicingCompanyGetReply_InvoicingCompany_Document[];
}
/**
 * @generated from protobuf message InvoicingCompanyGetReply.InvoicingCompany.Document
 */
export interface InvoicingCompanyGetReply_InvoicingCompany_Document {
    /**
     * @generated from protobuf field: string document_type_id = 1;
     */
    documentTypeId: string;
}
/**
 * /////////////////////////
 * InvoicingCompanyUpdate
 * /////////////////////////
 *
 * @generated from protobuf message InvoicingCompanyUpdateRequest
 */
export interface InvoicingCompanyUpdateRequest {
    /**
     * @generated from protobuf field: string invoicing_company_id = 1;
     */
    invoicingCompanyId: string;
    /**
     * @generated from protobuf field: optional string name = 2;
     */
    name?: string;
    /**
     * @generated from protobuf field: optional string phone = 3;
     */
    phone?: string;
    /**
     * @generated from protobuf field: optional string logo_url = 4;
     */
    logoUrl?: string;
    /**
     * @generated from protobuf field: optional string default_factoring_company_id = 5;
     */
    defaultFactoringCompanyId?: string;
    /**
     * @generated from protobuf field: repeated string cc_emails = 6;
     */
    ccEmails: string[];
    /**
     * @generated from protobuf field: optional string email = 7;
     */
    email?: string;
    /**
     * @generated from protobuf field: optional string payment_instructions = 8;
     */
    paymentInstructions?: string;
    /**
     * @generated from protobuf field: optional string payment_terms = 9;
     */
    paymentTerms?: string;
    /**
     * @generated from protobuf field: optional string address_line_1 = 10;
     */
    addressLine1?: string;
    /**
     * @generated from protobuf field: optional string address_line_2 = 11;
     */
    addressLine2?: string;
    /**
     * @generated from protobuf field: optional string address_city = 12;
     */
    addressCity?: string;
    /**
     * @generated from protobuf field: optional string address_state = 13;
     */
    addressState?: string;
    /**
     * @generated from protobuf field: optional string address_postal_code = 14;
     */
    addressPostalCode?: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 15;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: repeated InvoicingCompanyUpdateRequest.Document documents = 16;
     */
    documents: InvoicingCompanyUpdateRequest_Document[];
}
/**
 * Document
 *
 * @generated from protobuf message InvoicingCompanyUpdateRequest.Document
 */
export interface InvoicingCompanyUpdateRequest_Document {
    /**
     * @generated from protobuf field: string document_type_id = 1;
     */
    documentTypeId: string;
}
/**
 * @generated from protobuf message InvoicingCompanyUpdateReply
 */
export interface InvoicingCompanyUpdateReply {
}
/**
 * /////////////////////////
 * InvoicingCompanyDelete
 * /////////////////////////
 *
 * @generated from protobuf message InvoicingCompanyDeleteRequest
 */
export interface InvoicingCompanyDeleteRequest {
    /**
     * @generated from protobuf field: string invoicing_company_id = 1;
     */
    invoicingCompanyId: string;
}
/**
 * @generated from protobuf message InvoicingCompanyDeleteReply
 */
export interface InvoicingCompanyDeleteReply {
}
/**
 * /////////////////////////
 * InvoicingCompanyRetrieve
 * /////////////////////////
 *
 * @generated from protobuf message InvoicingCompanyRetrieveRequest
 */
export interface InvoicingCompanyRetrieveRequest {
    /**
     * @generated from protobuf field: string invoicing_company_id = 1;
     */
    invoicingCompanyId: string;
}
/**
 * @generated from protobuf message InvoicingCompanyRetrieveReply
 */
export interface InvoicingCompanyRetrieveReply {
    /**
     * @generated from protobuf field: InvoicingCompanyRetrieveReply.InvoicingCompany invoicing_company = 1;
     */
    invoicingCompany?: InvoicingCompanyRetrieveReply_InvoicingCompany;
}
/**
 * @generated from protobuf message InvoicingCompanyRetrieveReply.InvoicingCompany
 */
export interface InvoicingCompanyRetrieveReply_InvoicingCompany {
    /**
     * @generated from protobuf field: string invoicing_company_id = 1;
     */
    invoicingCompanyId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string phone = 3;
     */
    phone: string;
    /**
     * @generated from protobuf field: string logo_url = 4;
     */
    logoUrl: string;
    /**
     * @generated from protobuf field: string default_factoring_company_id = 5;
     */
    defaultFactoringCompanyId: string;
    /**
     * @generated from protobuf field: repeated string cc_emails = 6;
     */
    ccEmails: string[];
    /**
     * @generated from protobuf field: string payment_instructions = 7;
     */
    paymentInstructions: string;
    /**
     * @generated from protobuf field: string payment_terms = 8;
     */
    paymentTerms: string;
    /**
     * @generated from protobuf field: string address_line_1 = 9;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 10;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 11;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_state = 12;
     */
    addressState: string;
    /**
     * @generated from protobuf field: string address_postal_code = 13;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 14;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: string email = 15;
     */
    email: string;
    /**
     * @generated from protobuf field: bool is_default = 16;
     */
    isDefault: boolean;
    /**
     * @generated from protobuf field: string created_at = 17;
     */
    createdAt: string;
    /**
     * @generated from protobuf field: string updated_at = 18;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: bool deleted = 19;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: repeated InvoicingCompanyRetrieveReply.InvoicingCompany.Document documents = 20;
     */
    documents: InvoicingCompanyRetrieveReply_InvoicingCompany_Document[];
}
/**
 * @generated from protobuf message InvoicingCompanyRetrieveReply.InvoicingCompany.Document
 */
export interface InvoicingCompanyRetrieveReply_InvoicingCompany_Document {
    /**
     * @generated from protobuf field: string document_type_id = 1;
     */
    documentTypeId: string;
}
/**
 * /////////////////////////
 * InvoicingCompanyRestore
 * /////////////////////////
 *
 * @generated from protobuf message InvoicingCompanyRestoreRequest
 */
export interface InvoicingCompanyRestoreRequest {
    /**
     * @generated from protobuf field: string invoicing_company_id = 1;
     */
    invoicingCompanyId: string;
}
/**
 * @generated from protobuf message InvoicingCompanyRestoreReply
 */
export interface InvoicingCompanyRestoreReply {
}
/**
 * /////////////////////////
 * InvoicingCompanyDefaultSet
 * /////////////////////////
 *
 * @generated from protobuf message InvoicingCompanyDefaultSetRequest
 */
export interface InvoicingCompanyDefaultSetRequest {
    /**
     * @generated from protobuf field: string invoicing_company_id = 1;
     */
    invoicingCompanyId: string;
}
/**
 * @generated from protobuf message InvoicingCompanyDefaultSetReply
 */
export interface InvoicingCompanyDefaultSetReply {
}
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyCreateRequest$Type extends MessageType<InvoicingCompanyCreateRequest> {
    constructor() {
        super("InvoicingCompanyCreateRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "phone", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "logo_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "default_factoring_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cc_emails", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "payment_instructions", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "payment_terms", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 14, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "documents", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InvoicingCompanyCreateRequest_Document }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyCreateRequest>): InvoicingCompanyCreateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.phone = "";
        message.logoUrl = "";
        message.defaultFactoringCompanyId = "";
        message.ccEmails = [];
        message.paymentInstructions = "";
        message.paymentTerms = "";
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressState = "";
        message.addressPostalCode = "";
        message.email = "";
        message.documents = [];
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyCreateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyCreateRequest): InvoicingCompanyCreateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string phone */ 2:
                    message.phone = reader.string();
                    break;
                case /* string logo_url */ 3:
                    message.logoUrl = reader.string();
                    break;
                case /* string default_factoring_company_id */ 4:
                    message.defaultFactoringCompanyId = reader.string();
                    break;
                case /* repeated string cc_emails */ 5:
                    message.ccEmails.push(reader.string());
                    break;
                case /* string payment_instructions */ 6:
                    message.paymentInstructions = reader.string();
                    break;
                case /* string payment_terms */ 7:
                    message.paymentTerms = reader.string();
                    break;
                case /* string address_line_1 */ 8:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 9:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 10:
                    message.addressCity = reader.string();
                    break;
                case /* string address_state */ 11:
                    message.addressState = reader.string();
                    break;
                case /* string address_postal_code */ 12:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional CountryCode address_country */ 13:
                    message.addressCountry = reader.int32();
                    break;
                case /* string email */ 14:
                    message.email = reader.string();
                    break;
                case /* repeated InvoicingCompanyCreateRequest.Document documents */ 15:
                    message.documents.push(InvoicingCompanyCreateRequest_Document.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyCreateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* string phone = 2; */
        if (message.phone !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.phone);
        /* string logo_url = 3; */
        if (message.logoUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.logoUrl);
        /* string default_factoring_company_id = 4; */
        if (message.defaultFactoringCompanyId !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.defaultFactoringCompanyId);
        /* repeated string cc_emails = 5; */
        for (let i = 0; i < message.ccEmails.length; i++)
            writer.tag(5, WireType.LengthDelimited).string(message.ccEmails[i]);
        /* string payment_instructions = 6; */
        if (message.paymentInstructions !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.paymentInstructions);
        /* string payment_terms = 7; */
        if (message.paymentTerms !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.paymentTerms);
        /* string address_line_1 = 8; */
        if (message.addressLine1 !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 9; */
        if (message.addressLine2 !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 10; */
        if (message.addressCity !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressCity);
        /* string address_state = 11; */
        if (message.addressState !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.addressState);
        /* string address_postal_code = 12; */
        if (message.addressPostalCode !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional CountryCode address_country = 13; */
        if (message.addressCountry !== undefined)
            writer.tag(13, WireType.Varint).int32(message.addressCountry);
        /* string email = 14; */
        if (message.email !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.email);
        /* repeated InvoicingCompanyCreateRequest.Document documents = 15; */
        for (let i = 0; i < message.documents.length; i++)
            InvoicingCompanyCreateRequest_Document.internalBinaryWrite(message.documents[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyCreateRequest
 */
export const InvoicingCompanyCreateRequest = new InvoicingCompanyCreateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyCreateRequest_Document$Type extends MessageType<InvoicingCompanyCreateRequest_Document> {
    constructor() {
        super("InvoicingCompanyCreateRequest.Document", [
            { no: 1, name: "document_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyCreateRequest_Document>): InvoicingCompanyCreateRequest_Document {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentTypeId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyCreateRequest_Document>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyCreateRequest_Document): InvoicingCompanyCreateRequest_Document {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string document_type_id */ 1:
                    message.documentTypeId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyCreateRequest_Document, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string document_type_id = 1; */
        if (message.documentTypeId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.documentTypeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyCreateRequest.Document
 */
export const InvoicingCompanyCreateRequest_Document = new InvoicingCompanyCreateRequest_Document$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyCreateReply$Type extends MessageType<InvoicingCompanyCreateReply> {
    constructor() {
        super("InvoicingCompanyCreateReply", [
            { no: 1, name: "invoicing_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyCreateReply>): InvoicingCompanyCreateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompanyId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyCreateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyCreateReply): InvoicingCompanyCreateReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoicing_company_id */ 1:
                    message.invoicingCompanyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyCreateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoicing_company_id = 1; */
        if (message.invoicingCompanyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoicingCompanyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyCreateReply
 */
export const InvoicingCompanyCreateReply = new InvoicingCompanyCreateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyGetRequest$Type extends MessageType<InvoicingCompanyGetRequest> {
    constructor() {
        super("InvoicingCompanyGetRequest", []);
    }
    create(value?: PartialMessage<InvoicingCompanyGetRequest>): InvoicingCompanyGetRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyGetRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyGetRequest): InvoicingCompanyGetRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: InvoicingCompanyGetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyGetRequest
 */
export const InvoicingCompanyGetRequest = new InvoicingCompanyGetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyGetReply$Type extends MessageType<InvoicingCompanyGetReply> {
    constructor() {
        super("InvoicingCompanyGetReply", [
            { no: 1, name: "invoicing_company", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InvoicingCompanyGetReply_InvoicingCompany }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyGetReply>): InvoicingCompanyGetReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompany = [];
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyGetReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyGetReply): InvoicingCompanyGetReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated InvoicingCompanyGetReply.InvoicingCompany invoicing_company */ 1:
                    message.invoicingCompany.push(InvoicingCompanyGetReply_InvoicingCompany.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyGetReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated InvoicingCompanyGetReply.InvoicingCompany invoicing_company = 1; */
        for (let i = 0; i < message.invoicingCompany.length; i++)
            InvoicingCompanyGetReply_InvoicingCompany.internalBinaryWrite(message.invoicingCompany[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyGetReply
 */
export const InvoicingCompanyGetReply = new InvoicingCompanyGetReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyGetReply_InvoicingCompany$Type extends MessageType<InvoicingCompanyGetReply_InvoicingCompany> {
    constructor() {
        super("InvoicingCompanyGetReply.InvoicingCompany", [
            { no: 1, name: "invoicing_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "phone", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "logo_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "default_factoring_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cc_emails", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "payment_instructions", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "payment_terms", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 15, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "is_default", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 20, name: "documents", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InvoicingCompanyGetReply_InvoicingCompany_Document }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyGetReply_InvoicingCompany>): InvoicingCompanyGetReply_InvoicingCompany {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompanyId = "";
        message.name = "";
        message.phone = "";
        message.logoUrl = "";
        message.defaultFactoringCompanyId = "";
        message.ccEmails = [];
        message.paymentInstructions = "";
        message.paymentTerms = "";
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressState = "";
        message.addressPostalCode = "";
        message.email = "";
        message.isDefault = false;
        message.createdAt = "";
        message.updatedAt = "";
        message.deleted = false;
        message.documents = [];
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyGetReply_InvoicingCompany>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyGetReply_InvoicingCompany): InvoicingCompanyGetReply_InvoicingCompany {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoicing_company_id */ 1:
                    message.invoicingCompanyId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string phone */ 3:
                    message.phone = reader.string();
                    break;
                case /* string logo_url */ 4:
                    message.logoUrl = reader.string();
                    break;
                case /* string default_factoring_company_id */ 5:
                    message.defaultFactoringCompanyId = reader.string();
                    break;
                case /* repeated string cc_emails */ 6:
                    message.ccEmails.push(reader.string());
                    break;
                case /* string payment_instructions */ 7:
                    message.paymentInstructions = reader.string();
                    break;
                case /* string payment_terms */ 8:
                    message.paymentTerms = reader.string();
                    break;
                case /* string address_line_1 */ 9:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 10:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 11:
                    message.addressCity = reader.string();
                    break;
                case /* string address_state */ 12:
                    message.addressState = reader.string();
                    break;
                case /* string address_postal_code */ 13:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional CountryCode address_country */ 14:
                    message.addressCountry = reader.int32();
                    break;
                case /* string email */ 15:
                    message.email = reader.string();
                    break;
                case /* bool is_default */ 16:
                    message.isDefault = reader.bool();
                    break;
                case /* string created_at */ 17:
                    message.createdAt = reader.string();
                    break;
                case /* string updated_at */ 18:
                    message.updatedAt = reader.string();
                    break;
                case /* bool deleted */ 19:
                    message.deleted = reader.bool();
                    break;
                case /* repeated InvoicingCompanyGetReply.InvoicingCompany.Document documents */ 20:
                    message.documents.push(InvoicingCompanyGetReply_InvoicingCompany_Document.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyGetReply_InvoicingCompany, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoicing_company_id = 1; */
        if (message.invoicingCompanyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoicingCompanyId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string phone = 3; */
        if (message.phone !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.phone);
        /* string logo_url = 4; */
        if (message.logoUrl !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.logoUrl);
        /* string default_factoring_company_id = 5; */
        if (message.defaultFactoringCompanyId !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.defaultFactoringCompanyId);
        /* repeated string cc_emails = 6; */
        for (let i = 0; i < message.ccEmails.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.ccEmails[i]);
        /* string payment_instructions = 7; */
        if (message.paymentInstructions !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.paymentInstructions);
        /* string payment_terms = 8; */
        if (message.paymentTerms !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.paymentTerms);
        /* string address_line_1 = 9; */
        if (message.addressLine1 !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 10; */
        if (message.addressLine2 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 11; */
        if (message.addressCity !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.addressCity);
        /* string address_state = 12; */
        if (message.addressState !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.addressState);
        /* string address_postal_code = 13; */
        if (message.addressPostalCode !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional CountryCode address_country = 14; */
        if (message.addressCountry !== undefined)
            writer.tag(14, WireType.Varint).int32(message.addressCountry);
        /* string email = 15; */
        if (message.email !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.email);
        /* bool is_default = 16; */
        if (message.isDefault !== false)
            writer.tag(16, WireType.Varint).bool(message.isDefault);
        /* string created_at = 17; */
        if (message.createdAt !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.createdAt);
        /* string updated_at = 18; */
        if (message.updatedAt !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.updatedAt);
        /* bool deleted = 19; */
        if (message.deleted !== false)
            writer.tag(19, WireType.Varint).bool(message.deleted);
        /* repeated InvoicingCompanyGetReply.InvoicingCompany.Document documents = 20; */
        for (let i = 0; i < message.documents.length; i++)
            InvoicingCompanyGetReply_InvoicingCompany_Document.internalBinaryWrite(message.documents[i], writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyGetReply.InvoicingCompany
 */
export const InvoicingCompanyGetReply_InvoicingCompany = new InvoicingCompanyGetReply_InvoicingCompany$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyGetReply_InvoicingCompany_Document$Type extends MessageType<InvoicingCompanyGetReply_InvoicingCompany_Document> {
    constructor() {
        super("InvoicingCompanyGetReply.InvoicingCompany.Document", [
            { no: 1, name: "document_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyGetReply_InvoicingCompany_Document>): InvoicingCompanyGetReply_InvoicingCompany_Document {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentTypeId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyGetReply_InvoicingCompany_Document>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyGetReply_InvoicingCompany_Document): InvoicingCompanyGetReply_InvoicingCompany_Document {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string document_type_id */ 1:
                    message.documentTypeId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyGetReply_InvoicingCompany_Document, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string document_type_id = 1; */
        if (message.documentTypeId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.documentTypeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyGetReply.InvoicingCompany.Document
 */
export const InvoicingCompanyGetReply_InvoicingCompany_Document = new InvoicingCompanyGetReply_InvoicingCompany_Document$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyUpdateRequest$Type extends MessageType<InvoicingCompanyUpdateRequest> {
    constructor() {
        super("InvoicingCompanyUpdateRequest", [
            { no: 1, name: "invoicing_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "phone", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "logo_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "default_factoring_company_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cc_emails", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "email", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "payment_instructions", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "payment_terms", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_line_1", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_line_2", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_city", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_state", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "address_postal_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 16, name: "documents", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InvoicingCompanyUpdateRequest_Document }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyUpdateRequest>): InvoicingCompanyUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompanyId = "";
        message.ccEmails = [];
        message.documents = [];
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyUpdateRequest): InvoicingCompanyUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoicing_company_id */ 1:
                    message.invoicingCompanyId = reader.string();
                    break;
                case /* optional string name */ 2:
                    message.name = reader.string();
                    break;
                case /* optional string phone */ 3:
                    message.phone = reader.string();
                    break;
                case /* optional string logo_url */ 4:
                    message.logoUrl = reader.string();
                    break;
                case /* optional string default_factoring_company_id */ 5:
                    message.defaultFactoringCompanyId = reader.string();
                    break;
                case /* repeated string cc_emails */ 6:
                    message.ccEmails.push(reader.string());
                    break;
                case /* optional string email */ 7:
                    message.email = reader.string();
                    break;
                case /* optional string payment_instructions */ 8:
                    message.paymentInstructions = reader.string();
                    break;
                case /* optional string payment_terms */ 9:
                    message.paymentTerms = reader.string();
                    break;
                case /* optional string address_line_1 */ 10:
                    message.addressLine1 = reader.string();
                    break;
                case /* optional string address_line_2 */ 11:
                    message.addressLine2 = reader.string();
                    break;
                case /* optional string address_city */ 12:
                    message.addressCity = reader.string();
                    break;
                case /* optional string address_state */ 13:
                    message.addressState = reader.string();
                    break;
                case /* optional string address_postal_code */ 14:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional CountryCode address_country */ 15:
                    message.addressCountry = reader.int32();
                    break;
                case /* repeated InvoicingCompanyUpdateRequest.Document documents */ 16:
                    message.documents.push(InvoicingCompanyUpdateRequest_Document.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoicing_company_id = 1; */
        if (message.invoicingCompanyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoicingCompanyId);
        /* optional string name = 2; */
        if (message.name !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* optional string phone = 3; */
        if (message.phone !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.phone);
        /* optional string logo_url = 4; */
        if (message.logoUrl !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.logoUrl);
        /* optional string default_factoring_company_id = 5; */
        if (message.defaultFactoringCompanyId !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.defaultFactoringCompanyId);
        /* repeated string cc_emails = 6; */
        for (let i = 0; i < message.ccEmails.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.ccEmails[i]);
        /* optional string email = 7; */
        if (message.email !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.email);
        /* optional string payment_instructions = 8; */
        if (message.paymentInstructions !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.paymentInstructions);
        /* optional string payment_terms = 9; */
        if (message.paymentTerms !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.paymentTerms);
        /* optional string address_line_1 = 10; */
        if (message.addressLine1 !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.addressLine1);
        /* optional string address_line_2 = 11; */
        if (message.addressLine2 !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.addressLine2);
        /* optional string address_city = 12; */
        if (message.addressCity !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.addressCity);
        /* optional string address_state = 13; */
        if (message.addressState !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.addressState);
        /* optional string address_postal_code = 14; */
        if (message.addressPostalCode !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional CountryCode address_country = 15; */
        if (message.addressCountry !== undefined)
            writer.tag(15, WireType.Varint).int32(message.addressCountry);
        /* repeated InvoicingCompanyUpdateRequest.Document documents = 16; */
        for (let i = 0; i < message.documents.length; i++)
            InvoicingCompanyUpdateRequest_Document.internalBinaryWrite(message.documents[i], writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyUpdateRequest
 */
export const InvoicingCompanyUpdateRequest = new InvoicingCompanyUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyUpdateRequest_Document$Type extends MessageType<InvoicingCompanyUpdateRequest_Document> {
    constructor() {
        super("InvoicingCompanyUpdateRequest.Document", [
            { no: 1, name: "document_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyUpdateRequest_Document>): InvoicingCompanyUpdateRequest_Document {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentTypeId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyUpdateRequest_Document>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyUpdateRequest_Document): InvoicingCompanyUpdateRequest_Document {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string document_type_id */ 1:
                    message.documentTypeId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyUpdateRequest_Document, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string document_type_id = 1; */
        if (message.documentTypeId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.documentTypeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyUpdateRequest.Document
 */
export const InvoicingCompanyUpdateRequest_Document = new InvoicingCompanyUpdateRequest_Document$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyUpdateReply$Type extends MessageType<InvoicingCompanyUpdateReply> {
    constructor() {
        super("InvoicingCompanyUpdateReply", []);
    }
    create(value?: PartialMessage<InvoicingCompanyUpdateReply>): InvoicingCompanyUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyUpdateReply): InvoicingCompanyUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: InvoicingCompanyUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyUpdateReply
 */
export const InvoicingCompanyUpdateReply = new InvoicingCompanyUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyDeleteRequest$Type extends MessageType<InvoicingCompanyDeleteRequest> {
    constructor() {
        super("InvoicingCompanyDeleteRequest", [
            { no: 1, name: "invoicing_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyDeleteRequest>): InvoicingCompanyDeleteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompanyId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyDeleteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyDeleteRequest): InvoicingCompanyDeleteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoicing_company_id */ 1:
                    message.invoicingCompanyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyDeleteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoicing_company_id = 1; */
        if (message.invoicingCompanyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoicingCompanyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyDeleteRequest
 */
export const InvoicingCompanyDeleteRequest = new InvoicingCompanyDeleteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyDeleteReply$Type extends MessageType<InvoicingCompanyDeleteReply> {
    constructor() {
        super("InvoicingCompanyDeleteReply", []);
    }
    create(value?: PartialMessage<InvoicingCompanyDeleteReply>): InvoicingCompanyDeleteReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyDeleteReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyDeleteReply): InvoicingCompanyDeleteReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: InvoicingCompanyDeleteReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyDeleteReply
 */
export const InvoicingCompanyDeleteReply = new InvoicingCompanyDeleteReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyRetrieveRequest$Type extends MessageType<InvoicingCompanyRetrieveRequest> {
    constructor() {
        super("InvoicingCompanyRetrieveRequest", [
            { no: 1, name: "invoicing_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyRetrieveRequest>): InvoicingCompanyRetrieveRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompanyId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyRetrieveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyRetrieveRequest): InvoicingCompanyRetrieveRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoicing_company_id */ 1:
                    message.invoicingCompanyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyRetrieveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoicing_company_id = 1; */
        if (message.invoicingCompanyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoicingCompanyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyRetrieveRequest
 */
export const InvoicingCompanyRetrieveRequest = new InvoicingCompanyRetrieveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyRetrieveReply$Type extends MessageType<InvoicingCompanyRetrieveReply> {
    constructor() {
        super("InvoicingCompanyRetrieveReply", [
            { no: 1, name: "invoicing_company", kind: "message", T: () => InvoicingCompanyRetrieveReply_InvoicingCompany }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyRetrieveReply>): InvoicingCompanyRetrieveReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyRetrieveReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyRetrieveReply): InvoicingCompanyRetrieveReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* InvoicingCompanyRetrieveReply.InvoicingCompany invoicing_company */ 1:
                    message.invoicingCompany = InvoicingCompanyRetrieveReply_InvoicingCompany.internalBinaryRead(reader, reader.uint32(), options, message.invoicingCompany);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyRetrieveReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* InvoicingCompanyRetrieveReply.InvoicingCompany invoicing_company = 1; */
        if (message.invoicingCompany)
            InvoicingCompanyRetrieveReply_InvoicingCompany.internalBinaryWrite(message.invoicingCompany, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyRetrieveReply
 */
export const InvoicingCompanyRetrieveReply = new InvoicingCompanyRetrieveReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyRetrieveReply_InvoicingCompany$Type extends MessageType<InvoicingCompanyRetrieveReply_InvoicingCompany> {
    constructor() {
        super("InvoicingCompanyRetrieveReply.InvoicingCompany", [
            { no: 1, name: "invoicing_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "phone", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "logo_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "default_factoring_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cc_emails", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "payment_instructions", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "payment_terms", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 15, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "is_default", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 20, name: "documents", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InvoicingCompanyRetrieveReply_InvoicingCompany_Document }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyRetrieveReply_InvoicingCompany>): InvoicingCompanyRetrieveReply_InvoicingCompany {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompanyId = "";
        message.name = "";
        message.phone = "";
        message.logoUrl = "";
        message.defaultFactoringCompanyId = "";
        message.ccEmails = [];
        message.paymentInstructions = "";
        message.paymentTerms = "";
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressState = "";
        message.addressPostalCode = "";
        message.email = "";
        message.isDefault = false;
        message.createdAt = "";
        message.updatedAt = "";
        message.deleted = false;
        message.documents = [];
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyRetrieveReply_InvoicingCompany>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyRetrieveReply_InvoicingCompany): InvoicingCompanyRetrieveReply_InvoicingCompany {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoicing_company_id */ 1:
                    message.invoicingCompanyId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string phone */ 3:
                    message.phone = reader.string();
                    break;
                case /* string logo_url */ 4:
                    message.logoUrl = reader.string();
                    break;
                case /* string default_factoring_company_id */ 5:
                    message.defaultFactoringCompanyId = reader.string();
                    break;
                case /* repeated string cc_emails */ 6:
                    message.ccEmails.push(reader.string());
                    break;
                case /* string payment_instructions */ 7:
                    message.paymentInstructions = reader.string();
                    break;
                case /* string payment_terms */ 8:
                    message.paymentTerms = reader.string();
                    break;
                case /* string address_line_1 */ 9:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 10:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 11:
                    message.addressCity = reader.string();
                    break;
                case /* string address_state */ 12:
                    message.addressState = reader.string();
                    break;
                case /* string address_postal_code */ 13:
                    message.addressPostalCode = reader.string();
                    break;
                case /* optional CountryCode address_country */ 14:
                    message.addressCountry = reader.int32();
                    break;
                case /* string email */ 15:
                    message.email = reader.string();
                    break;
                case /* bool is_default */ 16:
                    message.isDefault = reader.bool();
                    break;
                case /* string created_at */ 17:
                    message.createdAt = reader.string();
                    break;
                case /* string updated_at */ 18:
                    message.updatedAt = reader.string();
                    break;
                case /* bool deleted */ 19:
                    message.deleted = reader.bool();
                    break;
                case /* repeated InvoicingCompanyRetrieveReply.InvoicingCompany.Document documents */ 20:
                    message.documents.push(InvoicingCompanyRetrieveReply_InvoicingCompany_Document.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyRetrieveReply_InvoicingCompany, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoicing_company_id = 1; */
        if (message.invoicingCompanyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoicingCompanyId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string phone = 3; */
        if (message.phone !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.phone);
        /* string logo_url = 4; */
        if (message.logoUrl !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.logoUrl);
        /* string default_factoring_company_id = 5; */
        if (message.defaultFactoringCompanyId !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.defaultFactoringCompanyId);
        /* repeated string cc_emails = 6; */
        for (let i = 0; i < message.ccEmails.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.ccEmails[i]);
        /* string payment_instructions = 7; */
        if (message.paymentInstructions !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.paymentInstructions);
        /* string payment_terms = 8; */
        if (message.paymentTerms !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.paymentTerms);
        /* string address_line_1 = 9; */
        if (message.addressLine1 !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 10; */
        if (message.addressLine2 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 11; */
        if (message.addressCity !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.addressCity);
        /* string address_state = 12; */
        if (message.addressState !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.addressState);
        /* string address_postal_code = 13; */
        if (message.addressPostalCode !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.addressPostalCode);
        /* optional CountryCode address_country = 14; */
        if (message.addressCountry !== undefined)
            writer.tag(14, WireType.Varint).int32(message.addressCountry);
        /* string email = 15; */
        if (message.email !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.email);
        /* bool is_default = 16; */
        if (message.isDefault !== false)
            writer.tag(16, WireType.Varint).bool(message.isDefault);
        /* string created_at = 17; */
        if (message.createdAt !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.createdAt);
        /* string updated_at = 18; */
        if (message.updatedAt !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.updatedAt);
        /* bool deleted = 19; */
        if (message.deleted !== false)
            writer.tag(19, WireType.Varint).bool(message.deleted);
        /* repeated InvoicingCompanyRetrieveReply.InvoicingCompany.Document documents = 20; */
        for (let i = 0; i < message.documents.length; i++)
            InvoicingCompanyRetrieveReply_InvoicingCompany_Document.internalBinaryWrite(message.documents[i], writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyRetrieveReply.InvoicingCompany
 */
export const InvoicingCompanyRetrieveReply_InvoicingCompany = new InvoicingCompanyRetrieveReply_InvoicingCompany$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyRetrieveReply_InvoicingCompany_Document$Type extends MessageType<InvoicingCompanyRetrieveReply_InvoicingCompany_Document> {
    constructor() {
        super("InvoicingCompanyRetrieveReply.InvoicingCompany.Document", [
            { no: 1, name: "document_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyRetrieveReply_InvoicingCompany_Document>): InvoicingCompanyRetrieveReply_InvoicingCompany_Document {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentTypeId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyRetrieveReply_InvoicingCompany_Document>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyRetrieveReply_InvoicingCompany_Document): InvoicingCompanyRetrieveReply_InvoicingCompany_Document {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string document_type_id */ 1:
                    message.documentTypeId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyRetrieveReply_InvoicingCompany_Document, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string document_type_id = 1; */
        if (message.documentTypeId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.documentTypeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyRetrieveReply.InvoicingCompany.Document
 */
export const InvoicingCompanyRetrieveReply_InvoicingCompany_Document = new InvoicingCompanyRetrieveReply_InvoicingCompany_Document$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyRestoreRequest$Type extends MessageType<InvoicingCompanyRestoreRequest> {
    constructor() {
        super("InvoicingCompanyRestoreRequest", [
            { no: 1, name: "invoicing_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyRestoreRequest>): InvoicingCompanyRestoreRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompanyId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyRestoreRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyRestoreRequest): InvoicingCompanyRestoreRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoicing_company_id */ 1:
                    message.invoicingCompanyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyRestoreRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoicing_company_id = 1; */
        if (message.invoicingCompanyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoicingCompanyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyRestoreRequest
 */
export const InvoicingCompanyRestoreRequest = new InvoicingCompanyRestoreRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyRestoreReply$Type extends MessageType<InvoicingCompanyRestoreReply> {
    constructor() {
        super("InvoicingCompanyRestoreReply", []);
    }
    create(value?: PartialMessage<InvoicingCompanyRestoreReply>): InvoicingCompanyRestoreReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyRestoreReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyRestoreReply): InvoicingCompanyRestoreReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: InvoicingCompanyRestoreReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyRestoreReply
 */
export const InvoicingCompanyRestoreReply = new InvoicingCompanyRestoreReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyDefaultSetRequest$Type extends MessageType<InvoicingCompanyDefaultSetRequest> {
    constructor() {
        super("InvoicingCompanyDefaultSetRequest", [
            { no: 1, name: "invoicing_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<InvoicingCompanyDefaultSetRequest>): InvoicingCompanyDefaultSetRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoicingCompanyId = "";
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyDefaultSetRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyDefaultSetRequest): InvoicingCompanyDefaultSetRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoicing_company_id */ 1:
                    message.invoicingCompanyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InvoicingCompanyDefaultSetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoicing_company_id = 1; */
        if (message.invoicingCompanyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoicingCompanyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyDefaultSetRequest
 */
export const InvoicingCompanyDefaultSetRequest = new InvoicingCompanyDefaultSetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvoicingCompanyDefaultSetReply$Type extends MessageType<InvoicingCompanyDefaultSetReply> {
    constructor() {
        super("InvoicingCompanyDefaultSetReply", []);
    }
    create(value?: PartialMessage<InvoicingCompanyDefaultSetReply>): InvoicingCompanyDefaultSetReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<InvoicingCompanyDefaultSetReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoicingCompanyDefaultSetReply): InvoicingCompanyDefaultSetReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: InvoicingCompanyDefaultSetReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InvoicingCompanyDefaultSetReply
 */
export const InvoicingCompanyDefaultSetReply = new InvoicingCompanyDefaultSetReply$Type();
/**
 * @generated ServiceType for protobuf service InvoicingCompanyService
 */
export const InvoicingCompanyService = new ServiceType("InvoicingCompanyService", [
    { name: "InvoicingCompanyCreate", options: {}, I: InvoicingCompanyCreateRequest, O: InvoicingCompanyCreateReply },
    { name: "InvoicingCompanyGet", options: {}, I: InvoicingCompanyGetRequest, O: InvoicingCompanyGetReply },
    { name: "InvoicingCompanyUpdate", options: {}, I: InvoicingCompanyUpdateRequest, O: InvoicingCompanyUpdateReply },
    { name: "InvoicingCompanyDelete", options: {}, I: InvoicingCompanyDeleteRequest, O: InvoicingCompanyDeleteReply },
    { name: "InvoicingCompanyRetrieve", options: {}, I: InvoicingCompanyRetrieveRequest, O: InvoicingCompanyRetrieveReply },
    { name: "InvoicingCompanyRestore", options: {}, I: InvoicingCompanyRestoreRequest, O: InvoicingCompanyRestoreReply },
    { name: "InvoicingCompanyDefaultSet", options: {}, I: InvoicingCompanyDefaultSetRequest, O: InvoicingCompanyDefaultSetReply }
]);
