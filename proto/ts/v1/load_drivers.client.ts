// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/load_drivers.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LoadDriversService } from "./load_drivers";
import type { LoadDriverRemoveReply } from "./load_drivers";
import type { LoadDriverRemoveRequest } from "./load_drivers";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoadDriverAddReply } from "./load_drivers";
import type { LoadDriverAddRequest } from "./load_drivers";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service LoadDriversService
 */
export interface ILoadDriversServiceClient {
    /**
     * @generated from protobuf rpc: LoadDriverAdd(LoadDriverAddRequest) returns (LoadDriverAddReply);
     */
    loadDriverAdd(input: LoadDriverAddRequest, options?: RpcOptions): UnaryCall<LoadDriverAddRequest, LoadDriverAddReply>;
    /**
     * @generated from protobuf rpc: LoadDriverRemove(LoadDriverRemoveRequest) returns (LoadDriverRemoveReply);
     */
    loadDriverRemove(input: LoadDriverRemoveRequest, options?: RpcOptions): UnaryCall<LoadDriverRemoveRequest, LoadDriverRemoveReply>;
}
/**
 * @generated from protobuf service LoadDriversService
 */
export class LoadDriversServiceClient implements ILoadDriversServiceClient, ServiceInfo {
    typeName = LoadDriversService.typeName;
    methods = LoadDriversService.methods;
    options = LoadDriversService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: LoadDriverAdd(LoadDriverAddRequest) returns (LoadDriverAddReply);
     */
    loadDriverAdd(input: LoadDriverAddRequest, options?: RpcOptions): UnaryCall<LoadDriverAddRequest, LoadDriverAddReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDriverAddRequest, LoadDriverAddReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadDriverRemove(LoadDriverRemoveRequest) returns (LoadDriverRemoveReply);
     */
    loadDriverRemove(input: LoadDriverRemoveRequest, options?: RpcOptions): UnaryCall<LoadDriverRemoveRequest, LoadDriverRemoveReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadDriverRemoveRequest, LoadDriverRemoveReply>("unary", this._transport, method, opt, input);
    }
}
