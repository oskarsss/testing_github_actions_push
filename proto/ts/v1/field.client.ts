// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/field.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { FieldService } from "./field";
import type { FieldValueSetReply } from "./field";
import type { FieldValueSetRequest } from "./field";
import type { FieldDeleteReply } from "./field";
import type { FieldDeleteRequest } from "./field";
import type { FieldUpdateReply } from "./field";
import type { FieldUpdateRequest } from "./field";
import type { FieldCreateReply } from "./field";
import type { FieldCreateRequest } from "./field";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { FieldGetReply } from "./field";
import type { FieldGetRequest } from "./field";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service FieldService
 */
export interface IFieldServiceClient {
    /**
     * @generated from protobuf rpc: FieldGet(FieldGetRequest) returns (FieldGetReply);
     */
    fieldGet(input: FieldGetRequest, options?: RpcOptions): UnaryCall<FieldGetRequest, FieldGetReply>;
    /**
     * @generated from protobuf rpc: FieldCreate(FieldCreateRequest) returns (FieldCreateReply);
     */
    fieldCreate(input: FieldCreateRequest, options?: RpcOptions): UnaryCall<FieldCreateRequest, FieldCreateReply>;
    /**
     * @generated from protobuf rpc: FieldUpdate(FieldUpdateRequest) returns (FieldUpdateReply);
     */
    fieldUpdate(input: FieldUpdateRequest, options?: RpcOptions): UnaryCall<FieldUpdateRequest, FieldUpdateReply>;
    /**
     * @generated from protobuf rpc: FieldDelete(FieldDeleteRequest) returns (FieldDeleteReply);
     */
    fieldDelete(input: FieldDeleteRequest, options?: RpcOptions): UnaryCall<FieldDeleteRequest, FieldDeleteReply>;
    /**
     * @generated from protobuf rpc: FieldValueSet(FieldValueSetRequest) returns (FieldValueSetReply);
     */
    fieldValueSet(input: FieldValueSetRequest, options?: RpcOptions): UnaryCall<FieldValueSetRequest, FieldValueSetReply>;
}
/**
 * @generated from protobuf service FieldService
 */
export class FieldServiceClient implements IFieldServiceClient, ServiceInfo {
    typeName = FieldService.typeName;
    methods = FieldService.methods;
    options = FieldService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: FieldGet(FieldGetRequest) returns (FieldGetReply);
     */
    fieldGet(input: FieldGetRequest, options?: RpcOptions): UnaryCall<FieldGetRequest, FieldGetReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<FieldGetRequest, FieldGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FieldCreate(FieldCreateRequest) returns (FieldCreateReply);
     */
    fieldCreate(input: FieldCreateRequest, options?: RpcOptions): UnaryCall<FieldCreateRequest, FieldCreateReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<FieldCreateRequest, FieldCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FieldUpdate(FieldUpdateRequest) returns (FieldUpdateReply);
     */
    fieldUpdate(input: FieldUpdateRequest, options?: RpcOptions): UnaryCall<FieldUpdateRequest, FieldUpdateReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<FieldUpdateRequest, FieldUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FieldDelete(FieldDeleteRequest) returns (FieldDeleteReply);
     */
    fieldDelete(input: FieldDeleteRequest, options?: RpcOptions): UnaryCall<FieldDeleteRequest, FieldDeleteReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<FieldDeleteRequest, FieldDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FieldValueSet(FieldValueSetRequest) returns (FieldValueSetReply);
     */
    fieldValueSet(input: FieldValueSetRequest, options?: RpcOptions): UnaryCall<FieldValueSetRequest, FieldValueSetReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<FieldValueSetRequest, FieldValueSetReply>("unary", this._transport, method, opt, input);
    }
}
