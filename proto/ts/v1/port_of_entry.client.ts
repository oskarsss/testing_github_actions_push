// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/port_of_entry.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PortOfEntryService } from "./port_of_entry";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PortOfEntryGetReply } from "./port_of_entry";
import type { PortOfEntryGetRequest } from "./port_of_entry";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service PortOfEntryService
 */
export interface IPortOfEntryServiceClient {
    /**
     * @generated from protobuf rpc: PortOfEntryGet(PortOfEntryGetRequest) returns (PortOfEntryGetReply);
     */
    portOfEntryGet(input: PortOfEntryGetRequest, options?: RpcOptions): UnaryCall<PortOfEntryGetRequest, PortOfEntryGetReply>;
}
/**
 * @generated from protobuf service PortOfEntryService
 */
export class PortOfEntryServiceClient implements IPortOfEntryServiceClient, ServiceInfo {
    typeName = PortOfEntryService.typeName;
    methods = PortOfEntryService.methods;
    options = PortOfEntryService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: PortOfEntryGet(PortOfEntryGetRequest) returns (PortOfEntryGetReply);
     */
    portOfEntryGet(input: PortOfEntryGetRequest, options?: RpcOptions): UnaryCall<PortOfEntryGetRequest, PortOfEntryGetReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PortOfEntryGetRequest, PortOfEntryGetReply>("unary", this._transport, method, opt, input);
    }
}
