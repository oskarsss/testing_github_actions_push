// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/load_invoice_payment_items.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LoadInvoicePaymentItemsService } from "./load_invoice_payment_items";
import type { LoadInvoicePaymentItemGetForLoadReply } from "./load_invoice_payment_items";
import type { LoadInvoicePaymentItemGetForLoadRequest } from "./load_invoice_payment_items";
import type { LoadInvoicePaymentItemDeleteReply } from "./load_invoice_payment_items";
import type { LoadInvoicePaymentItemDeleteRequest } from "./load_invoice_payment_items";
import type { LoadInvoicePaymentItemUpdateReply } from "./load_invoice_payment_items";
import type { LoadInvoicePaymentItemUpdateRequest } from "./load_invoice_payment_items";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoadInvoicePaymentItemAddReply } from "./load_invoice_payment_items";
import type { LoadInvoicePaymentItemAddRequest } from "./load_invoice_payment_items";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service LoadInvoicePaymentItemsService
 */
export interface ILoadInvoicePaymentItemsServiceClient {
    /**
     * @generated from protobuf rpc: LoadInvoicePaymentItemAdd(LoadInvoicePaymentItemAddRequest) returns (LoadInvoicePaymentItemAddReply);
     */
    loadInvoicePaymentItemAdd(input: LoadInvoicePaymentItemAddRequest, options?: RpcOptions): UnaryCall<LoadInvoicePaymentItemAddRequest, LoadInvoicePaymentItemAddReply>;
    /**
     * @generated from protobuf rpc: LoadInvoicePaymentItemUpdate(LoadInvoicePaymentItemUpdateRequest) returns (LoadInvoicePaymentItemUpdateReply);
     */
    loadInvoicePaymentItemUpdate(input: LoadInvoicePaymentItemUpdateRequest, options?: RpcOptions): UnaryCall<LoadInvoicePaymentItemUpdateRequest, LoadInvoicePaymentItemUpdateReply>;
    /**
     * @generated from protobuf rpc: LoadInvoicePaymentItemDelete(LoadInvoicePaymentItemDeleteRequest) returns (LoadInvoicePaymentItemDeleteReply);
     */
    loadInvoicePaymentItemDelete(input: LoadInvoicePaymentItemDeleteRequest, options?: RpcOptions): UnaryCall<LoadInvoicePaymentItemDeleteRequest, LoadInvoicePaymentItemDeleteReply>;
    /**
     * @generated from protobuf rpc: LoadInvoicePaymentItemGetForLoad(LoadInvoicePaymentItemGetForLoadRequest) returns (LoadInvoicePaymentItemGetForLoadReply);
     */
    loadInvoicePaymentItemGetForLoad(input: LoadInvoicePaymentItemGetForLoadRequest, options?: RpcOptions): UnaryCall<LoadInvoicePaymentItemGetForLoadRequest, LoadInvoicePaymentItemGetForLoadReply>;
}
/**
 * @generated from protobuf service LoadInvoicePaymentItemsService
 */
export class LoadInvoicePaymentItemsServiceClient implements ILoadInvoicePaymentItemsServiceClient, ServiceInfo {
    typeName = LoadInvoicePaymentItemsService.typeName;
    methods = LoadInvoicePaymentItemsService.methods;
    options = LoadInvoicePaymentItemsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: LoadInvoicePaymentItemAdd(LoadInvoicePaymentItemAddRequest) returns (LoadInvoicePaymentItemAddReply);
     */
    loadInvoicePaymentItemAdd(input: LoadInvoicePaymentItemAddRequest, options?: RpcOptions): UnaryCall<LoadInvoicePaymentItemAddRequest, LoadInvoicePaymentItemAddReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadInvoicePaymentItemAddRequest, LoadInvoicePaymentItemAddReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadInvoicePaymentItemUpdate(LoadInvoicePaymentItemUpdateRequest) returns (LoadInvoicePaymentItemUpdateReply);
     */
    loadInvoicePaymentItemUpdate(input: LoadInvoicePaymentItemUpdateRequest, options?: RpcOptions): UnaryCall<LoadInvoicePaymentItemUpdateRequest, LoadInvoicePaymentItemUpdateReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadInvoicePaymentItemUpdateRequest, LoadInvoicePaymentItemUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadInvoicePaymentItemDelete(LoadInvoicePaymentItemDeleteRequest) returns (LoadInvoicePaymentItemDeleteReply);
     */
    loadInvoicePaymentItemDelete(input: LoadInvoicePaymentItemDeleteRequest, options?: RpcOptions): UnaryCall<LoadInvoicePaymentItemDeleteRequest, LoadInvoicePaymentItemDeleteReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadInvoicePaymentItemDeleteRequest, LoadInvoicePaymentItemDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadInvoicePaymentItemGetForLoad(LoadInvoicePaymentItemGetForLoadRequest) returns (LoadInvoicePaymentItemGetForLoadReply);
     */
    loadInvoicePaymentItemGetForLoad(input: LoadInvoicePaymentItemGetForLoadRequest, options?: RpcOptions): UnaryCall<LoadInvoicePaymentItemGetForLoadRequest, LoadInvoicePaymentItemGetForLoadReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadInvoicePaymentItemGetForLoadRequest, LoadInvoicePaymentItemGetForLoadReply>("unary", this._transport, method, opt, input);
    }
}
