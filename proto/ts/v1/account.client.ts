// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/account.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AccountService } from "./account";
import type { AccountSelfieUploadReply } from "./account";
import type { AccountSelfieUploadRequest } from "./account";
import type { PasswordUpdateReply } from "./account";
import type { PasswordUpdateRequest } from "./account";
import type { GetChatPilotAccountReply } from "./account";
import type { GetChatPilotAccountRequest } from "./account";
import type { AccountUpdateReply } from "./account";
import type { AccountUpdateRequest } from "./account";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetAccountReply } from "./account";
import type { GetAccountRequest } from "./account";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service AccountService
 */
export interface IAccountServiceClient {
    /**
     * @generated from protobuf rpc: GetAccount(GetAccountRequest) returns (GetAccountReply);
     */
    getAccount(input: GetAccountRequest, options?: RpcOptions): UnaryCall<GetAccountRequest, GetAccountReply>;
    /**
     * @generated from protobuf rpc: UpdateAccount(AccountUpdateRequest) returns (AccountUpdateReply);
     */
    updateAccount(input: AccountUpdateRequest, options?: RpcOptions): UnaryCall<AccountUpdateRequest, AccountUpdateReply>;
    /**
     * @generated from protobuf rpc: GetChatPilotAccount(GetChatPilotAccountRequest) returns (GetChatPilotAccountReply);
     */
    getChatPilotAccount(input: GetChatPilotAccountRequest, options?: RpcOptions): UnaryCall<GetChatPilotAccountRequest, GetChatPilotAccountReply>;
    /**
     * @generated from protobuf rpc: PasswordUpdate(PasswordUpdateRequest) returns (PasswordUpdateReply);
     */
    passwordUpdate(input: PasswordUpdateRequest, options?: RpcOptions): UnaryCall<PasswordUpdateRequest, PasswordUpdateReply>;
    /**
     * @generated from protobuf rpc: AccountSelfieUpload(AccountSelfieUploadRequest) returns (AccountSelfieUploadReply);
     */
    accountSelfieUpload(input: AccountSelfieUploadRequest, options?: RpcOptions): UnaryCall<AccountSelfieUploadRequest, AccountSelfieUploadReply>;
}
/**
 * @generated from protobuf service AccountService
 */
export class AccountServiceClient implements IAccountServiceClient, ServiceInfo {
    typeName = AccountService.typeName;
    methods = AccountService.methods;
    options = AccountService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetAccount(GetAccountRequest) returns (GetAccountReply);
     */
    getAccount(input: GetAccountRequest, options?: RpcOptions): UnaryCall<GetAccountRequest, GetAccountReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAccountRequest, GetAccountReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateAccount(AccountUpdateRequest) returns (AccountUpdateReply);
     */
    updateAccount(input: AccountUpdateRequest, options?: RpcOptions): UnaryCall<AccountUpdateRequest, AccountUpdateReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<AccountUpdateRequest, AccountUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetChatPilotAccount(GetChatPilotAccountRequest) returns (GetChatPilotAccountReply);
     */
    getChatPilotAccount(input: GetChatPilotAccountRequest, options?: RpcOptions): UnaryCall<GetChatPilotAccountRequest, GetChatPilotAccountReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetChatPilotAccountRequest, GetChatPilotAccountReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: PasswordUpdate(PasswordUpdateRequest) returns (PasswordUpdateReply);
     */
    passwordUpdate(input: PasswordUpdateRequest, options?: RpcOptions): UnaryCall<PasswordUpdateRequest, PasswordUpdateReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<PasswordUpdateRequest, PasswordUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AccountSelfieUpload(AccountSelfieUploadRequest) returns (AccountSelfieUploadReply);
     */
    accountSelfieUpload(input: AccountSelfieUploadRequest, options?: RpcOptions): UnaryCall<AccountSelfieUploadRequest, AccountSelfieUploadReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<AccountSelfieUploadRequest, AccountSelfieUploadReply>("unary", this._transport, method, opt, input);
    }
}
