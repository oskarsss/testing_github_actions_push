// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/load_types.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LoadTypesService } from "./load_types";
import type { LoadTypeRetrieveReply } from "./load_types";
import type { LoadTypeRetrieveRequest } from "./load_types";
import type { LoadTypesGetReply } from "./load_types";
import type { LoadTypesGetRequest } from "./load_types";
import type { LoadTypeRestoreReply } from "./load_types";
import type { LoadTypeRestoreRequest } from "./load_types";
import type { LoadTypeDeleteReply } from "./load_types";
import type { LoadTypeDeleteRequest } from "./load_types";
import type { LoadTypeUpdateReply } from "./load_types";
import type { LoadTypeUpdateRequest } from "./load_types";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoadTypeCreateReply } from "./load_types";
import type { LoadTypeCreateRequest } from "./load_types";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service LoadTypesService
 */
export interface ILoadTypesServiceClient {
    /**
     * @generated from protobuf rpc: LoadTypeCreate(LoadTypeCreateRequest) returns (LoadTypeCreateReply);
     */
    loadTypeCreate(input: LoadTypeCreateRequest, options?: RpcOptions): UnaryCall<LoadTypeCreateRequest, LoadTypeCreateReply>;
    /**
     * @generated from protobuf rpc: LoadTypeUpdate(LoadTypeUpdateRequest) returns (LoadTypeUpdateReply);
     */
    loadTypeUpdate(input: LoadTypeUpdateRequest, options?: RpcOptions): UnaryCall<LoadTypeUpdateRequest, LoadTypeUpdateReply>;
    /**
     * @generated from protobuf rpc: LoadTypeDelete(LoadTypeDeleteRequest) returns (LoadTypeDeleteReply);
     */
    loadTypeDelete(input: LoadTypeDeleteRequest, options?: RpcOptions): UnaryCall<LoadTypeDeleteRequest, LoadTypeDeleteReply>;
    /**
     * @generated from protobuf rpc: LoadTypeRestore(LoadTypeRestoreRequest) returns (LoadTypeRestoreReply);
     */
    loadTypeRestore(input: LoadTypeRestoreRequest, options?: RpcOptions): UnaryCall<LoadTypeRestoreRequest, LoadTypeRestoreReply>;
    /**
     * @generated from protobuf rpc: LoadTypesGet(LoadTypesGetRequest) returns (LoadTypesGetReply);
     */
    loadTypesGet(input: LoadTypesGetRequest, options?: RpcOptions): UnaryCall<LoadTypesGetRequest, LoadTypesGetReply>;
    /**
     * @generated from protobuf rpc: LoadTypeRetrieve(LoadTypeRetrieveRequest) returns (LoadTypeRetrieveReply);
     */
    loadTypeRetrieve(input: LoadTypeRetrieveRequest, options?: RpcOptions): UnaryCall<LoadTypeRetrieveRequest, LoadTypeRetrieveReply>;
}
/**
 * @generated from protobuf service LoadTypesService
 */
export class LoadTypesServiceClient implements ILoadTypesServiceClient, ServiceInfo {
    typeName = LoadTypesService.typeName;
    methods = LoadTypesService.methods;
    options = LoadTypesService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: LoadTypeCreate(LoadTypeCreateRequest) returns (LoadTypeCreateReply);
     */
    loadTypeCreate(input: LoadTypeCreateRequest, options?: RpcOptions): UnaryCall<LoadTypeCreateRequest, LoadTypeCreateReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadTypeCreateRequest, LoadTypeCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadTypeUpdate(LoadTypeUpdateRequest) returns (LoadTypeUpdateReply);
     */
    loadTypeUpdate(input: LoadTypeUpdateRequest, options?: RpcOptions): UnaryCall<LoadTypeUpdateRequest, LoadTypeUpdateReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadTypeUpdateRequest, LoadTypeUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadTypeDelete(LoadTypeDeleteRequest) returns (LoadTypeDeleteReply);
     */
    loadTypeDelete(input: LoadTypeDeleteRequest, options?: RpcOptions): UnaryCall<LoadTypeDeleteRequest, LoadTypeDeleteReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadTypeDeleteRequest, LoadTypeDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadTypeRestore(LoadTypeRestoreRequest) returns (LoadTypeRestoreReply);
     */
    loadTypeRestore(input: LoadTypeRestoreRequest, options?: RpcOptions): UnaryCall<LoadTypeRestoreRequest, LoadTypeRestoreReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadTypeRestoreRequest, LoadTypeRestoreReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadTypesGet(LoadTypesGetRequest) returns (LoadTypesGetReply);
     */
    loadTypesGet(input: LoadTypesGetRequest, options?: RpcOptions): UnaryCall<LoadTypesGetRequest, LoadTypesGetReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadTypesGetRequest, LoadTypesGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoadTypeRetrieve(LoadTypeRetrieveRequest) returns (LoadTypeRetrieveReply);
     */
    loadTypeRetrieve(input: LoadTypeRetrieveRequest, options?: RpcOptions): UnaryCall<LoadTypeRetrieveRequest, LoadTypeRetrieveReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoadTypeRetrieveRequest, LoadTypeRetrieveReply>("unary", this._transport, method, opt, input);
    }
}
