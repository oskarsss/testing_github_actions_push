// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/loadboard.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LoadboardService } from "./loadboard";
import type { LB_SearchResultRouteRetrieveReply } from "./loadboard";
import type { LB_SearchResultRouteRetrieveRequest } from "./loadboard";
import type { LB_UnmuteSearchReply } from "./loadboard";
import type { LB_UnmuteSearchRequest } from "./loadboard";
import type { LB_MuteSearchReply } from "./loadboard";
import type { LB_MuteSearchRequest } from "./loadboard";
import type { LB_GetViewedSearchResultsReply } from "./loadboard";
import type { LB_GetViewedSearchResultsRequest } from "./loadboard";
import type { LB_CreateViewedSearchResultReply } from "./loadboard";
import type { LB_CreateViewedSearchResultRequest } from "./loadboard";
import type { LB_ListenSearchResultsReply } from "./loadboard";
import type { LB_ListenSearchResultsRequest } from "./loadboard";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { LB_RefreshSearchResultsReply } from "./loadboard";
import type { LB_RefreshSearchResultsRequest } from "./loadboard";
import type { LB_DeleteSearchReply } from "./loadboard";
import type { LB_DeleteSearchRequest } from "./loadboard";
import type { LB_UpdateSearchReply } from "./loadboard";
import type { LB_UpdateSearchRequest } from "./loadboard";
import type { LB_CreateSearchReply } from "./loadboard";
import type { LB_CreateSearchRequest } from "./loadboard";
import type { LB_GetSearchesReply } from "./loadboard";
import type { LB_GetSearchesRequest } from "./loadboard";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LB_GetEquipmentsReply } from "./loadboard";
import type { LB_GetEquipmentsRequest } from "./loadboard";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service LoadboardService
 */
export interface ILoadboardServiceClient {
    /**
     * @generated from protobuf rpc: LB_GetEquipments(LB_GetEquipmentsRequest) returns (LB_GetEquipmentsReply);
     */
    lBGetEquipments(input: LB_GetEquipmentsRequest, options?: RpcOptions): UnaryCall<LB_GetEquipmentsRequest, LB_GetEquipmentsReply>;
    /**
     * @generated from protobuf rpc: LB_GetSearches(LB_GetSearchesRequest) returns (LB_GetSearchesReply);
     */
    lBGetSearches(input: LB_GetSearchesRequest, options?: RpcOptions): UnaryCall<LB_GetSearchesRequest, LB_GetSearchesReply>;
    /**
     * @generated from protobuf rpc: LB_CreateSearch(LB_CreateSearchRequest) returns (LB_CreateSearchReply);
     */
    lBCreateSearch(input: LB_CreateSearchRequest, options?: RpcOptions): UnaryCall<LB_CreateSearchRequest, LB_CreateSearchReply>;
    /**
     * @generated from protobuf rpc: LB_UpdateSearch(LB_UpdateSearchRequest) returns (LB_UpdateSearchReply);
     */
    lBUpdateSearch(input: LB_UpdateSearchRequest, options?: RpcOptions): UnaryCall<LB_UpdateSearchRequest, LB_UpdateSearchReply>;
    /**
     * @generated from protobuf rpc: LB_DeleteSearch(LB_DeleteSearchRequest) returns (LB_DeleteSearchReply);
     */
    lBDeleteSearch(input: LB_DeleteSearchRequest, options?: RpcOptions): UnaryCall<LB_DeleteSearchRequest, LB_DeleteSearchReply>;
    /**
     * @generated from protobuf rpc: LB_RefreshSearchResults(LB_RefreshSearchResultsRequest) returns (LB_RefreshSearchResultsReply);
     */
    lBRefreshSearchResults(input: LB_RefreshSearchResultsRequest, options?: RpcOptions): UnaryCall<LB_RefreshSearchResultsRequest, LB_RefreshSearchResultsReply>;
    /**
     * @generated from protobuf rpc: LB_ListenSearchResults(LB_ListenSearchResultsRequest) returns (stream LB_ListenSearchResultsReply);
     */
    lBListenSearchResults(input: LB_ListenSearchResultsRequest, options?: RpcOptions): ServerStreamingCall<LB_ListenSearchResultsRequest, LB_ListenSearchResultsReply>;
    /**
     * @generated from protobuf rpc: LB_CreateViewedSearchResult(LB_CreateViewedSearchResultRequest) returns (LB_CreateViewedSearchResultReply);
     */
    lBCreateViewedSearchResult(input: LB_CreateViewedSearchResultRequest, options?: RpcOptions): UnaryCall<LB_CreateViewedSearchResultRequest, LB_CreateViewedSearchResultReply>;
    /**
     * @generated from protobuf rpc: LB_GetViewedSearchResults(LB_GetViewedSearchResultsRequest) returns (LB_GetViewedSearchResultsReply);
     */
    lBGetViewedSearchResults(input: LB_GetViewedSearchResultsRequest, options?: RpcOptions): UnaryCall<LB_GetViewedSearchResultsRequest, LB_GetViewedSearchResultsReply>;
    /**
     * @generated from protobuf rpc: LB_MuteSearch(LB_MuteSearchRequest) returns (LB_MuteSearchReply);
     */
    lBMuteSearch(input: LB_MuteSearchRequest, options?: RpcOptions): UnaryCall<LB_MuteSearchRequest, LB_MuteSearchReply>;
    /**
     * @generated from protobuf rpc: LB_UnmuteSearch(LB_UnmuteSearchRequest) returns (LB_UnmuteSearchReply);
     */
    lBUnmuteSearch(input: LB_UnmuteSearchRequest, options?: RpcOptions): UnaryCall<LB_UnmuteSearchRequest, LB_UnmuteSearchReply>;
    /**
     * @generated from protobuf rpc: LB_SearchResultRouteRetrieve(LB_SearchResultRouteRetrieveRequest) returns (LB_SearchResultRouteRetrieveReply);
     */
    lBSearchResultRouteRetrieve(input: LB_SearchResultRouteRetrieveRequest, options?: RpcOptions): UnaryCall<LB_SearchResultRouteRetrieveRequest, LB_SearchResultRouteRetrieveReply>;
}
/**
 * @generated from protobuf service LoadboardService
 */
export class LoadboardServiceClient implements ILoadboardServiceClient, ServiceInfo {
    typeName = LoadboardService.typeName;
    methods = LoadboardService.methods;
    options = LoadboardService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: LB_GetEquipments(LB_GetEquipmentsRequest) returns (LB_GetEquipmentsReply);
     */
    lBGetEquipments(input: LB_GetEquipmentsRequest, options?: RpcOptions): UnaryCall<LB_GetEquipmentsRequest, LB_GetEquipmentsReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_GetEquipmentsRequest, LB_GetEquipmentsReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_GetSearches(LB_GetSearchesRequest) returns (LB_GetSearchesReply);
     */
    lBGetSearches(input: LB_GetSearchesRequest, options?: RpcOptions): UnaryCall<LB_GetSearchesRequest, LB_GetSearchesReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_GetSearchesRequest, LB_GetSearchesReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_CreateSearch(LB_CreateSearchRequest) returns (LB_CreateSearchReply);
     */
    lBCreateSearch(input: LB_CreateSearchRequest, options?: RpcOptions): UnaryCall<LB_CreateSearchRequest, LB_CreateSearchReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_CreateSearchRequest, LB_CreateSearchReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_UpdateSearch(LB_UpdateSearchRequest) returns (LB_UpdateSearchReply);
     */
    lBUpdateSearch(input: LB_UpdateSearchRequest, options?: RpcOptions): UnaryCall<LB_UpdateSearchRequest, LB_UpdateSearchReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_UpdateSearchRequest, LB_UpdateSearchReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_DeleteSearch(LB_DeleteSearchRequest) returns (LB_DeleteSearchReply);
     */
    lBDeleteSearch(input: LB_DeleteSearchRequest, options?: RpcOptions): UnaryCall<LB_DeleteSearchRequest, LB_DeleteSearchReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_DeleteSearchRequest, LB_DeleteSearchReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_RefreshSearchResults(LB_RefreshSearchResultsRequest) returns (LB_RefreshSearchResultsReply);
     */
    lBRefreshSearchResults(input: LB_RefreshSearchResultsRequest, options?: RpcOptions): UnaryCall<LB_RefreshSearchResultsRequest, LB_RefreshSearchResultsReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_RefreshSearchResultsRequest, LB_RefreshSearchResultsReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_ListenSearchResults(LB_ListenSearchResultsRequest) returns (stream LB_ListenSearchResultsReply);
     */
    lBListenSearchResults(input: LB_ListenSearchResultsRequest, options?: RpcOptions): ServerStreamingCall<LB_ListenSearchResultsRequest, LB_ListenSearchResultsReply> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_ListenSearchResultsRequest, LB_ListenSearchResultsReply>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_CreateViewedSearchResult(LB_CreateViewedSearchResultRequest) returns (LB_CreateViewedSearchResultReply);
     */
    lBCreateViewedSearchResult(input: LB_CreateViewedSearchResultRequest, options?: RpcOptions): UnaryCall<LB_CreateViewedSearchResultRequest, LB_CreateViewedSearchResultReply> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_CreateViewedSearchResultRequest, LB_CreateViewedSearchResultReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_GetViewedSearchResults(LB_GetViewedSearchResultsRequest) returns (LB_GetViewedSearchResultsReply);
     */
    lBGetViewedSearchResults(input: LB_GetViewedSearchResultsRequest, options?: RpcOptions): UnaryCall<LB_GetViewedSearchResultsRequest, LB_GetViewedSearchResultsReply> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_GetViewedSearchResultsRequest, LB_GetViewedSearchResultsReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_MuteSearch(LB_MuteSearchRequest) returns (LB_MuteSearchReply);
     */
    lBMuteSearch(input: LB_MuteSearchRequest, options?: RpcOptions): UnaryCall<LB_MuteSearchRequest, LB_MuteSearchReply> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_MuteSearchRequest, LB_MuteSearchReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_UnmuteSearch(LB_UnmuteSearchRequest) returns (LB_UnmuteSearchReply);
     */
    lBUnmuteSearch(input: LB_UnmuteSearchRequest, options?: RpcOptions): UnaryCall<LB_UnmuteSearchRequest, LB_UnmuteSearchReply> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_UnmuteSearchRequest, LB_UnmuteSearchReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LB_SearchResultRouteRetrieve(LB_SearchResultRouteRetrieveRequest) returns (LB_SearchResultRouteRetrieveReply);
     */
    lBSearchResultRouteRetrieve(input: LB_SearchResultRouteRetrieveRequest, options?: RpcOptions): UnaryCall<LB_SearchResultRouteRetrieveRequest, LB_SearchResultRouteRetrieveReply> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<LB_SearchResultRouteRetrieveRequest, LB_SearchResultRouteRetrieveReply>("unary", this._transport, method, opt, input);
    }
}
