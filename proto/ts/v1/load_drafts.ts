// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/load_drafts.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { LoadData_Load } from "./loads";
import { LoadDraftModel_Status } from "./models/model_load_draft";
import { LoadModel_Stop_Type } from "./models/model_load";
/**
 * @generated from protobuf message LoadDraftFields
 */
export interface LoadDraftFields {
    /**
     * @generated from protobuf field: string rate_con_url = 1;
     */
    rateConUrl: string;
    /**
     * @generated from protobuf field: string rate_con_file_name = 2;
     */
    rateConFileName: string;
    /**
     * @generated from protobuf field: string broker_id = 3;
     */
    brokerId: string;
    /**
     * @generated from protobuf field: string broker_contact_email = 4;
     */
    brokerContactEmail: string;
    /**
     * @generated from protobuf field: string customer_id = 5;
     */
    customerId: string;
    /**
     * @generated from protobuf field: string dispatcher_id = 6;
     */
    dispatcherId: string;
    /**
     * @generated from protobuf field: string equipment_type_id = 7;
     */
    equipmentTypeId: string;
    /**
     * @generated from protobuf field: string type_id = 8;
     */
    typeId: string;
    /**
     * @generated from protobuf field: string note = 9;
     */
    note: string;
    /**
     * @generated from protobuf field: string commodity = 10;
     */
    commodity: string;
    /**
     * @generated from protobuf field: double temperature = 11;
     */
    temperature: number;
    /**
     * @generated from protobuf field: int64 weight = 12;
     */
    weight: number;
    /**
     * @generated from protobuf field: string invoice_note = 13;
     */
    invoiceNote: string;
    /**
     * @generated from protobuf field: int64 loaded_miles = 14;
     */
    loadedMiles: number;
    /**
     * @generated from protobuf field: int64 empty_miles = 15;
     */
    emptyMiles: number;
    /**
     * @generated from protobuf field: string reference_id = 16;
     */
    referenceId: string;
    /**
     * @generated from protobuf field: string settlement_revenue_type_id = 17;
     */
    settlementRevenueTypeId: string;
    /**
     * @generated from protobuf field: repeated LoadDraftFields.Stop stops = 18;
     */
    stops: LoadDraftFields_Stop[];
    /**
     * @generated from protobuf field: repeated LoadDraftFields.InvoiceItem invoice_items = 19;
     */
    invoiceItems: LoadDraftFields_InvoiceItem[];
}
/**
 * @generated from protobuf message LoadDraftFields.Stop
 */
export interface LoadDraftFields_Stop {
    /**
     * @generated from protobuf field: string stop_id = 1;
     */
    stopId: string;
    /**
     * @generated from protobuf field: string appointment_start_at = 2;
     */
    appointmentStartAt: string;
    /**
     * @generated from protobuf field: string appointment_end_at = 3;
     */
    appointmentEndAt: string;
    /**
     * @generated from protobuf field: bool fixed_appointment = 4;
     */
    fixedAppointment: boolean;
    /**
     * @generated from protobuf field: string contact_name = 5;
     */
    contactName: string;
    /**
     * @generated from protobuf field: string contact_phone = 6;
     */
    contactPhone: string;
    /**
     * @generated from protobuf field: string location_id = 7;
     */
    locationId: string;
    /**
     * @generated from protobuf field: double location_id_lat = 8;
     */
    locationIdLat: number;
    /**
     * @generated from protobuf field: double location_id_lon = 9;
     */
    locationIdLon: number;
    /**
     * @generated from protobuf field: string location_id_address = 10;
     */
    locationIdAddress: string;
    /**
     * @generated from protobuf field: string location_id_line1 = 12;
     */
    locationIdLine1: string;
    /**
     * @generated from protobuf field: string location_id_line2 = 13;
     */
    locationIdLine2: string;
    /**
     * @generated from protobuf field: string location_id_city = 11;
     */
    locationIdCity: string;
    /**
     * @generated from protobuf field: string location_id_state = 14;
     */
    locationIdState: string;
    /**
     * @generated from protobuf field: string location_id_postal_code = 15;
     */
    locationIdPostalCode: string;
    /**
     * @generated from protobuf field: string location_id_name = 16;
     */
    locationIdName: string;
    /**
     * @generated from protobuf field: string note = 17;
     */
    note: string;
    /**
     * @generated from protobuf field: string reference_id = 18;
     */
    referenceId: string;
    /**
     * @generated from protobuf field: int64 sequence = 19;
     */
    sequence: number;
    /**
     * @generated from protobuf field: LoadModel.Stop.Type type = 20;
     */
    type: LoadModel_Stop_Type;
    /**
     * @generated from protobuf field: int64 distance_to_next_stop = 21;
     */
    distanceToNextStop: number;
}
/**
 * @generated from protobuf message LoadDraftFields.InvoiceItem
 */
export interface LoadDraftFields_InvoiceItem {
    /**
     * @generated from protobuf field: string invoice_item_id = 1;
     */
    invoiceItemId: string;
    /**
     * @generated from protobuf field: string category_id = 2;
     */
    categoryId: string;
    /**
     * @generated from protobuf field: double amount_per_unit = 3;
     */
    amountPerUnit: number;
    /**
     * @generated from protobuf field: int64 units = 4;
     */
    units: number;
}
/**
 * @generated from protobuf message LoadDraftsGetRequest
 */
export interface LoadDraftsGetRequest {
}
/**
 * @generated from protobuf message LoadDraftsGetReply
 */
export interface LoadDraftsGetReply {
    /**
     * @generated from protobuf field: repeated LoadDraftsGetReply.LoadDraft load_drafts = 1;
     */
    loadDrafts: LoadDraftsGetReply_LoadDraft[];
}
/**
 * @generated from protobuf message LoadDraftsGetReply.LoadDraft
 */
export interface LoadDraftsGetReply_LoadDraft {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
    /**
     * @generated from protobuf field: string broker_id = 2;
     */
    brokerId: string;
    /**
     * @generated from protobuf field: string customer_id = 3;
     */
    customerId: string;
    /**
     * @generated from protobuf field: string stops = 4;
     */
    stops: string;
    /**
     * @generated from protobuf field: LoadDraftModel.Status status = 5;
     */
    status: LoadDraftModel_Status;
    /**
     * @generated from protobuf field: string updated_at = 6;
     */
    updatedAt: string;
}
/**
 * @generated from protobuf message LoadDraftRetrieveRequest
 */
export interface LoadDraftRetrieveRequest {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
}
/**
 * @generated from protobuf message LoadDraftRetrieveReply
 */
export interface LoadDraftRetrieveReply {
    /**
     * @generated from protobuf field: LoadDraftRetrieveReply.LoadDraft load_draft = 1;
     */
    loadDraft?: LoadDraftRetrieveReply_LoadDraft;
}
/**
 * @generated from protobuf message LoadDraftRetrieveReply.LoadDraft
 */
export interface LoadDraftRetrieveReply_LoadDraft {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
    /**
     * @generated from protobuf field: LoadDraftModel.Status status = 2;
     */
    status: LoadDraftModel_Status;
    /**
     * @generated from protobuf field: string updated_at = 3;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: bool deleted = 4;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: LoadDraftFields fields = 5;
     */
    fields?: LoadDraftFields;
}
/**
 * Load Draft Create
 *
 * @generated from protobuf message LoadDraftCreateRequest
 */
export interface LoadDraftCreateRequest {
}
/**
 * @generated from protobuf message LoadDraftCreateReply
 */
export interface LoadDraftCreateReply {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
}
/**
 * Load Draft Create From Load
 *
 * @generated from protobuf message LoadDraftCreateFromLoadRequest
 */
export interface LoadDraftCreateFromLoadRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
}
/**
 * @generated from protobuf message LoadDraftCreateFromLoadReply
 */
export interface LoadDraftCreateFromLoadReply {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
}
/**
 * Load Draft Update
 *
 * @generated from protobuf message LoadDraftUpdateRequest
 */
export interface LoadDraftUpdateRequest {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
    /**
     * @generated from protobuf field: LoadDraftFields fields = 2;
     */
    fields?: LoadDraftFields;
}
/**
 * @generated from protobuf message LoadDraftUpdateReply
 */
export interface LoadDraftUpdateReply {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
    /**
     * @generated from protobuf field: optional LoadDraftUpdateReply.Geodata geodata = 2;
     */
    geodata?: LoadDraftUpdateReply_Geodata;
}
/**
 * @generated from protobuf message LoadDraftUpdateReply.Geodata
 */
export interface LoadDraftUpdateReply_Geodata {
    /**
     * @generated from protobuf field: repeated double distances = 1;
     */
    distances: number[];
    /**
     * @generated from protobuf field: int64 loaded_miles = 2;
     */
    loadedMiles: number;
}
/**
 * Load Draft Delete
 *
 * @generated from protobuf message LoadDraftDeleteRequest
 */
export interface LoadDraftDeleteRequest {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
}
/**
 * @generated from protobuf message LoadDraftDeleteReply
 */
export interface LoadDraftDeleteReply {
}
/**
 * Load Draft - Check Duplicate
 *
 * @generated from protobuf message LoadDraftCheckDuplicateRequest
 */
export interface LoadDraftCheckDuplicateRequest {
    /**
     * @generated from protobuf field: LoadDraftCheckDuplicateRequest.EntityType entity_type = 1;
     */
    entityType: LoadDraftCheckDuplicateRequest_EntityType;
    /**
     * @generated from protobuf field: string entity_id = 2;
     */
    entityId: string;
    /**
     * @generated from protobuf field: string reference_id = 3;
     */
    referenceId: string;
}
/**
 * @generated from protobuf enum LoadDraftCheckDuplicateRequest.EntityType
 */
export enum LoadDraftCheckDuplicateRequest_EntityType {
    /**
     * @generated from protobuf enum value: BROKER = 0;
     */
    BROKER = 0,
    /**
     * @generated from protobuf enum value: CUSTOMER = 1;
     */
    CUSTOMER = 1
}
/**
 * @generated from protobuf message LoadDraftCheckDuplicateReply
 */
export interface LoadDraftCheckDuplicateReply {
    /**
     * @generated from protobuf field: bool is_duplicate = 1;
     */
    isDuplicate: boolean;
    /**
     * @generated from protobuf field: string load_id = 2;
     */
    loadId: string;
    /**
     * @generated from protobuf field: string load_friendly_id = 3;
     */
    loadFriendlyId: string;
}
/**
 * Load Drafts - Delete All
 *
 * @generated from protobuf message LoadDraftsDeleteAllRequest
 */
export interface LoadDraftsDeleteAllRequest {
}
/**
 * @generated from protobuf message LoadDraftsDeleteAllReply
 */
export interface LoadDraftsDeleteAllReply {
}
/**
 * Load Draft Create Load
 *
 * @generated from protobuf message LoadDraftCreateLoadRequest
 */
export interface LoadDraftCreateLoadRequest {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
}
/**
 * @generated from protobuf message LoadDraftCreateLoadReply
 */
export interface LoadDraftCreateLoadReply {
    /**
     * @generated from protobuf field: LoadData.Load load = 1;
     */
    load?: LoadData_Load;
}
/**
 * Start Extract
 *
 * @generated from protobuf message StartExtractRequest
 */
export interface StartExtractRequest {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
    /**
     * @generated from protobuf field: string file_path = 2;
     */
    filePath: string;
    /**
     * @generated from protobuf field: string file_name = 3;
     */
    fileName: string;
}
/**
 * @generated from protobuf message StartExtractReply
 */
export interface StartExtractReply {
}
/**
 * Cancel Extract
 *
 * @generated from protobuf message CancelExtractRequest
 */
export interface CancelExtractRequest {
    /**
     * @generated from protobuf field: string load_draft_id = 1;
     */
    loadDraftId: string;
}
/**
 * @generated from protobuf message CancelExtractReply
 */
export interface CancelExtractReply {
}
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftFields$Type extends MessageType<LoadDraftFields> {
    constructor() {
        super("LoadDraftFields", [
            { no: 1, name: "rate_con_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "rate_con_file_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "broker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "broker_contact_email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "dispatcher_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "equipment_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "commodity", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "temperature", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 12, name: "weight", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 13, name: "invoice_note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "loaded_miles", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 15, name: "empty_miles", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 16, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "settlement_revenue_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "stops", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LoadDraftFields_Stop },
            { no: 19, name: "invoice_items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LoadDraftFields_InvoiceItem }
        ]);
    }
    create(value?: PartialMessage<LoadDraftFields>): LoadDraftFields {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.rateConUrl = "";
        message.rateConFileName = "";
        message.brokerId = "";
        message.brokerContactEmail = "";
        message.customerId = "";
        message.dispatcherId = "";
        message.equipmentTypeId = "";
        message.typeId = "";
        message.note = "";
        message.commodity = "";
        message.temperature = 0;
        message.weight = 0;
        message.invoiceNote = "";
        message.loadedMiles = 0;
        message.emptyMiles = 0;
        message.referenceId = "";
        message.settlementRevenueTypeId = "";
        message.stops = [];
        message.invoiceItems = [];
        if (value !== undefined)
            reflectionMergePartial<LoadDraftFields>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftFields): LoadDraftFields {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string rate_con_url */ 1:
                    message.rateConUrl = reader.string();
                    break;
                case /* string rate_con_file_name */ 2:
                    message.rateConFileName = reader.string();
                    break;
                case /* string broker_id */ 3:
                    message.brokerId = reader.string();
                    break;
                case /* string broker_contact_email */ 4:
                    message.brokerContactEmail = reader.string();
                    break;
                case /* string customer_id */ 5:
                    message.customerId = reader.string();
                    break;
                case /* string dispatcher_id */ 6:
                    message.dispatcherId = reader.string();
                    break;
                case /* string equipment_type_id */ 7:
                    message.equipmentTypeId = reader.string();
                    break;
                case /* string type_id */ 8:
                    message.typeId = reader.string();
                    break;
                case /* string note */ 9:
                    message.note = reader.string();
                    break;
                case /* string commodity */ 10:
                    message.commodity = reader.string();
                    break;
                case /* double temperature */ 11:
                    message.temperature = reader.double();
                    break;
                case /* int64 weight */ 12:
                    message.weight = reader.int64().toNumber();
                    break;
                case /* string invoice_note */ 13:
                    message.invoiceNote = reader.string();
                    break;
                case /* int64 loaded_miles */ 14:
                    message.loadedMiles = reader.int64().toNumber();
                    break;
                case /* int64 empty_miles */ 15:
                    message.emptyMiles = reader.int64().toNumber();
                    break;
                case /* string reference_id */ 16:
                    message.referenceId = reader.string();
                    break;
                case /* string settlement_revenue_type_id */ 17:
                    message.settlementRevenueTypeId = reader.string();
                    break;
                case /* repeated LoadDraftFields.Stop stops */ 18:
                    message.stops.push(LoadDraftFields_Stop.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated LoadDraftFields.InvoiceItem invoice_items */ 19:
                    message.invoiceItems.push(LoadDraftFields_InvoiceItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftFields, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string rate_con_url = 1; */
        if (message.rateConUrl !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.rateConUrl);
        /* string rate_con_file_name = 2; */
        if (message.rateConFileName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.rateConFileName);
        /* string broker_id = 3; */
        if (message.brokerId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.brokerId);
        /* string broker_contact_email = 4; */
        if (message.brokerContactEmail !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.brokerContactEmail);
        /* string customer_id = 5; */
        if (message.customerId !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.customerId);
        /* string dispatcher_id = 6; */
        if (message.dispatcherId !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.dispatcherId);
        /* string equipment_type_id = 7; */
        if (message.equipmentTypeId !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.equipmentTypeId);
        /* string type_id = 8; */
        if (message.typeId !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.typeId);
        /* string note = 9; */
        if (message.note !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.note);
        /* string commodity = 10; */
        if (message.commodity !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.commodity);
        /* double temperature = 11; */
        if (message.temperature !== 0)
            writer.tag(11, WireType.Bit64).double(message.temperature);
        /* int64 weight = 12; */
        if (message.weight !== 0)
            writer.tag(12, WireType.Varint).int64(message.weight);
        /* string invoice_note = 13; */
        if (message.invoiceNote !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.invoiceNote);
        /* int64 loaded_miles = 14; */
        if (message.loadedMiles !== 0)
            writer.tag(14, WireType.Varint).int64(message.loadedMiles);
        /* int64 empty_miles = 15; */
        if (message.emptyMiles !== 0)
            writer.tag(15, WireType.Varint).int64(message.emptyMiles);
        /* string reference_id = 16; */
        if (message.referenceId !== "")
            writer.tag(16, WireType.LengthDelimited).string(message.referenceId);
        /* string settlement_revenue_type_id = 17; */
        if (message.settlementRevenueTypeId !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.settlementRevenueTypeId);
        /* repeated LoadDraftFields.Stop stops = 18; */
        for (let i = 0; i < message.stops.length; i++)
            LoadDraftFields_Stop.internalBinaryWrite(message.stops[i], writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* repeated LoadDraftFields.InvoiceItem invoice_items = 19; */
        for (let i = 0; i < message.invoiceItems.length; i++)
            LoadDraftFields_InvoiceItem.internalBinaryWrite(message.invoiceItems[i], writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftFields
 */
export const LoadDraftFields = new LoadDraftFields$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftFields_Stop$Type extends MessageType<LoadDraftFields_Stop> {
    constructor() {
        super("LoadDraftFields.Stop", [
            { no: 1, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "appointment_start_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "appointment_end_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "fixed_appointment", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "contact_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "contact_phone", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "location_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "location_id_lat", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 9, name: "location_id_lon", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "location_id_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "location_id_line1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "location_id_line2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "location_id_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "location_id_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "location_id_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "location_id_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "sequence", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 20, name: "type", kind: "enum", T: () => ["LoadModel.Stop.Type", LoadModel_Stop_Type] },
            { no: 21, name: "distance_to_next_stop", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftFields_Stop>): LoadDraftFields_Stop {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.stopId = "";
        message.appointmentStartAt = "";
        message.appointmentEndAt = "";
        message.fixedAppointment = false;
        message.contactName = "";
        message.contactPhone = "";
        message.locationId = "";
        message.locationIdLat = 0;
        message.locationIdLon = 0;
        message.locationIdAddress = "";
        message.locationIdLine1 = "";
        message.locationIdLine2 = "";
        message.locationIdCity = "";
        message.locationIdState = "";
        message.locationIdPostalCode = "";
        message.locationIdName = "";
        message.note = "";
        message.referenceId = "";
        message.sequence = 0;
        message.type = 0;
        message.distanceToNextStop = 0;
        if (value !== undefined)
            reflectionMergePartial<LoadDraftFields_Stop>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftFields_Stop): LoadDraftFields_Stop {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string stop_id */ 1:
                    message.stopId = reader.string();
                    break;
                case /* string appointment_start_at */ 2:
                    message.appointmentStartAt = reader.string();
                    break;
                case /* string appointment_end_at */ 3:
                    message.appointmentEndAt = reader.string();
                    break;
                case /* bool fixed_appointment */ 4:
                    message.fixedAppointment = reader.bool();
                    break;
                case /* string contact_name */ 5:
                    message.contactName = reader.string();
                    break;
                case /* string contact_phone */ 6:
                    message.contactPhone = reader.string();
                    break;
                case /* string location_id */ 7:
                    message.locationId = reader.string();
                    break;
                case /* double location_id_lat */ 8:
                    message.locationIdLat = reader.double();
                    break;
                case /* double location_id_lon */ 9:
                    message.locationIdLon = reader.double();
                    break;
                case /* string location_id_address */ 10:
                    message.locationIdAddress = reader.string();
                    break;
                case /* string location_id_line1 */ 12:
                    message.locationIdLine1 = reader.string();
                    break;
                case /* string location_id_line2 */ 13:
                    message.locationIdLine2 = reader.string();
                    break;
                case /* string location_id_city */ 11:
                    message.locationIdCity = reader.string();
                    break;
                case /* string location_id_state */ 14:
                    message.locationIdState = reader.string();
                    break;
                case /* string location_id_postal_code */ 15:
                    message.locationIdPostalCode = reader.string();
                    break;
                case /* string location_id_name */ 16:
                    message.locationIdName = reader.string();
                    break;
                case /* string note */ 17:
                    message.note = reader.string();
                    break;
                case /* string reference_id */ 18:
                    message.referenceId = reader.string();
                    break;
                case /* int64 sequence */ 19:
                    message.sequence = reader.int64().toNumber();
                    break;
                case /* LoadModel.Stop.Type type */ 20:
                    message.type = reader.int32();
                    break;
                case /* int64 distance_to_next_stop */ 21:
                    message.distanceToNextStop = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftFields_Stop, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string stop_id = 1; */
        if (message.stopId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.stopId);
        /* string appointment_start_at = 2; */
        if (message.appointmentStartAt !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.appointmentStartAt);
        /* string appointment_end_at = 3; */
        if (message.appointmentEndAt !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.appointmentEndAt);
        /* bool fixed_appointment = 4; */
        if (message.fixedAppointment !== false)
            writer.tag(4, WireType.Varint).bool(message.fixedAppointment);
        /* string contact_name = 5; */
        if (message.contactName !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.contactName);
        /* string contact_phone = 6; */
        if (message.contactPhone !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.contactPhone);
        /* string location_id = 7; */
        if (message.locationId !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.locationId);
        /* double location_id_lat = 8; */
        if (message.locationIdLat !== 0)
            writer.tag(8, WireType.Bit64).double(message.locationIdLat);
        /* double location_id_lon = 9; */
        if (message.locationIdLon !== 0)
            writer.tag(9, WireType.Bit64).double(message.locationIdLon);
        /* string location_id_address = 10; */
        if (message.locationIdAddress !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.locationIdAddress);
        /* string location_id_line1 = 12; */
        if (message.locationIdLine1 !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.locationIdLine1);
        /* string location_id_line2 = 13; */
        if (message.locationIdLine2 !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.locationIdLine2);
        /* string location_id_city = 11; */
        if (message.locationIdCity !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.locationIdCity);
        /* string location_id_state = 14; */
        if (message.locationIdState !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.locationIdState);
        /* string location_id_postal_code = 15; */
        if (message.locationIdPostalCode !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.locationIdPostalCode);
        /* string location_id_name = 16; */
        if (message.locationIdName !== "")
            writer.tag(16, WireType.LengthDelimited).string(message.locationIdName);
        /* string note = 17; */
        if (message.note !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.note);
        /* string reference_id = 18; */
        if (message.referenceId !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.referenceId);
        /* int64 sequence = 19; */
        if (message.sequence !== 0)
            writer.tag(19, WireType.Varint).int64(message.sequence);
        /* LoadModel.Stop.Type type = 20; */
        if (message.type !== 0)
            writer.tag(20, WireType.Varint).int32(message.type);
        /* int64 distance_to_next_stop = 21; */
        if (message.distanceToNextStop !== 0)
            writer.tag(21, WireType.Varint).int64(message.distanceToNextStop);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftFields.Stop
 */
export const LoadDraftFields_Stop = new LoadDraftFields_Stop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftFields_InvoiceItem$Type extends MessageType<LoadDraftFields_InvoiceItem> {
    constructor() {
        super("LoadDraftFields.InvoiceItem", [
            { no: 1, name: "invoice_item_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "category_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "amount_per_unit", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "units", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftFields_InvoiceItem>): LoadDraftFields_InvoiceItem {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoiceItemId = "";
        message.categoryId = "";
        message.amountPerUnit = 0;
        message.units = 0;
        if (value !== undefined)
            reflectionMergePartial<LoadDraftFields_InvoiceItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftFields_InvoiceItem): LoadDraftFields_InvoiceItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoice_item_id */ 1:
                    message.invoiceItemId = reader.string();
                    break;
                case /* string category_id */ 2:
                    message.categoryId = reader.string();
                    break;
                case /* double amount_per_unit */ 3:
                    message.amountPerUnit = reader.double();
                    break;
                case /* int64 units */ 4:
                    message.units = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftFields_InvoiceItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoice_item_id = 1; */
        if (message.invoiceItemId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoiceItemId);
        /* string category_id = 2; */
        if (message.categoryId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.categoryId);
        /* double amount_per_unit = 3; */
        if (message.amountPerUnit !== 0)
            writer.tag(3, WireType.Bit64).double(message.amountPerUnit);
        /* int64 units = 4; */
        if (message.units !== 0)
            writer.tag(4, WireType.Varint).int64(message.units);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftFields.InvoiceItem
 */
export const LoadDraftFields_InvoiceItem = new LoadDraftFields_InvoiceItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftsGetRequest$Type extends MessageType<LoadDraftsGetRequest> {
    constructor() {
        super("LoadDraftsGetRequest", []);
    }
    create(value?: PartialMessage<LoadDraftsGetRequest>): LoadDraftsGetRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadDraftsGetRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftsGetRequest): LoadDraftsGetRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadDraftsGetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftsGetRequest
 */
export const LoadDraftsGetRequest = new LoadDraftsGetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftsGetReply$Type extends MessageType<LoadDraftsGetReply> {
    constructor() {
        super("LoadDraftsGetReply", [
            { no: 1, name: "load_drafts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LoadDraftsGetReply_LoadDraft }
        ]);
    }
    create(value?: PartialMessage<LoadDraftsGetReply>): LoadDraftsGetReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDrafts = [];
        if (value !== undefined)
            reflectionMergePartial<LoadDraftsGetReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftsGetReply): LoadDraftsGetReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated LoadDraftsGetReply.LoadDraft load_drafts */ 1:
                    message.loadDrafts.push(LoadDraftsGetReply_LoadDraft.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftsGetReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated LoadDraftsGetReply.LoadDraft load_drafts = 1; */
        for (let i = 0; i < message.loadDrafts.length; i++)
            LoadDraftsGetReply_LoadDraft.internalBinaryWrite(message.loadDrafts[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftsGetReply
 */
export const LoadDraftsGetReply = new LoadDraftsGetReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftsGetReply_LoadDraft$Type extends MessageType<LoadDraftsGetReply_LoadDraft> {
    constructor() {
        super("LoadDraftsGetReply.LoadDraft", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "broker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "stops", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "status", kind: "enum", T: () => ["LoadDraftModel.Status", LoadDraftModel_Status, "STATUS_"] },
            { no: 6, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftsGetReply_LoadDraft>): LoadDraftsGetReply_LoadDraft {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        message.brokerId = "";
        message.customerId = "";
        message.stops = "";
        message.status = 0;
        message.updatedAt = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftsGetReply_LoadDraft>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftsGetReply_LoadDraft): LoadDraftsGetReply_LoadDraft {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                case /* string broker_id */ 2:
                    message.brokerId = reader.string();
                    break;
                case /* string customer_id */ 3:
                    message.customerId = reader.string();
                    break;
                case /* string stops */ 4:
                    message.stops = reader.string();
                    break;
                case /* LoadDraftModel.Status status */ 5:
                    message.status = reader.int32();
                    break;
                case /* string updated_at */ 6:
                    message.updatedAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftsGetReply_LoadDraft, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        /* string broker_id = 2; */
        if (message.brokerId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.brokerId);
        /* string customer_id = 3; */
        if (message.customerId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.customerId);
        /* string stops = 4; */
        if (message.stops !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.stops);
        /* LoadDraftModel.Status status = 5; */
        if (message.status !== 0)
            writer.tag(5, WireType.Varint).int32(message.status);
        /* string updated_at = 6; */
        if (message.updatedAt !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftsGetReply.LoadDraft
 */
export const LoadDraftsGetReply_LoadDraft = new LoadDraftsGetReply_LoadDraft$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftRetrieveRequest$Type extends MessageType<LoadDraftRetrieveRequest> {
    constructor() {
        super("LoadDraftRetrieveRequest", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftRetrieveRequest>): LoadDraftRetrieveRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftRetrieveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftRetrieveRequest): LoadDraftRetrieveRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftRetrieveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftRetrieveRequest
 */
export const LoadDraftRetrieveRequest = new LoadDraftRetrieveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftRetrieveReply$Type extends MessageType<LoadDraftRetrieveReply> {
    constructor() {
        super("LoadDraftRetrieveReply", [
            { no: 1, name: "load_draft", kind: "message", T: () => LoadDraftRetrieveReply_LoadDraft }
        ]);
    }
    create(value?: PartialMessage<LoadDraftRetrieveReply>): LoadDraftRetrieveReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadDraftRetrieveReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftRetrieveReply): LoadDraftRetrieveReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* LoadDraftRetrieveReply.LoadDraft load_draft */ 1:
                    message.loadDraft = LoadDraftRetrieveReply_LoadDraft.internalBinaryRead(reader, reader.uint32(), options, message.loadDraft);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftRetrieveReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* LoadDraftRetrieveReply.LoadDraft load_draft = 1; */
        if (message.loadDraft)
            LoadDraftRetrieveReply_LoadDraft.internalBinaryWrite(message.loadDraft, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftRetrieveReply
 */
export const LoadDraftRetrieveReply = new LoadDraftRetrieveReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftRetrieveReply_LoadDraft$Type extends MessageType<LoadDraftRetrieveReply_LoadDraft> {
    constructor() {
        super("LoadDraftRetrieveReply.LoadDraft", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "status", kind: "enum", T: () => ["LoadDraftModel.Status", LoadDraftModel_Status, "STATUS_"] },
            { no: 3, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "fields", kind: "message", T: () => LoadDraftFields }
        ]);
    }
    create(value?: PartialMessage<LoadDraftRetrieveReply_LoadDraft>): LoadDraftRetrieveReply_LoadDraft {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        message.status = 0;
        message.updatedAt = "";
        message.deleted = false;
        if (value !== undefined)
            reflectionMergePartial<LoadDraftRetrieveReply_LoadDraft>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftRetrieveReply_LoadDraft): LoadDraftRetrieveReply_LoadDraft {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                case /* LoadDraftModel.Status status */ 2:
                    message.status = reader.int32();
                    break;
                case /* string updated_at */ 3:
                    message.updatedAt = reader.string();
                    break;
                case /* bool deleted */ 4:
                    message.deleted = reader.bool();
                    break;
                case /* LoadDraftFields fields */ 5:
                    message.fields = LoadDraftFields.internalBinaryRead(reader, reader.uint32(), options, message.fields);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftRetrieveReply_LoadDraft, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        /* LoadDraftModel.Status status = 2; */
        if (message.status !== 0)
            writer.tag(2, WireType.Varint).int32(message.status);
        /* string updated_at = 3; */
        if (message.updatedAt !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.updatedAt);
        /* bool deleted = 4; */
        if (message.deleted !== false)
            writer.tag(4, WireType.Varint).bool(message.deleted);
        /* LoadDraftFields fields = 5; */
        if (message.fields)
            LoadDraftFields.internalBinaryWrite(message.fields, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftRetrieveReply.LoadDraft
 */
export const LoadDraftRetrieveReply_LoadDraft = new LoadDraftRetrieveReply_LoadDraft$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftCreateRequest$Type extends MessageType<LoadDraftCreateRequest> {
    constructor() {
        super("LoadDraftCreateRequest", []);
    }
    create(value?: PartialMessage<LoadDraftCreateRequest>): LoadDraftCreateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadDraftCreateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftCreateRequest): LoadDraftCreateRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadDraftCreateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftCreateRequest
 */
export const LoadDraftCreateRequest = new LoadDraftCreateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftCreateReply$Type extends MessageType<LoadDraftCreateReply> {
    constructor() {
        super("LoadDraftCreateReply", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftCreateReply>): LoadDraftCreateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftCreateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftCreateReply): LoadDraftCreateReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftCreateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftCreateReply
 */
export const LoadDraftCreateReply = new LoadDraftCreateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftCreateFromLoadRequest$Type extends MessageType<LoadDraftCreateFromLoadRequest> {
    constructor() {
        super("LoadDraftCreateFromLoadRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftCreateFromLoadRequest>): LoadDraftCreateFromLoadRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftCreateFromLoadRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftCreateFromLoadRequest): LoadDraftCreateFromLoadRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftCreateFromLoadRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftCreateFromLoadRequest
 */
export const LoadDraftCreateFromLoadRequest = new LoadDraftCreateFromLoadRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftCreateFromLoadReply$Type extends MessageType<LoadDraftCreateFromLoadReply> {
    constructor() {
        super("LoadDraftCreateFromLoadReply", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftCreateFromLoadReply>): LoadDraftCreateFromLoadReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftCreateFromLoadReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftCreateFromLoadReply): LoadDraftCreateFromLoadReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftCreateFromLoadReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftCreateFromLoadReply
 */
export const LoadDraftCreateFromLoadReply = new LoadDraftCreateFromLoadReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftUpdateRequest$Type extends MessageType<LoadDraftUpdateRequest> {
    constructor() {
        super("LoadDraftUpdateRequest", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "fields", kind: "message", T: () => LoadDraftFields }
        ]);
    }
    create(value?: PartialMessage<LoadDraftUpdateRequest>): LoadDraftUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftUpdateRequest): LoadDraftUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                case /* LoadDraftFields fields */ 2:
                    message.fields = LoadDraftFields.internalBinaryRead(reader, reader.uint32(), options, message.fields);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        /* LoadDraftFields fields = 2; */
        if (message.fields)
            LoadDraftFields.internalBinaryWrite(message.fields, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftUpdateRequest
 */
export const LoadDraftUpdateRequest = new LoadDraftUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftUpdateReply$Type extends MessageType<LoadDraftUpdateReply> {
    constructor() {
        super("LoadDraftUpdateReply", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "geodata", kind: "message", T: () => LoadDraftUpdateReply_Geodata }
        ]);
    }
    create(value?: PartialMessage<LoadDraftUpdateReply>): LoadDraftUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftUpdateReply): LoadDraftUpdateReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                case /* optional LoadDraftUpdateReply.Geodata geodata */ 2:
                    message.geodata = LoadDraftUpdateReply_Geodata.internalBinaryRead(reader, reader.uint32(), options, message.geodata);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        /* optional LoadDraftUpdateReply.Geodata geodata = 2; */
        if (message.geodata)
            LoadDraftUpdateReply_Geodata.internalBinaryWrite(message.geodata, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftUpdateReply
 */
export const LoadDraftUpdateReply = new LoadDraftUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftUpdateReply_Geodata$Type extends MessageType<LoadDraftUpdateReply_Geodata> {
    constructor() {
        super("LoadDraftUpdateReply.Geodata", [
            { no: 1, name: "distances", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "loaded_miles", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftUpdateReply_Geodata>): LoadDraftUpdateReply_Geodata {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.distances = [];
        message.loadedMiles = 0;
        if (value !== undefined)
            reflectionMergePartial<LoadDraftUpdateReply_Geodata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftUpdateReply_Geodata): LoadDraftUpdateReply_Geodata {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated double distances */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.distances.push(reader.double());
                    else
                        message.distances.push(reader.double());
                    break;
                case /* int64 loaded_miles */ 2:
                    message.loadedMiles = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftUpdateReply_Geodata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated double distances = 1; */
        if (message.distances.length) {
            writer.tag(1, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.distances.length; i++)
                writer.double(message.distances[i]);
            writer.join();
        }
        /* int64 loaded_miles = 2; */
        if (message.loadedMiles !== 0)
            writer.tag(2, WireType.Varint).int64(message.loadedMiles);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftUpdateReply.Geodata
 */
export const LoadDraftUpdateReply_Geodata = new LoadDraftUpdateReply_Geodata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftDeleteRequest$Type extends MessageType<LoadDraftDeleteRequest> {
    constructor() {
        super("LoadDraftDeleteRequest", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftDeleteRequest>): LoadDraftDeleteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftDeleteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftDeleteRequest): LoadDraftDeleteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftDeleteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftDeleteRequest
 */
export const LoadDraftDeleteRequest = new LoadDraftDeleteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftDeleteReply$Type extends MessageType<LoadDraftDeleteReply> {
    constructor() {
        super("LoadDraftDeleteReply", []);
    }
    create(value?: PartialMessage<LoadDraftDeleteReply>): LoadDraftDeleteReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadDraftDeleteReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftDeleteReply): LoadDraftDeleteReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadDraftDeleteReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftDeleteReply
 */
export const LoadDraftDeleteReply = new LoadDraftDeleteReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftCheckDuplicateRequest$Type extends MessageType<LoadDraftCheckDuplicateRequest> {
    constructor() {
        super("LoadDraftCheckDuplicateRequest", [
            { no: 1, name: "entity_type", kind: "enum", T: () => ["LoadDraftCheckDuplicateRequest.EntityType", LoadDraftCheckDuplicateRequest_EntityType] },
            { no: 2, name: "entity_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftCheckDuplicateRequest>): LoadDraftCheckDuplicateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.entityType = 0;
        message.entityId = "";
        message.referenceId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftCheckDuplicateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftCheckDuplicateRequest): LoadDraftCheckDuplicateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* LoadDraftCheckDuplicateRequest.EntityType entity_type */ 1:
                    message.entityType = reader.int32();
                    break;
                case /* string entity_id */ 2:
                    message.entityId = reader.string();
                    break;
                case /* string reference_id */ 3:
                    message.referenceId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftCheckDuplicateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* LoadDraftCheckDuplicateRequest.EntityType entity_type = 1; */
        if (message.entityType !== 0)
            writer.tag(1, WireType.Varint).int32(message.entityType);
        /* string entity_id = 2; */
        if (message.entityId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.entityId);
        /* string reference_id = 3; */
        if (message.referenceId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.referenceId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftCheckDuplicateRequest
 */
export const LoadDraftCheckDuplicateRequest = new LoadDraftCheckDuplicateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftCheckDuplicateReply$Type extends MessageType<LoadDraftCheckDuplicateReply> {
    constructor() {
        super("LoadDraftCheckDuplicateReply", [
            { no: 1, name: "is_duplicate", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "load_friendly_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftCheckDuplicateReply>): LoadDraftCheckDuplicateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.isDuplicate = false;
        message.loadId = "";
        message.loadFriendlyId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftCheckDuplicateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftCheckDuplicateReply): LoadDraftCheckDuplicateReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool is_duplicate */ 1:
                    message.isDuplicate = reader.bool();
                    break;
                case /* string load_id */ 2:
                    message.loadId = reader.string();
                    break;
                case /* string load_friendly_id */ 3:
                    message.loadFriendlyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftCheckDuplicateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool is_duplicate = 1; */
        if (message.isDuplicate !== false)
            writer.tag(1, WireType.Varint).bool(message.isDuplicate);
        /* string load_id = 2; */
        if (message.loadId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.loadId);
        /* string load_friendly_id = 3; */
        if (message.loadFriendlyId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.loadFriendlyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftCheckDuplicateReply
 */
export const LoadDraftCheckDuplicateReply = new LoadDraftCheckDuplicateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftsDeleteAllRequest$Type extends MessageType<LoadDraftsDeleteAllRequest> {
    constructor() {
        super("LoadDraftsDeleteAllRequest", []);
    }
    create(value?: PartialMessage<LoadDraftsDeleteAllRequest>): LoadDraftsDeleteAllRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadDraftsDeleteAllRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftsDeleteAllRequest): LoadDraftsDeleteAllRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadDraftsDeleteAllRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftsDeleteAllRequest
 */
export const LoadDraftsDeleteAllRequest = new LoadDraftsDeleteAllRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftsDeleteAllReply$Type extends MessageType<LoadDraftsDeleteAllReply> {
    constructor() {
        super("LoadDraftsDeleteAllReply", []);
    }
    create(value?: PartialMessage<LoadDraftsDeleteAllReply>): LoadDraftsDeleteAllReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadDraftsDeleteAllReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftsDeleteAllReply): LoadDraftsDeleteAllReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadDraftsDeleteAllReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftsDeleteAllReply
 */
export const LoadDraftsDeleteAllReply = new LoadDraftsDeleteAllReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftCreateLoadRequest$Type extends MessageType<LoadDraftCreateLoadRequest> {
    constructor() {
        super("LoadDraftCreateLoadRequest", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadDraftCreateLoadRequest>): LoadDraftCreateLoadRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadDraftCreateLoadRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftCreateLoadRequest): LoadDraftCreateLoadRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftCreateLoadRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftCreateLoadRequest
 */
export const LoadDraftCreateLoadRequest = new LoadDraftCreateLoadRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadDraftCreateLoadReply$Type extends MessageType<LoadDraftCreateLoadReply> {
    constructor() {
        super("LoadDraftCreateLoadReply", [
            { no: 1, name: "load", kind: "message", T: () => LoadData_Load }
        ]);
    }
    create(value?: PartialMessage<LoadDraftCreateLoadReply>): LoadDraftCreateLoadReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadDraftCreateLoadReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadDraftCreateLoadReply): LoadDraftCreateLoadReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* LoadData.Load load */ 1:
                    message.load = LoadData_Load.internalBinaryRead(reader, reader.uint32(), options, message.load);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadDraftCreateLoadReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* LoadData.Load load = 1; */
        if (message.load)
            LoadData_Load.internalBinaryWrite(message.load, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadDraftCreateLoadReply
 */
export const LoadDraftCreateLoadReply = new LoadDraftCreateLoadReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StartExtractRequest$Type extends MessageType<StartExtractRequest> {
    constructor() {
        super("StartExtractRequest", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "file_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<StartExtractRequest>): StartExtractRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        message.filePath = "";
        message.fileName = "";
        if (value !== undefined)
            reflectionMergePartial<StartExtractRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StartExtractRequest): StartExtractRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                case /* string file_path */ 2:
                    message.filePath = reader.string();
                    break;
                case /* string file_name */ 3:
                    message.fileName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StartExtractRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        /* string file_path = 2; */
        if (message.filePath !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.filePath);
        /* string file_name = 3; */
        if (message.fileName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.fileName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message StartExtractRequest
 */
export const StartExtractRequest = new StartExtractRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StartExtractReply$Type extends MessageType<StartExtractReply> {
    constructor() {
        super("StartExtractReply", []);
    }
    create(value?: PartialMessage<StartExtractReply>): StartExtractReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<StartExtractReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StartExtractReply): StartExtractReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: StartExtractReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message StartExtractReply
 */
export const StartExtractReply = new StartExtractReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CancelExtractRequest$Type extends MessageType<CancelExtractRequest> {
    constructor() {
        super("CancelExtractRequest", [
            { no: 1, name: "load_draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CancelExtractRequest>): CancelExtractRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadDraftId = "";
        if (value !== undefined)
            reflectionMergePartial<CancelExtractRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CancelExtractRequest): CancelExtractRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_draft_id */ 1:
                    message.loadDraftId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CancelExtractRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_draft_id = 1; */
        if (message.loadDraftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadDraftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message CancelExtractRequest
 */
export const CancelExtractRequest = new CancelExtractRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CancelExtractReply$Type extends MessageType<CancelExtractReply> {
    constructor() {
        super("CancelExtractReply", []);
    }
    create(value?: PartialMessage<CancelExtractReply>): CancelExtractReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<CancelExtractReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CancelExtractReply): CancelExtractReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: CancelExtractReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message CancelExtractReply
 */
export const CancelExtractReply = new CancelExtractReply$Type();
/**
 * @generated ServiceType for protobuf service LoadDraftsService
 */
export const LoadDraftsService = new ServiceType("LoadDraftsService", [
    { name: "LoadDraftsGet", options: {}, I: LoadDraftsGetRequest, O: LoadDraftsGetReply },
    { name: "LoadDraftCreate", options: {}, I: LoadDraftCreateRequest, O: LoadDraftCreateReply },
    { name: "LoadDraftCreateFromLoad", options: {}, I: LoadDraftCreateFromLoadRequest, O: LoadDraftCreateFromLoadReply },
    { name: "LoadDraftRetrieve", options: {}, I: LoadDraftRetrieveRequest, O: LoadDraftRetrieveReply },
    { name: "LoadDraftUpdate", options: {}, I: LoadDraftUpdateRequest, O: LoadDraftUpdateReply },
    { name: "LoadDraftDelete", options: {}, I: LoadDraftDeleteRequest, O: LoadDraftDeleteReply },
    { name: "LoadDraftCheckDuplicate", options: {}, I: LoadDraftCheckDuplicateRequest, O: LoadDraftCheckDuplicateReply },
    { name: "LoadDraftsDeleteAll", options: {}, I: LoadDraftsDeleteAllRequest, O: LoadDraftsDeleteAllReply },
    { name: "LoadDraftCreateLoad", options: {}, I: LoadDraftCreateLoadRequest, O: LoadDraftCreateLoadReply },
    { name: "StartExtract", options: {}, I: StartExtractRequest, O: StartExtractReply },
    { name: "CancelExtract", options: {}, I: CancelExtractRequest, O: CancelExtractReply }
]);
