// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/trucks.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TrucksService } from "./trucks";
import type { TruckTrailerRemoveReply } from "./trucks";
import type { TruckTrailerRemoveRequest } from "./trucks";
import type { TruckTrailerAssignReply } from "./trucks";
import type { TruckTrailerAssignRequest } from "./trucks";
import type { TruckUserRemoveReply } from "./trucks";
import type { TruckUserRemoveRequest } from "./trucks";
import type { TruckUserAssignReply } from "./trucks";
import type { TruckUserAssignRequest } from "./trucks";
import type { TruckDriverPrimarySetReply } from "./trucks";
import type { TruckDriverPrimarySetRequest } from "./trucks";
import type { TruckDriverRemoveReply } from "./trucks";
import type { TruckDriverRemoveRequest } from "./trucks";
import type { TruckDriverAssignReply } from "./trucks";
import type { TruckDriverAssignRequest } from "./trucks";
import type { TruckStatsRetrieveReply } from "./trucks";
import type { TruckStatsRetrieveRequest } from "./trucks";
import type { TruckCreateReply } from "./trucks";
import type { TruckCreateRequest } from "./trucks";
import type { TruckRetrieveReply } from "./trucks";
import type { TruckRetrieveRequest } from "./trucks";
import type { TruckGetReply } from "./trucks";
import type { TruckGetRequest } from "./trucks";
import type { TruckUpdateReply } from "./trucks";
import type { TruckUpdateRequest } from "./trucks";
import type { TruckInsuranceEndorsedReply } from "./trucks";
import type { TruckInsuranceEndorsedRequest } from "./trucks";
import type { TruckParkingLocationUpdateReply } from "./trucks";
import type { TruckParkingLocationUpdateRequest } from "./trucks";
import type { TruckStatusUpdateReply } from "./trucks";
import type { TruckStatusUpdateRequest } from "./trucks";
import type { TruckDeleteReply } from "./trucks";
import type { TruckDeleteRequest } from "./trucks";
import type { GetTruckRouteReply } from "./trucks";
import type { GetTruckRouteRequest } from "./trucks";
import type { TrucksManifestsGetReply } from "./trucks";
import type { TrucksManifestsGetRequest } from "./trucks";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetTrucksLoadsReply } from "./trucks";
import type { GetTrucksLoadsRequest } from "./trucks";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service TrucksService
 */
export interface ITrucksServiceClient {
    /**
     * @generated from protobuf rpc: GetTrucksLoads(GetTrucksLoadsRequest) returns (stream GetTrucksLoadsReply);
     */
    getTrucksLoads(input: GetTrucksLoadsRequest, options?: RpcOptions): ServerStreamingCall<GetTrucksLoadsRequest, GetTrucksLoadsReply>;
    /**
     * @generated from protobuf rpc: GetTrucksLoadsUnary(GetTrucksLoadsRequest) returns (GetTrucksLoadsReply);
     */
    getTrucksLoadsUnary(input: GetTrucksLoadsRequest, options?: RpcOptions): UnaryCall<GetTrucksLoadsRequest, GetTrucksLoadsReply>;
    /**
     * @generated from protobuf rpc: TrucksManifestsGet(TrucksManifestsGetRequest) returns (stream TrucksManifestsGetReply);
     */
    trucksManifestsGet(input: TrucksManifestsGetRequest, options?: RpcOptions): ServerStreamingCall<TrucksManifestsGetRequest, TrucksManifestsGetReply>;
    /**
     * @generated from protobuf rpc: TrucksManifestsGetUnary(TrucksManifestsGetRequest) returns (TrucksManifestsGetReply);
     */
    trucksManifestsGetUnary(input: TrucksManifestsGetRequest, options?: RpcOptions): UnaryCall<TrucksManifestsGetRequest, TrucksManifestsGetReply>;
    /**
     * @generated from protobuf rpc: GetTruckRoute(GetTruckRouteRequest) returns (GetTruckRouteReply);
     */
    getTruckRoute(input: GetTruckRouteRequest, options?: RpcOptions): UnaryCall<GetTruckRouteRequest, GetTruckRouteReply>;
    /**
     * @generated from protobuf rpc: Delete(TruckDeleteRequest) returns (TruckDeleteReply);
     */
    delete(input: TruckDeleteRequest, options?: RpcOptions): UnaryCall<TruckDeleteRequest, TruckDeleteReply>;
    /**
     * @generated from protobuf rpc: StatusUpdate(TruckStatusUpdateRequest) returns (TruckStatusUpdateReply);
     */
    statusUpdate(input: TruckStatusUpdateRequest, options?: RpcOptions): UnaryCall<TruckStatusUpdateRequest, TruckStatusUpdateReply>;
    /**
     * @generated from protobuf rpc: TruckParkingLocationUpdate(TruckParkingLocationUpdateRequest) returns (TruckParkingLocationUpdateReply);
     */
    truckParkingLocationUpdate(input: TruckParkingLocationUpdateRequest, options?: RpcOptions): UnaryCall<TruckParkingLocationUpdateRequest, TruckParkingLocationUpdateReply>;
    /**
     * @generated from protobuf rpc: TruckInsuranceEndorsedUpdate(TruckInsuranceEndorsedRequest) returns (TruckInsuranceEndorsedReply);
     */
    truckInsuranceEndorsedUpdate(input: TruckInsuranceEndorsedRequest, options?: RpcOptions): UnaryCall<TruckInsuranceEndorsedRequest, TruckInsuranceEndorsedReply>;
    /**
     * @generated from protobuf rpc: TruckUpdate(TruckUpdateRequest) returns (TruckUpdateReply);
     */
    truckUpdate(input: TruckUpdateRequest, options?: RpcOptions): UnaryCall<TruckUpdateRequest, TruckUpdateReply>;
    /**
     * @generated from protobuf rpc: TruckGet(TruckGetRequest) returns (TruckGetReply);
     */
    truckGet(input: TruckGetRequest, options?: RpcOptions): UnaryCall<TruckGetRequest, TruckGetReply>;
    /**
     * @generated from protobuf rpc: TruckRetrieve(TruckRetrieveRequest) returns (TruckRetrieveReply);
     */
    truckRetrieve(input: TruckRetrieveRequest, options?: RpcOptions): UnaryCall<TruckRetrieveRequest, TruckRetrieveReply>;
    /**
     * @generated from protobuf rpc: TruckCreate(TruckCreateRequest) returns (TruckCreateReply);
     */
    truckCreate(input: TruckCreateRequest, options?: RpcOptions): UnaryCall<TruckCreateRequest, TruckCreateReply>;
    /**
     * @generated from protobuf rpc: TruckStatsRetrieve(TruckStatsRetrieveRequest) returns (TruckStatsRetrieveReply);
     */
    truckStatsRetrieve(input: TruckStatsRetrieveRequest, options?: RpcOptions): UnaryCall<TruckStatsRetrieveRequest, TruckStatsRetrieveReply>;
    /**
     * @generated from protobuf rpc: TruckDriverAssign(TruckDriverAssignRequest) returns (TruckDriverAssignReply);
     */
    truckDriverAssign(input: TruckDriverAssignRequest, options?: RpcOptions): UnaryCall<TruckDriverAssignRequest, TruckDriverAssignReply>;
    /**
     * @generated from protobuf rpc: TruckDriverRemove(TruckDriverRemoveRequest) returns (TruckDriverRemoveReply);
     */
    truckDriverRemove(input: TruckDriverRemoveRequest, options?: RpcOptions): UnaryCall<TruckDriverRemoveRequest, TruckDriverRemoveReply>;
    /**
     * @generated from protobuf rpc: TruckDriverPrimarySet(TruckDriverPrimarySetRequest) returns (TruckDriverPrimarySetReply);
     */
    truckDriverPrimarySet(input: TruckDriverPrimarySetRequest, options?: RpcOptions): UnaryCall<TruckDriverPrimarySetRequest, TruckDriverPrimarySetReply>;
    /**
     * @generated from protobuf rpc: TruckUserAssign(TruckUserAssignRequest) returns (TruckUserAssignReply);
     */
    truckUserAssign(input: TruckUserAssignRequest, options?: RpcOptions): UnaryCall<TruckUserAssignRequest, TruckUserAssignReply>;
    /**
     * @generated from protobuf rpc: TruckUserRemove(TruckUserRemoveRequest) returns (TruckUserRemoveReply);
     */
    truckUserRemove(input: TruckUserRemoveRequest, options?: RpcOptions): UnaryCall<TruckUserRemoveRequest, TruckUserRemoveReply>;
    /**
     * @generated from protobuf rpc: TruckTrailerAssign(TruckTrailerAssignRequest) returns (TruckTrailerAssignReply);
     */
    truckTrailerAssign(input: TruckTrailerAssignRequest, options?: RpcOptions): UnaryCall<TruckTrailerAssignRequest, TruckTrailerAssignReply>;
    /**
     * @generated from protobuf rpc: TruckTrailerRemove(TruckTrailerRemoveRequest) returns (TruckTrailerRemoveReply);
     */
    truckTrailerRemove(input: TruckTrailerRemoveRequest, options?: RpcOptions): UnaryCall<TruckTrailerRemoveRequest, TruckTrailerRemoveReply>;
}
/**
 * @generated from protobuf service TrucksService
 */
export class TrucksServiceClient implements ITrucksServiceClient, ServiceInfo {
    typeName = TrucksService.typeName;
    methods = TrucksService.methods;
    options = TrucksService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetTrucksLoads(GetTrucksLoadsRequest) returns (stream GetTrucksLoadsReply);
     */
    getTrucksLoads(input: GetTrucksLoadsRequest, options?: RpcOptions): ServerStreamingCall<GetTrucksLoadsRequest, GetTrucksLoadsReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTrucksLoadsRequest, GetTrucksLoadsReply>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetTrucksLoadsUnary(GetTrucksLoadsRequest) returns (GetTrucksLoadsReply);
     */
    getTrucksLoadsUnary(input: GetTrucksLoadsRequest, options?: RpcOptions): UnaryCall<GetTrucksLoadsRequest, GetTrucksLoadsReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTrucksLoadsRequest, GetTrucksLoadsReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrucksManifestsGet(TrucksManifestsGetRequest) returns (stream TrucksManifestsGetReply);
     */
    trucksManifestsGet(input: TrucksManifestsGetRequest, options?: RpcOptions): ServerStreamingCall<TrucksManifestsGetRequest, TrucksManifestsGetReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrucksManifestsGetRequest, TrucksManifestsGetReply>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TrucksManifestsGetUnary(TrucksManifestsGetRequest) returns (TrucksManifestsGetReply);
     */
    trucksManifestsGetUnary(input: TrucksManifestsGetRequest, options?: RpcOptions): UnaryCall<TrucksManifestsGetRequest, TrucksManifestsGetReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<TrucksManifestsGetRequest, TrucksManifestsGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetTruckRoute(GetTruckRouteRequest) returns (GetTruckRouteReply);
     */
    getTruckRoute(input: GetTruckRouteRequest, options?: RpcOptions): UnaryCall<GetTruckRouteRequest, GetTruckRouteReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTruckRouteRequest, GetTruckRouteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Delete(TruckDeleteRequest) returns (TruckDeleteReply);
     */
    delete(input: TruckDeleteRequest, options?: RpcOptions): UnaryCall<TruckDeleteRequest, TruckDeleteReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckDeleteRequest, TruckDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: StatusUpdate(TruckStatusUpdateRequest) returns (TruckStatusUpdateReply);
     */
    statusUpdate(input: TruckStatusUpdateRequest, options?: RpcOptions): UnaryCall<TruckStatusUpdateRequest, TruckStatusUpdateReply> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckStatusUpdateRequest, TruckStatusUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckParkingLocationUpdate(TruckParkingLocationUpdateRequest) returns (TruckParkingLocationUpdateReply);
     */
    truckParkingLocationUpdate(input: TruckParkingLocationUpdateRequest, options?: RpcOptions): UnaryCall<TruckParkingLocationUpdateRequest, TruckParkingLocationUpdateReply> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckParkingLocationUpdateRequest, TruckParkingLocationUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckInsuranceEndorsedUpdate(TruckInsuranceEndorsedRequest) returns (TruckInsuranceEndorsedReply);
     */
    truckInsuranceEndorsedUpdate(input: TruckInsuranceEndorsedRequest, options?: RpcOptions): UnaryCall<TruckInsuranceEndorsedRequest, TruckInsuranceEndorsedReply> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckInsuranceEndorsedRequest, TruckInsuranceEndorsedReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckUpdate(TruckUpdateRequest) returns (TruckUpdateReply);
     */
    truckUpdate(input: TruckUpdateRequest, options?: RpcOptions): UnaryCall<TruckUpdateRequest, TruckUpdateReply> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckUpdateRequest, TruckUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckGet(TruckGetRequest) returns (TruckGetReply);
     */
    truckGet(input: TruckGetRequest, options?: RpcOptions): UnaryCall<TruckGetRequest, TruckGetReply> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckGetRequest, TruckGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckRetrieve(TruckRetrieveRequest) returns (TruckRetrieveReply);
     */
    truckRetrieve(input: TruckRetrieveRequest, options?: RpcOptions): UnaryCall<TruckRetrieveRequest, TruckRetrieveReply> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckRetrieveRequest, TruckRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckCreate(TruckCreateRequest) returns (TruckCreateReply);
     */
    truckCreate(input: TruckCreateRequest, options?: RpcOptions): UnaryCall<TruckCreateRequest, TruckCreateReply> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckCreateRequest, TruckCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckStatsRetrieve(TruckStatsRetrieveRequest) returns (TruckStatsRetrieveReply);
     */
    truckStatsRetrieve(input: TruckStatsRetrieveRequest, options?: RpcOptions): UnaryCall<TruckStatsRetrieveRequest, TruckStatsRetrieveReply> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckStatsRetrieveRequest, TruckStatsRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckDriverAssign(TruckDriverAssignRequest) returns (TruckDriverAssignReply);
     */
    truckDriverAssign(input: TruckDriverAssignRequest, options?: RpcOptions): UnaryCall<TruckDriverAssignRequest, TruckDriverAssignReply> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckDriverAssignRequest, TruckDriverAssignReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckDriverRemove(TruckDriverRemoveRequest) returns (TruckDriverRemoveReply);
     */
    truckDriverRemove(input: TruckDriverRemoveRequest, options?: RpcOptions): UnaryCall<TruckDriverRemoveRequest, TruckDriverRemoveReply> {
        const method = this.methods[15], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckDriverRemoveRequest, TruckDriverRemoveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckDriverPrimarySet(TruckDriverPrimarySetRequest) returns (TruckDriverPrimarySetReply);
     */
    truckDriverPrimarySet(input: TruckDriverPrimarySetRequest, options?: RpcOptions): UnaryCall<TruckDriverPrimarySetRequest, TruckDriverPrimarySetReply> {
        const method = this.methods[16], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckDriverPrimarySetRequest, TruckDriverPrimarySetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckUserAssign(TruckUserAssignRequest) returns (TruckUserAssignReply);
     */
    truckUserAssign(input: TruckUserAssignRequest, options?: RpcOptions): UnaryCall<TruckUserAssignRequest, TruckUserAssignReply> {
        const method = this.methods[17], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckUserAssignRequest, TruckUserAssignReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckUserRemove(TruckUserRemoveRequest) returns (TruckUserRemoveReply);
     */
    truckUserRemove(input: TruckUserRemoveRequest, options?: RpcOptions): UnaryCall<TruckUserRemoveRequest, TruckUserRemoveReply> {
        const method = this.methods[18], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckUserRemoveRequest, TruckUserRemoveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckTrailerAssign(TruckTrailerAssignRequest) returns (TruckTrailerAssignReply);
     */
    truckTrailerAssign(input: TruckTrailerAssignRequest, options?: RpcOptions): UnaryCall<TruckTrailerAssignRequest, TruckTrailerAssignReply> {
        const method = this.methods[19], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckTrailerAssignRequest, TruckTrailerAssignReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckTrailerRemove(TruckTrailerRemoveRequest) returns (TruckTrailerRemoveReply);
     */
    truckTrailerRemove(input: TruckTrailerRemoveRequest, options?: RpcOptions): UnaryCall<TruckTrailerRemoveRequest, TruckTrailerRemoveReply> {
        const method = this.methods[20], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckTrailerRemoveRequest, TruckTrailerRemoveReply>("unary", this._transport, method, opt, input);
    }
}
