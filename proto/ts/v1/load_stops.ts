// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/load_stops.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CommodityModel } from "./models/model_commodity";
import { LoadModel_Stop_Status } from "./models/model_load";
import { LoadModel_Stop_Type } from "./models/model_load";
/**
 * Add Load Stop
 *
 * @generated from protobuf message LoadStopAddRequest
 */
export interface LoadStopAddRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: int64 sequence = 2;
     */
    sequence: number;
    /**
     * @generated from protobuf field: string reference_id = 3;
     */
    referenceId: string;
    /**
     * @generated from protobuf field: string note = 4;
     */
    note: string;
    /**
     * @generated from protobuf field: string appointment_start_at = 5;
     */
    appointmentStartAt: string;
    /**
     * @generated from protobuf field: optional string appointment_end_at = 6;
     */
    appointmentEndAt?: string;
    /**
     * @generated from protobuf field: LoadModel.Stop.Type type = 7;
     */
    type: LoadModel_Stop_Type;
    /**
     * @generated from protobuf field: LoadStopAddRequest.Location location = 8;
     */
    location?: LoadStopAddRequest_Location;
    /**
     * @generated from protobuf field: string manifest_id = 9;
     */
    manifestId: string;
    /**
     * @generated from protobuf field: repeated string commodity_ids = 10;
     */
    commodityIds: string[];
}
/**
 * @generated from protobuf message LoadStopAddRequest.Location
 */
export interface LoadStopAddRequest_Location {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: double lat = 2;
     */
    lat: number;
    /**
     * @generated from protobuf field: double lon = 3;
     */
    lon: number;
    /**
     * @generated from protobuf field: string line_1 = 4;
     */
    line1: string;
    /**
     * @generated from protobuf field: optional string line_2 = 5;
     */
    line2?: string;
    /**
     * @generated from protobuf field: string city = 6;
     */
    city: string;
    /**
     * @generated from protobuf field: string state = 7;
     */
    state: string;
    /**
     * @generated from protobuf field: string postal_code = 8;
     */
    postalCode: string;
    /**
     * @generated from protobuf field: string address = 9;
     */
    address: string;
}
/**
 * @generated from protobuf message LoadStopAddReply
 */
export interface LoadStopAddReply {
    /**
     * @generated from protobuf field: string stop_id = 1;
     */
    stopId: string;
}
/**
 * Delete Load Stop
 *
 * @generated from protobuf message LoadStopDeleteRequest
 */
export interface LoadStopDeleteRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: string stop_id = 2;
     */
    stopId: string;
}
/**
 * @generated from protobuf message LoadStopDeleteReply
 */
export interface LoadStopDeleteReply {
}
/**
 * Update Load Stop
 *
 * @generated from protobuf message LoadStopUpdateRequest
 */
export interface LoadStopUpdateRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: string stop_id = 2;
     */
    stopId: string;
    /**
     * @generated from protobuf field: int64 sequence = 3;
     */
    sequence: number;
    /**
     * @generated from protobuf field: string reference_id = 4;
     */
    referenceId: string;
    /**
     * @generated from protobuf field: string note = 5;
     */
    note: string;
    /**
     * @generated from protobuf field: string appointment_start_at = 6;
     */
    appointmentStartAt: string;
    /**
     * @generated from protobuf field: optional string appointment_end_at = 7;
     */
    appointmentEndAt?: string;
    /**
     * @generated from protobuf field: LoadModel.Stop.Type type = 8;
     */
    type: LoadModel_Stop_Type;
    /**
     * @generated from protobuf field: optional string checked_in_at = 9;
     */
    checkedInAt?: string;
    /**
     * @generated from protobuf field: optional string checked_out_at = 10;
     */
    checkedOutAt?: string;
    /**
     * @generated from protobuf field: optional string arrived_at = 11;
     */
    arrivedAt?: string;
    /**
     * @generated from protobuf field: optional string departed_at = 12;
     */
    departedAt?: string;
    /**
     * @generated from protobuf field: LoadStopUpdateRequest.Location location = 13;
     */
    location?: LoadStopUpdateRequest_Location;
}
/**
 * @generated from protobuf message LoadStopUpdateRequest.Location
 */
export interface LoadStopUpdateRequest_Location {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: double lat = 2;
     */
    lat: number;
    /**
     * @generated from protobuf field: double lon = 3;
     */
    lon: number;
    /**
     * @generated from protobuf field: string line_1 = 4;
     */
    line1: string;
    /**
     * @generated from protobuf field: optional string line_2 = 5;
     */
    line2?: string;
    /**
     * @generated from protobuf field: string city = 6;
     */
    city: string;
    /**
     * @generated from protobuf field: string state = 7;
     */
    state: string;
    /**
     * @generated from protobuf field: string postal_code = 8;
     */
    postalCode: string;
    /**
     * @generated from protobuf field: string address = 9;
     */
    address: string;
}
/**
 * @generated from protobuf message LoadStopUpdateReply
 */
export interface LoadStopUpdateReply {
}
/**
 * Update Load Stop Status
 *
 * @generated from protobuf message LoadStopUpdateStatusRequest
 */
export interface LoadStopUpdateStatusRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: string stop_id = 2;
     */
    stopId: string;
    /**
     * @generated from protobuf field: LoadModel.Stop.Status status = 3;
     */
    status: LoadModel_Stop_Status;
}
/**
 * @generated from protobuf message LoadStopUpdateStatusReply
 */
export interface LoadStopUpdateStatusReply {
}
/**
 * @generated from protobuf message LoadStopCommodityAssignRequest
 */
export interface LoadStopCommodityAssignRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: string stop_id = 2;
     */
    stopId: string;
    /**
     * @generated from protobuf field: string commodity_id = 3;
     */
    commodityId: string;
}
/**
 * @generated from protobuf message LoadStopCommodityAssignReply
 */
export interface LoadStopCommodityAssignReply {
}
/**
 * @generated from protobuf message LoadStopCommodityUnassignRequest
 */
export interface LoadStopCommodityUnassignRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: string stop_id = 2;
     */
    stopId: string;
    /**
     * @generated from protobuf field: string commodity_id = 3;
     */
    commodityId: string;
}
/**
 * @generated from protobuf message LoadStopCommodityUnassignReply
 */
export interface LoadStopCommodityUnassignReply {
}
/**
 * @generated from protobuf message LoadStopCommodityGetRequest
 */
export interface LoadStopCommodityGetRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: string stop_id = 2;
     */
    stopId: string;
}
/**
 * @generated from protobuf message LoadStopCommodityGetReply
 */
export interface LoadStopCommodityGetReply {
    /**
     * @generated from protobuf field: repeated CommodityModel assigned_commodities = 1;
     */
    assignedCommodities: CommodityModel[];
    /**
     * @generated from protobuf field: repeated CommodityModel assignable_commodities = 2;
     */
    assignableCommodities: CommodityModel[];
}
/**
 * @generated from protobuf message LoadStopAddCommodityGetForNewRequest
 */
export interface LoadStopAddCommodityGetForNewRequest {
    /**
     * @generated from protobuf field: string load_id = 1;
     */
    loadId: string;
    /**
     * @generated from protobuf field: LoadModel.Stop.Type stop_type = 2;
     */
    stopType: LoadModel_Stop_Type;
}
/**
 * @generated from protobuf message LoadStopAddCommodityGetForNewReply
 */
export interface LoadStopAddCommodityGetForNewReply {
    /**
     * @generated from protobuf field: repeated CommodityModel assignable_commodities = 1;
     */
    assignableCommodities: CommodityModel[];
}
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopAddRequest$Type extends MessageType<LoadStopAddRequest> {
    constructor() {
        super("LoadStopAddRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "sequence", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "appointment_start_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "appointment_end_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "type", kind: "enum", T: () => ["LoadModel.Stop.Type", LoadModel_Stop_Type] },
            { no: 8, name: "location", kind: "message", T: () => LoadStopAddRequest_Location },
            { no: 9, name: "manifest_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "commodity_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadStopAddRequest>): LoadStopAddRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.sequence = 0;
        message.referenceId = "";
        message.note = "";
        message.appointmentStartAt = "";
        message.type = 0;
        message.manifestId = "";
        message.commodityIds = [];
        if (value !== undefined)
            reflectionMergePartial<LoadStopAddRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopAddRequest): LoadStopAddRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* int64 sequence */ 2:
                    message.sequence = reader.int64().toNumber();
                    break;
                case /* string reference_id */ 3:
                    message.referenceId = reader.string();
                    break;
                case /* string note */ 4:
                    message.note = reader.string();
                    break;
                case /* string appointment_start_at */ 5:
                    message.appointmentStartAt = reader.string();
                    break;
                case /* optional string appointment_end_at */ 6:
                    message.appointmentEndAt = reader.string();
                    break;
                case /* LoadModel.Stop.Type type */ 7:
                    message.type = reader.int32();
                    break;
                case /* LoadStopAddRequest.Location location */ 8:
                    message.location = LoadStopAddRequest_Location.internalBinaryRead(reader, reader.uint32(), options, message.location);
                    break;
                case /* string manifest_id */ 9:
                    message.manifestId = reader.string();
                    break;
                case /* repeated string commodity_ids */ 10:
                    message.commodityIds.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopAddRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* int64 sequence = 2; */
        if (message.sequence !== 0)
            writer.tag(2, WireType.Varint).int64(message.sequence);
        /* string reference_id = 3; */
        if (message.referenceId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.referenceId);
        /* string note = 4; */
        if (message.note !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.note);
        /* string appointment_start_at = 5; */
        if (message.appointmentStartAt !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.appointmentStartAt);
        /* optional string appointment_end_at = 6; */
        if (message.appointmentEndAt !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.appointmentEndAt);
        /* LoadModel.Stop.Type type = 7; */
        if (message.type !== 0)
            writer.tag(7, WireType.Varint).int32(message.type);
        /* LoadStopAddRequest.Location location = 8; */
        if (message.location)
            LoadStopAddRequest_Location.internalBinaryWrite(message.location, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* string manifest_id = 9; */
        if (message.manifestId !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.manifestId);
        /* repeated string commodity_ids = 10; */
        for (let i = 0; i < message.commodityIds.length; i++)
            writer.tag(10, WireType.LengthDelimited).string(message.commodityIds[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopAddRequest
 */
export const LoadStopAddRequest = new LoadStopAddRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopAddRequest_Location$Type extends MessageType<LoadStopAddRequest_Location> {
    constructor() {
        super("LoadStopAddRequest.Location", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "lat", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "lon", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "line_2", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadStopAddRequest_Location>): LoadStopAddRequest_Location {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.lat = 0;
        message.lon = 0;
        message.line1 = "";
        message.city = "";
        message.state = "";
        message.postalCode = "";
        message.address = "";
        if (value !== undefined)
            reflectionMergePartial<LoadStopAddRequest_Location>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopAddRequest_Location): LoadStopAddRequest_Location {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* double lat */ 2:
                    message.lat = reader.double();
                    break;
                case /* double lon */ 3:
                    message.lon = reader.double();
                    break;
                case /* string line_1 */ 4:
                    message.line1 = reader.string();
                    break;
                case /* optional string line_2 */ 5:
                    message.line2 = reader.string();
                    break;
                case /* string city */ 6:
                    message.city = reader.string();
                    break;
                case /* string state */ 7:
                    message.state = reader.string();
                    break;
                case /* string postal_code */ 8:
                    message.postalCode = reader.string();
                    break;
                case /* string address */ 9:
                    message.address = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopAddRequest_Location, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* double lat = 2; */
        if (message.lat !== 0)
            writer.tag(2, WireType.Bit64).double(message.lat);
        /* double lon = 3; */
        if (message.lon !== 0)
            writer.tag(3, WireType.Bit64).double(message.lon);
        /* string line_1 = 4; */
        if (message.line1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.line1);
        /* optional string line_2 = 5; */
        if (message.line2 !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.line2);
        /* string city = 6; */
        if (message.city !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.city);
        /* string state = 7; */
        if (message.state !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.state);
        /* string postal_code = 8; */
        if (message.postalCode !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.postalCode);
        /* string address = 9; */
        if (message.address !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.address);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopAddRequest.Location
 */
export const LoadStopAddRequest_Location = new LoadStopAddRequest_Location$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopAddReply$Type extends MessageType<LoadStopAddReply> {
    constructor() {
        super("LoadStopAddReply", [
            { no: 1, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadStopAddReply>): LoadStopAddReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.stopId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadStopAddReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopAddReply): LoadStopAddReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string stop_id */ 1:
                    message.stopId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopAddReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string stop_id = 1; */
        if (message.stopId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.stopId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopAddReply
 */
export const LoadStopAddReply = new LoadStopAddReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopDeleteRequest$Type extends MessageType<LoadStopDeleteRequest> {
    constructor() {
        super("LoadStopDeleteRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadStopDeleteRequest>): LoadStopDeleteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.stopId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadStopDeleteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopDeleteRequest): LoadStopDeleteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* string stop_id */ 2:
                    message.stopId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopDeleteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* string stop_id = 2; */
        if (message.stopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.stopId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopDeleteRequest
 */
export const LoadStopDeleteRequest = new LoadStopDeleteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopDeleteReply$Type extends MessageType<LoadStopDeleteReply> {
    constructor() {
        super("LoadStopDeleteReply", []);
    }
    create(value?: PartialMessage<LoadStopDeleteReply>): LoadStopDeleteReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadStopDeleteReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopDeleteReply): LoadStopDeleteReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadStopDeleteReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopDeleteReply
 */
export const LoadStopDeleteReply = new LoadStopDeleteReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopUpdateRequest$Type extends MessageType<LoadStopUpdateRequest> {
    constructor() {
        super("LoadStopUpdateRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sequence", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "appointment_start_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "appointment_end_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "type", kind: "enum", T: () => ["LoadModel.Stop.Type", LoadModel_Stop_Type] },
            { no: 9, name: "checked_in_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "checked_out_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "arrived_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "departed_at", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "location", kind: "message", T: () => LoadStopUpdateRequest_Location }
        ]);
    }
    create(value?: PartialMessage<LoadStopUpdateRequest>): LoadStopUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.stopId = "";
        message.sequence = 0;
        message.referenceId = "";
        message.note = "";
        message.appointmentStartAt = "";
        message.type = 0;
        if (value !== undefined)
            reflectionMergePartial<LoadStopUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopUpdateRequest): LoadStopUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* string stop_id */ 2:
                    message.stopId = reader.string();
                    break;
                case /* int64 sequence */ 3:
                    message.sequence = reader.int64().toNumber();
                    break;
                case /* string reference_id */ 4:
                    message.referenceId = reader.string();
                    break;
                case /* string note */ 5:
                    message.note = reader.string();
                    break;
                case /* string appointment_start_at */ 6:
                    message.appointmentStartAt = reader.string();
                    break;
                case /* optional string appointment_end_at */ 7:
                    message.appointmentEndAt = reader.string();
                    break;
                case /* LoadModel.Stop.Type type */ 8:
                    message.type = reader.int32();
                    break;
                case /* optional string checked_in_at */ 9:
                    message.checkedInAt = reader.string();
                    break;
                case /* optional string checked_out_at */ 10:
                    message.checkedOutAt = reader.string();
                    break;
                case /* optional string arrived_at */ 11:
                    message.arrivedAt = reader.string();
                    break;
                case /* optional string departed_at */ 12:
                    message.departedAt = reader.string();
                    break;
                case /* LoadStopUpdateRequest.Location location */ 13:
                    message.location = LoadStopUpdateRequest_Location.internalBinaryRead(reader, reader.uint32(), options, message.location);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* string stop_id = 2; */
        if (message.stopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.stopId);
        /* int64 sequence = 3; */
        if (message.sequence !== 0)
            writer.tag(3, WireType.Varint).int64(message.sequence);
        /* string reference_id = 4; */
        if (message.referenceId !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.referenceId);
        /* string note = 5; */
        if (message.note !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.note);
        /* string appointment_start_at = 6; */
        if (message.appointmentStartAt !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.appointmentStartAt);
        /* optional string appointment_end_at = 7; */
        if (message.appointmentEndAt !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.appointmentEndAt);
        /* LoadModel.Stop.Type type = 8; */
        if (message.type !== 0)
            writer.tag(8, WireType.Varint).int32(message.type);
        /* optional string checked_in_at = 9; */
        if (message.checkedInAt !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.checkedInAt);
        /* optional string checked_out_at = 10; */
        if (message.checkedOutAt !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.checkedOutAt);
        /* optional string arrived_at = 11; */
        if (message.arrivedAt !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.arrivedAt);
        /* optional string departed_at = 12; */
        if (message.departedAt !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.departedAt);
        /* LoadStopUpdateRequest.Location location = 13; */
        if (message.location)
            LoadStopUpdateRequest_Location.internalBinaryWrite(message.location, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopUpdateRequest
 */
export const LoadStopUpdateRequest = new LoadStopUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopUpdateRequest_Location$Type extends MessageType<LoadStopUpdateRequest_Location> {
    constructor() {
        super("LoadStopUpdateRequest.Location", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "lat", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "lon", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "line_2", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadStopUpdateRequest_Location>): LoadStopUpdateRequest_Location {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.lat = 0;
        message.lon = 0;
        message.line1 = "";
        message.city = "";
        message.state = "";
        message.postalCode = "";
        message.address = "";
        if (value !== undefined)
            reflectionMergePartial<LoadStopUpdateRequest_Location>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopUpdateRequest_Location): LoadStopUpdateRequest_Location {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* double lat */ 2:
                    message.lat = reader.double();
                    break;
                case /* double lon */ 3:
                    message.lon = reader.double();
                    break;
                case /* string line_1 */ 4:
                    message.line1 = reader.string();
                    break;
                case /* optional string line_2 */ 5:
                    message.line2 = reader.string();
                    break;
                case /* string city */ 6:
                    message.city = reader.string();
                    break;
                case /* string state */ 7:
                    message.state = reader.string();
                    break;
                case /* string postal_code */ 8:
                    message.postalCode = reader.string();
                    break;
                case /* string address */ 9:
                    message.address = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopUpdateRequest_Location, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* double lat = 2; */
        if (message.lat !== 0)
            writer.tag(2, WireType.Bit64).double(message.lat);
        /* double lon = 3; */
        if (message.lon !== 0)
            writer.tag(3, WireType.Bit64).double(message.lon);
        /* string line_1 = 4; */
        if (message.line1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.line1);
        /* optional string line_2 = 5; */
        if (message.line2 !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.line2);
        /* string city = 6; */
        if (message.city !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.city);
        /* string state = 7; */
        if (message.state !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.state);
        /* string postal_code = 8; */
        if (message.postalCode !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.postalCode);
        /* string address = 9; */
        if (message.address !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.address);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopUpdateRequest.Location
 */
export const LoadStopUpdateRequest_Location = new LoadStopUpdateRequest_Location$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopUpdateReply$Type extends MessageType<LoadStopUpdateReply> {
    constructor() {
        super("LoadStopUpdateReply", []);
    }
    create(value?: PartialMessage<LoadStopUpdateReply>): LoadStopUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadStopUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopUpdateReply): LoadStopUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadStopUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopUpdateReply
 */
export const LoadStopUpdateReply = new LoadStopUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopUpdateStatusRequest$Type extends MessageType<LoadStopUpdateStatusRequest> {
    constructor() {
        super("LoadStopUpdateStatusRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "status", kind: "enum", T: () => ["LoadModel.Stop.Status", LoadModel_Stop_Status] }
        ]);
    }
    create(value?: PartialMessage<LoadStopUpdateStatusRequest>): LoadStopUpdateStatusRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.stopId = "";
        message.status = 0;
        if (value !== undefined)
            reflectionMergePartial<LoadStopUpdateStatusRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopUpdateStatusRequest): LoadStopUpdateStatusRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* string stop_id */ 2:
                    message.stopId = reader.string();
                    break;
                case /* LoadModel.Stop.Status status */ 3:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopUpdateStatusRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* string stop_id = 2; */
        if (message.stopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.stopId);
        /* LoadModel.Stop.Status status = 3; */
        if (message.status !== 0)
            writer.tag(3, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopUpdateStatusRequest
 */
export const LoadStopUpdateStatusRequest = new LoadStopUpdateStatusRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopUpdateStatusReply$Type extends MessageType<LoadStopUpdateStatusReply> {
    constructor() {
        super("LoadStopUpdateStatusReply", []);
    }
    create(value?: PartialMessage<LoadStopUpdateStatusReply>): LoadStopUpdateStatusReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadStopUpdateStatusReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopUpdateStatusReply): LoadStopUpdateStatusReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadStopUpdateStatusReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopUpdateStatusReply
 */
export const LoadStopUpdateStatusReply = new LoadStopUpdateStatusReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopCommodityAssignRequest$Type extends MessageType<LoadStopCommodityAssignRequest> {
    constructor() {
        super("LoadStopCommodityAssignRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "commodity_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadStopCommodityAssignRequest>): LoadStopCommodityAssignRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.stopId = "";
        message.commodityId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadStopCommodityAssignRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopCommodityAssignRequest): LoadStopCommodityAssignRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* string stop_id */ 2:
                    message.stopId = reader.string();
                    break;
                case /* string commodity_id */ 3:
                    message.commodityId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopCommodityAssignRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* string stop_id = 2; */
        if (message.stopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.stopId);
        /* string commodity_id = 3; */
        if (message.commodityId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.commodityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopCommodityAssignRequest
 */
export const LoadStopCommodityAssignRequest = new LoadStopCommodityAssignRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopCommodityAssignReply$Type extends MessageType<LoadStopCommodityAssignReply> {
    constructor() {
        super("LoadStopCommodityAssignReply", []);
    }
    create(value?: PartialMessage<LoadStopCommodityAssignReply>): LoadStopCommodityAssignReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadStopCommodityAssignReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopCommodityAssignReply): LoadStopCommodityAssignReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadStopCommodityAssignReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopCommodityAssignReply
 */
export const LoadStopCommodityAssignReply = new LoadStopCommodityAssignReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopCommodityUnassignRequest$Type extends MessageType<LoadStopCommodityUnassignRequest> {
    constructor() {
        super("LoadStopCommodityUnassignRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "commodity_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadStopCommodityUnassignRequest>): LoadStopCommodityUnassignRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.stopId = "";
        message.commodityId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadStopCommodityUnassignRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopCommodityUnassignRequest): LoadStopCommodityUnassignRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* string stop_id */ 2:
                    message.stopId = reader.string();
                    break;
                case /* string commodity_id */ 3:
                    message.commodityId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopCommodityUnassignRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* string stop_id = 2; */
        if (message.stopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.stopId);
        /* string commodity_id = 3; */
        if (message.commodityId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.commodityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopCommodityUnassignRequest
 */
export const LoadStopCommodityUnassignRequest = new LoadStopCommodityUnassignRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopCommodityUnassignReply$Type extends MessageType<LoadStopCommodityUnassignReply> {
    constructor() {
        super("LoadStopCommodityUnassignReply", []);
    }
    create(value?: PartialMessage<LoadStopCommodityUnassignReply>): LoadStopCommodityUnassignReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadStopCommodityUnassignReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopCommodityUnassignReply): LoadStopCommodityUnassignReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadStopCommodityUnassignReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopCommodityUnassignReply
 */
export const LoadStopCommodityUnassignReply = new LoadStopCommodityUnassignReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopCommodityGetRequest$Type extends MessageType<LoadStopCommodityGetRequest> {
    constructor() {
        super("LoadStopCommodityGetRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadStopCommodityGetRequest>): LoadStopCommodityGetRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.stopId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadStopCommodityGetRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopCommodityGetRequest): LoadStopCommodityGetRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* string stop_id */ 2:
                    message.stopId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopCommodityGetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* string stop_id = 2; */
        if (message.stopId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.stopId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopCommodityGetRequest
 */
export const LoadStopCommodityGetRequest = new LoadStopCommodityGetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopCommodityGetReply$Type extends MessageType<LoadStopCommodityGetReply> {
    constructor() {
        super("LoadStopCommodityGetReply", [
            { no: 1, name: "assigned_commodities", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CommodityModel },
            { no: 2, name: "assignable_commodities", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CommodityModel }
        ]);
    }
    create(value?: PartialMessage<LoadStopCommodityGetReply>): LoadStopCommodityGetReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.assignedCommodities = [];
        message.assignableCommodities = [];
        if (value !== undefined)
            reflectionMergePartial<LoadStopCommodityGetReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopCommodityGetReply): LoadStopCommodityGetReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated CommodityModel assigned_commodities */ 1:
                    message.assignedCommodities.push(CommodityModel.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated CommodityModel assignable_commodities */ 2:
                    message.assignableCommodities.push(CommodityModel.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopCommodityGetReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated CommodityModel assigned_commodities = 1; */
        for (let i = 0; i < message.assignedCommodities.length; i++)
            CommodityModel.internalBinaryWrite(message.assignedCommodities[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated CommodityModel assignable_commodities = 2; */
        for (let i = 0; i < message.assignableCommodities.length; i++)
            CommodityModel.internalBinaryWrite(message.assignableCommodities[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopCommodityGetReply
 */
export const LoadStopCommodityGetReply = new LoadStopCommodityGetReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopAddCommodityGetForNewRequest$Type extends MessageType<LoadStopAddCommodityGetForNewRequest> {
    constructor() {
        super("LoadStopAddCommodityGetForNewRequest", [
            { no: 1, name: "load_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stop_type", kind: "enum", T: () => ["LoadModel.Stop.Type", LoadModel_Stop_Type] }
        ]);
    }
    create(value?: PartialMessage<LoadStopAddCommodityGetForNewRequest>): LoadStopAddCommodityGetForNewRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.loadId = "";
        message.stopType = 0;
        if (value !== undefined)
            reflectionMergePartial<LoadStopAddCommodityGetForNewRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopAddCommodityGetForNewRequest): LoadStopAddCommodityGetForNewRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string load_id */ 1:
                    message.loadId = reader.string();
                    break;
                case /* LoadModel.Stop.Type stop_type */ 2:
                    message.stopType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopAddCommodityGetForNewRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string load_id = 1; */
        if (message.loadId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.loadId);
        /* LoadModel.Stop.Type stop_type = 2; */
        if (message.stopType !== 0)
            writer.tag(2, WireType.Varint).int32(message.stopType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopAddCommodityGetForNewRequest
 */
export const LoadStopAddCommodityGetForNewRequest = new LoadStopAddCommodityGetForNewRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadStopAddCommodityGetForNewReply$Type extends MessageType<LoadStopAddCommodityGetForNewReply> {
    constructor() {
        super("LoadStopAddCommodityGetForNewReply", [
            { no: 1, name: "assignable_commodities", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CommodityModel }
        ]);
    }
    create(value?: PartialMessage<LoadStopAddCommodityGetForNewReply>): LoadStopAddCommodityGetForNewReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.assignableCommodities = [];
        if (value !== undefined)
            reflectionMergePartial<LoadStopAddCommodityGetForNewReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadStopAddCommodityGetForNewReply): LoadStopAddCommodityGetForNewReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated CommodityModel assignable_commodities */ 1:
                    message.assignableCommodities.push(CommodityModel.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadStopAddCommodityGetForNewReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated CommodityModel assignable_commodities = 1; */
        for (let i = 0; i < message.assignableCommodities.length; i++)
            CommodityModel.internalBinaryWrite(message.assignableCommodities[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadStopAddCommodityGetForNewReply
 */
export const LoadStopAddCommodityGetForNewReply = new LoadStopAddCommodityGetForNewReply$Type();
/**
 * @generated ServiceType for protobuf service LoadsStopsService
 */
export const LoadsStopsService = new ServiceType("LoadsStopsService", [
    { name: "LoadStopAdd", options: {}, I: LoadStopAddRequest, O: LoadStopAddReply },
    { name: "LoadStopDelete", options: {}, I: LoadStopDeleteRequest, O: LoadStopDeleteReply },
    { name: "LoadStopUpdate", options: {}, I: LoadStopUpdateRequest, O: LoadStopUpdateReply },
    { name: "LoadStopUpdateStatus", options: {}, I: LoadStopUpdateStatusRequest, O: LoadStopUpdateStatusReply },
    { name: "LoadStopCommodityAssign", options: {}, I: LoadStopCommodityAssignRequest, O: LoadStopCommodityAssignReply },
    { name: "LoadStopCommodityUnassign", options: {}, I: LoadStopCommodityUnassignRequest, O: LoadStopCommodityUnassignReply },
    { name: "LoadStopCommodityGet", options: {}, I: LoadStopCommodityGetRequest, O: LoadStopCommodityGetReply },
    { name: "LoadStopCommodityGetForNew", options: {}, I: LoadStopAddCommodityGetForNewRequest, O: LoadStopAddCommodityGetForNewReply }
]);
