// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/load_invoice_item_categories.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message LoadInvoiceItemCategoryAddRequest
 */
export interface LoadInvoiceItemCategoryAddRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: bool required = 2;
     */
    required: boolean;
    /**
     * @generated from protobuf field: bool includeInGrossAmount = 3;
     */
    includeInGrossAmount: boolean;
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryAddReply
 */
export interface LoadInvoiceItemCategoryAddReply {
    /**
     * @generated from protobuf field: string invoice_item_category_id = 1;
     */
    invoiceItemCategoryId: string;
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryUpdateRequest
 */
export interface LoadInvoiceItemCategoryUpdateRequest {
    /**
     * @generated from protobuf field: string invoice_item_category_id = 1;
     */
    invoiceItemCategoryId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: bool required = 3;
     */
    required: boolean;
    /**
     * @generated from protobuf field: bool includeInGrossAmount = 4;
     */
    includeInGrossAmount: boolean;
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryUpdateReply
 */
export interface LoadInvoiceItemCategoryUpdateReply {
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryDeleteRequest
 */
export interface LoadInvoiceItemCategoryDeleteRequest {
    /**
     * @generated from protobuf field: string invoice_item_category_id = 1;
     */
    invoiceItemCategoryId: string;
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryDeleteReply
 */
export interface LoadInvoiceItemCategoryDeleteReply {
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryRestoreRequest
 */
export interface LoadInvoiceItemCategoryRestoreRequest {
    /**
     * @generated from protobuf field: string invoice_item_category_id = 1;
     */
    invoiceItemCategoryId: string;
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryRestoreReply
 */
export interface LoadInvoiceItemCategoryRestoreReply {
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryRetrieveRequest
 */
export interface LoadInvoiceItemCategoryRetrieveRequest {
    /**
     * @generated from protobuf field: string invoice_item_category_id = 1;
     */
    invoiceItemCategoryId: string;
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoryRetrieveReply
 */
export interface LoadInvoiceItemCategoryRetrieveReply {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: bool required = 2;
     */
    required: boolean;
    /**
     * @generated from protobuf field: bool includeInGrossAmount = 3;
     */
    includeInGrossAmount: boolean;
    /**
     * @generated from protobuf field: string updated_at = 4;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: string created_at = 5;
     */
    createdAt: string;
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoriesGetRequest
 */
export interface LoadInvoiceItemCategoriesGetRequest {
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoriesGetReply
 */
export interface LoadInvoiceItemCategoriesGetReply {
    /**
     * @generated from protobuf field: repeated LoadInvoiceItemCategoriesGetReply.LoadInvoiceItemCategory invoice_item_categories = 1;
     */
    invoiceItemCategories: LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory[];
}
/**
 * @generated from protobuf message LoadInvoiceItemCategoriesGetReply.LoadInvoiceItemCategory
 */
export interface LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory {
    /**
     * @generated from protobuf field: string invoice_item_category_id = 1;
     */
    invoiceItemCategoryId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: bool required = 3;
     */
    required: boolean;
    /**
     * @generated from protobuf field: bool include_in_gross_amount = 4;
     */
    includeInGrossAmount: boolean;
    /**
     * @generated from protobuf field: bool deleted = 5;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: string updated_at = 6;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: string created_at = 7;
     */
    createdAt: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryAddRequest$Type extends MessageType<LoadInvoiceItemCategoryAddRequest> {
    constructor() {
        super("LoadInvoiceItemCategoryAddRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "required", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "includeInGrossAmount", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryAddRequest>): LoadInvoiceItemCategoryAddRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.required = false;
        message.includeInGrossAmount = false;
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryAddRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryAddRequest): LoadInvoiceItemCategoryAddRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* bool required */ 2:
                    message.required = reader.bool();
                    break;
                case /* bool includeInGrossAmount */ 3:
                    message.includeInGrossAmount = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryAddRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* bool required = 2; */
        if (message.required !== false)
            writer.tag(2, WireType.Varint).bool(message.required);
        /* bool includeInGrossAmount = 3; */
        if (message.includeInGrossAmount !== false)
            writer.tag(3, WireType.Varint).bool(message.includeInGrossAmount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryAddRequest
 */
export const LoadInvoiceItemCategoryAddRequest = new LoadInvoiceItemCategoryAddRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryAddReply$Type extends MessageType<LoadInvoiceItemCategoryAddReply> {
    constructor() {
        super("LoadInvoiceItemCategoryAddReply", [
            { no: 1, name: "invoice_item_category_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryAddReply>): LoadInvoiceItemCategoryAddReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoiceItemCategoryId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryAddReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryAddReply): LoadInvoiceItemCategoryAddReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoice_item_category_id */ 1:
                    message.invoiceItemCategoryId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryAddReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoice_item_category_id = 1; */
        if (message.invoiceItemCategoryId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoiceItemCategoryId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryAddReply
 */
export const LoadInvoiceItemCategoryAddReply = new LoadInvoiceItemCategoryAddReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryUpdateRequest$Type extends MessageType<LoadInvoiceItemCategoryUpdateRequest> {
    constructor() {
        super("LoadInvoiceItemCategoryUpdateRequest", [
            { no: 1, name: "invoice_item_category_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "required", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "includeInGrossAmount", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryUpdateRequest>): LoadInvoiceItemCategoryUpdateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoiceItemCategoryId = "";
        message.name = "";
        message.required = false;
        message.includeInGrossAmount = false;
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryUpdateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryUpdateRequest): LoadInvoiceItemCategoryUpdateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoice_item_category_id */ 1:
                    message.invoiceItemCategoryId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* bool required */ 3:
                    message.required = reader.bool();
                    break;
                case /* bool includeInGrossAmount */ 4:
                    message.includeInGrossAmount = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryUpdateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoice_item_category_id = 1; */
        if (message.invoiceItemCategoryId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoiceItemCategoryId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* bool required = 3; */
        if (message.required !== false)
            writer.tag(3, WireType.Varint).bool(message.required);
        /* bool includeInGrossAmount = 4; */
        if (message.includeInGrossAmount !== false)
            writer.tag(4, WireType.Varint).bool(message.includeInGrossAmount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryUpdateRequest
 */
export const LoadInvoiceItemCategoryUpdateRequest = new LoadInvoiceItemCategoryUpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryUpdateReply$Type extends MessageType<LoadInvoiceItemCategoryUpdateReply> {
    constructor() {
        super("LoadInvoiceItemCategoryUpdateReply", []);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryUpdateReply>): LoadInvoiceItemCategoryUpdateReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryUpdateReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryUpdateReply): LoadInvoiceItemCategoryUpdateReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryUpdateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryUpdateReply
 */
export const LoadInvoiceItemCategoryUpdateReply = new LoadInvoiceItemCategoryUpdateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryDeleteRequest$Type extends MessageType<LoadInvoiceItemCategoryDeleteRequest> {
    constructor() {
        super("LoadInvoiceItemCategoryDeleteRequest", [
            { no: 1, name: "invoice_item_category_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryDeleteRequest>): LoadInvoiceItemCategoryDeleteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoiceItemCategoryId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryDeleteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryDeleteRequest): LoadInvoiceItemCategoryDeleteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoice_item_category_id */ 1:
                    message.invoiceItemCategoryId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryDeleteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoice_item_category_id = 1; */
        if (message.invoiceItemCategoryId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoiceItemCategoryId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryDeleteRequest
 */
export const LoadInvoiceItemCategoryDeleteRequest = new LoadInvoiceItemCategoryDeleteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryDeleteReply$Type extends MessageType<LoadInvoiceItemCategoryDeleteReply> {
    constructor() {
        super("LoadInvoiceItemCategoryDeleteReply", []);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryDeleteReply>): LoadInvoiceItemCategoryDeleteReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryDeleteReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryDeleteReply): LoadInvoiceItemCategoryDeleteReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryDeleteReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryDeleteReply
 */
export const LoadInvoiceItemCategoryDeleteReply = new LoadInvoiceItemCategoryDeleteReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryRestoreRequest$Type extends MessageType<LoadInvoiceItemCategoryRestoreRequest> {
    constructor() {
        super("LoadInvoiceItemCategoryRestoreRequest", [
            { no: 1, name: "invoice_item_category_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryRestoreRequest>): LoadInvoiceItemCategoryRestoreRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoiceItemCategoryId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryRestoreRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryRestoreRequest): LoadInvoiceItemCategoryRestoreRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoice_item_category_id */ 1:
                    message.invoiceItemCategoryId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryRestoreRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoice_item_category_id = 1; */
        if (message.invoiceItemCategoryId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoiceItemCategoryId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryRestoreRequest
 */
export const LoadInvoiceItemCategoryRestoreRequest = new LoadInvoiceItemCategoryRestoreRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryRestoreReply$Type extends MessageType<LoadInvoiceItemCategoryRestoreReply> {
    constructor() {
        super("LoadInvoiceItemCategoryRestoreReply", []);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryRestoreReply>): LoadInvoiceItemCategoryRestoreReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryRestoreReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryRestoreReply): LoadInvoiceItemCategoryRestoreReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryRestoreReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryRestoreReply
 */
export const LoadInvoiceItemCategoryRestoreReply = new LoadInvoiceItemCategoryRestoreReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryRetrieveRequest$Type extends MessageType<LoadInvoiceItemCategoryRetrieveRequest> {
    constructor() {
        super("LoadInvoiceItemCategoryRetrieveRequest", [
            { no: 1, name: "invoice_item_category_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryRetrieveRequest>): LoadInvoiceItemCategoryRetrieveRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoiceItemCategoryId = "";
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryRetrieveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryRetrieveRequest): LoadInvoiceItemCategoryRetrieveRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoice_item_category_id */ 1:
                    message.invoiceItemCategoryId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryRetrieveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoice_item_category_id = 1; */
        if (message.invoiceItemCategoryId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoiceItemCategoryId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryRetrieveRequest
 */
export const LoadInvoiceItemCategoryRetrieveRequest = new LoadInvoiceItemCategoryRetrieveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoryRetrieveReply$Type extends MessageType<LoadInvoiceItemCategoryRetrieveReply> {
    constructor() {
        super("LoadInvoiceItemCategoryRetrieveReply", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "required", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "includeInGrossAmount", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoryRetrieveReply>): LoadInvoiceItemCategoryRetrieveReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.required = false;
        message.includeInGrossAmount = false;
        message.updatedAt = "";
        message.createdAt = "";
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoryRetrieveReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoryRetrieveReply): LoadInvoiceItemCategoryRetrieveReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* bool required */ 2:
                    message.required = reader.bool();
                    break;
                case /* bool includeInGrossAmount */ 3:
                    message.includeInGrossAmount = reader.bool();
                    break;
                case /* string updated_at */ 4:
                    message.updatedAt = reader.string();
                    break;
                case /* string created_at */ 5:
                    message.createdAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoryRetrieveReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* bool required = 2; */
        if (message.required !== false)
            writer.tag(2, WireType.Varint).bool(message.required);
        /* bool includeInGrossAmount = 3; */
        if (message.includeInGrossAmount !== false)
            writer.tag(3, WireType.Varint).bool(message.includeInGrossAmount);
        /* string updated_at = 4; */
        if (message.updatedAt !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.updatedAt);
        /* string created_at = 5; */
        if (message.createdAt !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoryRetrieveReply
 */
export const LoadInvoiceItemCategoryRetrieveReply = new LoadInvoiceItemCategoryRetrieveReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoriesGetRequest$Type extends MessageType<LoadInvoiceItemCategoriesGetRequest> {
    constructor() {
        super("LoadInvoiceItemCategoriesGetRequest", []);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoriesGetRequest>): LoadInvoiceItemCategoriesGetRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoriesGetRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoriesGetRequest): LoadInvoiceItemCategoriesGetRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoriesGetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoriesGetRequest
 */
export const LoadInvoiceItemCategoriesGetRequest = new LoadInvoiceItemCategoriesGetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoriesGetReply$Type extends MessageType<LoadInvoiceItemCategoriesGetReply> {
    constructor() {
        super("LoadInvoiceItemCategoriesGetReply", [
            { no: 1, name: "invoice_item_categories", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoriesGetReply>): LoadInvoiceItemCategoriesGetReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoiceItemCategories = [];
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoriesGetReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoriesGetReply): LoadInvoiceItemCategoriesGetReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated LoadInvoiceItemCategoriesGetReply.LoadInvoiceItemCategory invoice_item_categories */ 1:
                    message.invoiceItemCategories.push(LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoriesGetReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated LoadInvoiceItemCategoriesGetReply.LoadInvoiceItemCategory invoice_item_categories = 1; */
        for (let i = 0; i < message.invoiceItemCategories.length; i++)
            LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory.internalBinaryWrite(message.invoiceItemCategories[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoriesGetReply
 */
export const LoadInvoiceItemCategoriesGetReply = new LoadInvoiceItemCategoriesGetReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory$Type extends MessageType<LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory> {
    constructor() {
        super("LoadInvoiceItemCategoriesGetReply.LoadInvoiceItemCategory", [
            { no: 1, name: "invoice_item_category_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "required", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "include_in_gross_amount", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory>): LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.invoiceItemCategoryId = "";
        message.name = "";
        message.required = false;
        message.includeInGrossAmount = false;
        message.deleted = false;
        message.updatedAt = "";
        message.createdAt = "";
        if (value !== undefined)
            reflectionMergePartial<LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory): LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string invoice_item_category_id */ 1:
                    message.invoiceItemCategoryId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* bool required */ 3:
                    message.required = reader.bool();
                    break;
                case /* bool include_in_gross_amount */ 4:
                    message.includeInGrossAmount = reader.bool();
                    break;
                case /* bool deleted */ 5:
                    message.deleted = reader.bool();
                    break;
                case /* string updated_at */ 6:
                    message.updatedAt = reader.string();
                    break;
                case /* string created_at */ 7:
                    message.createdAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string invoice_item_category_id = 1; */
        if (message.invoiceItemCategoryId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.invoiceItemCategoryId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* bool required = 3; */
        if (message.required !== false)
            writer.tag(3, WireType.Varint).bool(message.required);
        /* bool include_in_gross_amount = 4; */
        if (message.includeInGrossAmount !== false)
            writer.tag(4, WireType.Varint).bool(message.includeInGrossAmount);
        /* bool deleted = 5; */
        if (message.deleted !== false)
            writer.tag(5, WireType.Varint).bool(message.deleted);
        /* string updated_at = 6; */
        if (message.updatedAt !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.updatedAt);
        /* string created_at = 7; */
        if (message.createdAt !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LoadInvoiceItemCategoriesGetReply.LoadInvoiceItemCategory
 */
export const LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory = new LoadInvoiceItemCategoriesGetReply_LoadInvoiceItemCategory$Type();
/**
 * @generated ServiceType for protobuf service LoadInvoiceItemCategoriesService
 */
export const LoadInvoiceItemCategoriesService = new ServiceType("LoadInvoiceItemCategoriesService", [
    { name: "LoadInvoiceItemCategoryAdd", options: {}, I: LoadInvoiceItemCategoryAddRequest, O: LoadInvoiceItemCategoryAddReply },
    { name: "LoadInvoiceItemCategoryUpdate", options: {}, I: LoadInvoiceItemCategoryUpdateRequest, O: LoadInvoiceItemCategoryUpdateReply },
    { name: "LoadInvoiceItemCategoryDelete", options: {}, I: LoadInvoiceItemCategoryDeleteRequest, O: LoadInvoiceItemCategoryDeleteReply },
    { name: "LoadInvoiceItemCategoryRestore", options: {}, I: LoadInvoiceItemCategoryRestoreRequest, O: LoadInvoiceItemCategoryRestoreReply },
    { name: "LoadInvoiceItemCategoryRetrieve", options: {}, I: LoadInvoiceItemCategoryRetrieveRequest, O: LoadInvoiceItemCategoryRetrieveReply },
    { name: "LoadInvoiceItemCategoriesGet", options: {}, I: LoadInvoiceItemCategoriesGetRequest, O: LoadInvoiceItemCategoriesGetReply }
]);
