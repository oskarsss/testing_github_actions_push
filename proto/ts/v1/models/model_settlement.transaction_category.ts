// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_settlement.transaction_category.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message SettlementTransactionCategoryModel
 */
export interface SettlementTransactionCategoryModel {
}
/**
 * @generated from protobuf message SettlementTransactionCategoryModel.Category
 */
export interface SettlementTransactionCategoryModel_Category {
    /**
     * @generated from protobuf field: string company_id = 1;
     */
    companyId: string;
    /**
     * @generated from protobuf field: string transaction_category_id = 2;
     */
    transactionCategoryId: string;
    /**
     * @generated from protobuf field: string name = 3;
     */
    name: string;
    /**
     * @generated from protobuf field: SettlementTransactionCategoryModel.Type type = 4;
     */
    type: SettlementTransactionCategoryModel_Type;
    /**
     * @generated from protobuf field: SettlementTransactionCategoryModel.EntityType entity_type = 5;
     */
    entityType: SettlementTransactionCategoryModel_EntityType;
    /**
     * @generated from protobuf field: repeated string driver_types = 6;
     */
    driverTypes: string[];
    /**
     * @generated from protobuf field: bool required = 7;
     */
    required: boolean;
    /**
     * @generated from protobuf field: bool recurring = 8;
     */
    recurring: boolean;
    /**
     * @generated from protobuf field: SettlementTransactionCategoryModel.RecurringTransactionCyclePeriodFrequency recurring_transaction_cycle_period_frequency = 9;
     */
    recurringTransactionCyclePeriodFrequency: SettlementTransactionCategoryModel_RecurringTransactionCyclePeriodFrequency;
    /**
     * @generated from protobuf field: SettlementTransactionCategoryModel.MasterType master_type = 10;
     */
    masterType: SettlementTransactionCategoryModel_MasterType;
    /**
     * @generated from protobuf field: bool deleted = 11;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: string updated_at = 12;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: string created_at = 13;
     */
    createdAt: string;
}
/**
 * @generated from protobuf enum SettlementTransactionCategoryModel.Type
 */
export enum SettlementTransactionCategoryModel_Type {
    /**
     * @generated from protobuf enum value: TYPE_UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: TYPE_CREDIT = 1;
     */
    CREDIT = 1,
    /**
     * @generated from protobuf enum value: TYPE_DEBIT = 2;
     */
    DEBIT = 2
}
/**
 * @generated from protobuf enum SettlementTransactionCategoryModel.EntityType
 */
export enum SettlementTransactionCategoryModel_EntityType {
    /**
     * @generated from protobuf enum value: ENTITY_TYPE_UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: ENTITY_TYPE_DRIVER = 1;
     */
    DRIVER = 1,
    /**
     * @generated from protobuf enum value: ENTITY_TYPE_TRUCK = 2;
     */
    TRUCK = 2,
    /**
     * @generated from protobuf enum value: ENTITY_TYPE_TRAILER = 3;
     */
    TRAILER = 3
}
/**
 * @generated from protobuf enum SettlementTransactionCategoryModel.RecurringTransactionCyclePeriodFrequency
 */
export enum SettlementTransactionCategoryModel_RecurringTransactionCyclePeriodFrequency {
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_CYCLE_PERIOD_FREQUENCY_UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_CYCLE_PERIOD_FREQUENCY_EVERY_PERIOD = 1;
     */
    EVERY_PERIOD = 1,
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_CYCLE_PERIOD_FREQUENCY_MONTHLY = 2;
     */
    MONTHLY = 2
}
/**
 * @generated from protobuf enum SettlementTransactionCategoryModel.MasterType
 */
export enum SettlementTransactionCategoryModel_MasterType {
    /**
     * @generated from protobuf enum value: MASTER_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: MASTER_TYPE_PREVIOUS_SETTLEMENT_NEGATIVE_BALANCE = 1;
     */
    PREVIOUS_SETTLEMENT_NEGATIVE_BALANCE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class SettlementTransactionCategoryModel$Type extends MessageType<SettlementTransactionCategoryModel> {
    constructor() {
        super("SettlementTransactionCategoryModel", []);
    }
    create(value?: PartialMessage<SettlementTransactionCategoryModel>): SettlementTransactionCategoryModel {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SettlementTransactionCategoryModel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettlementTransactionCategoryModel): SettlementTransactionCategoryModel {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SettlementTransactionCategoryModel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettlementTransactionCategoryModel
 */
export const SettlementTransactionCategoryModel = new SettlementTransactionCategoryModel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettlementTransactionCategoryModel_Category$Type extends MessageType<SettlementTransactionCategoryModel_Category> {
    constructor() {
        super("SettlementTransactionCategoryModel.Category", [
            { no: 1, name: "company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "transaction_category_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "type", kind: "enum", T: () => ["SettlementTransactionCategoryModel.Type", SettlementTransactionCategoryModel_Type, "TYPE_"] },
            { no: 5, name: "entity_type", kind: "enum", T: () => ["SettlementTransactionCategoryModel.EntityType", SettlementTransactionCategoryModel_EntityType, "ENTITY_TYPE_"] },
            { no: 6, name: "driver_types", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "required", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "recurring", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "recurring_transaction_cycle_period_frequency", kind: "enum", T: () => ["SettlementTransactionCategoryModel.RecurringTransactionCyclePeriodFrequency", SettlementTransactionCategoryModel_RecurringTransactionCyclePeriodFrequency, "RECURRING_TRANSACTION_CYCLE_PERIOD_FREQUENCY_"] },
            { no: 10, name: "master_type", kind: "enum", T: () => ["SettlementTransactionCategoryModel.MasterType", SettlementTransactionCategoryModel_MasterType, "MASTER_TYPE_"] },
            { no: 11, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SettlementTransactionCategoryModel_Category>): SettlementTransactionCategoryModel_Category {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.companyId = "";
        message.transactionCategoryId = "";
        message.name = "";
        message.type = 0;
        message.entityType = 0;
        message.driverTypes = [];
        message.required = false;
        message.recurring = false;
        message.recurringTransactionCyclePeriodFrequency = 0;
        message.masterType = 0;
        message.deleted = false;
        message.updatedAt = "";
        message.createdAt = "";
        if (value !== undefined)
            reflectionMergePartial<SettlementTransactionCategoryModel_Category>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettlementTransactionCategoryModel_Category): SettlementTransactionCategoryModel_Category {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string company_id */ 1:
                    message.companyId = reader.string();
                    break;
                case /* string transaction_category_id */ 2:
                    message.transactionCategoryId = reader.string();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* SettlementTransactionCategoryModel.Type type */ 4:
                    message.type = reader.int32();
                    break;
                case /* SettlementTransactionCategoryModel.EntityType entity_type */ 5:
                    message.entityType = reader.int32();
                    break;
                case /* repeated string driver_types */ 6:
                    message.driverTypes.push(reader.string());
                    break;
                case /* bool required */ 7:
                    message.required = reader.bool();
                    break;
                case /* bool recurring */ 8:
                    message.recurring = reader.bool();
                    break;
                case /* SettlementTransactionCategoryModel.RecurringTransactionCyclePeriodFrequency recurring_transaction_cycle_period_frequency */ 9:
                    message.recurringTransactionCyclePeriodFrequency = reader.int32();
                    break;
                case /* SettlementTransactionCategoryModel.MasterType master_type */ 10:
                    message.masterType = reader.int32();
                    break;
                case /* bool deleted */ 11:
                    message.deleted = reader.bool();
                    break;
                case /* string updated_at */ 12:
                    message.updatedAt = reader.string();
                    break;
                case /* string created_at */ 13:
                    message.createdAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SettlementTransactionCategoryModel_Category, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string company_id = 1; */
        if (message.companyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.companyId);
        /* string transaction_category_id = 2; */
        if (message.transactionCategoryId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.transactionCategoryId);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.name);
        /* SettlementTransactionCategoryModel.Type type = 4; */
        if (message.type !== 0)
            writer.tag(4, WireType.Varint).int32(message.type);
        /* SettlementTransactionCategoryModel.EntityType entity_type = 5; */
        if (message.entityType !== 0)
            writer.tag(5, WireType.Varint).int32(message.entityType);
        /* repeated string driver_types = 6; */
        for (let i = 0; i < message.driverTypes.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.driverTypes[i]);
        /* bool required = 7; */
        if (message.required !== false)
            writer.tag(7, WireType.Varint).bool(message.required);
        /* bool recurring = 8; */
        if (message.recurring !== false)
            writer.tag(8, WireType.Varint).bool(message.recurring);
        /* SettlementTransactionCategoryModel.RecurringTransactionCyclePeriodFrequency recurring_transaction_cycle_period_frequency = 9; */
        if (message.recurringTransactionCyclePeriodFrequency !== 0)
            writer.tag(9, WireType.Varint).int32(message.recurringTransactionCyclePeriodFrequency);
        /* SettlementTransactionCategoryModel.MasterType master_type = 10; */
        if (message.masterType !== 0)
            writer.tag(10, WireType.Varint).int32(message.masterType);
        /* bool deleted = 11; */
        if (message.deleted !== false)
            writer.tag(11, WireType.Varint).bool(message.deleted);
        /* string updated_at = 12; */
        if (message.updatedAt !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.updatedAt);
        /* string created_at = 13; */
        if (message.createdAt !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SettlementTransactionCategoryModel.Category
 */
export const SettlementTransactionCategoryModel_Category = new SettlementTransactionCategoryModel_Category$Type();
