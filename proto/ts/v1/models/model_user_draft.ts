// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_user_draft.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message UserDraftModel
 */
export interface UserDraftModel {
}
/**
 * @generated from protobuf message UserDraftModel.UserDraftRead
 */
export interface UserDraftModel_UserDraftRead {
    /**
     * @generated from protobuf field: string type = 1;
     */
    type: string;
    /**
     * @generated from protobuf field: string draft_id = 2;
     */
    draftId: string;
    /**
     * @generated from protobuf field: UserDraftModel.Status status = 3;
     */
    status: UserDraftModel_Status;
    /**
     * @generated from protobuf field: bool deleted = 4;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: string updated_at = 5;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: string created_at = 6;
     */
    createdAt: string;
}
/**
 * @generated from protobuf message UserDraftModel.UserDraftWrite
 */
export interface UserDraftModel_UserDraftWrite {
    /**
     * @generated from protobuf field: string draft_id = 1;
     */
    draftId: string; // ServiceLogDraftModel.Status status = 2;
    // bool deleted = 3;
    // string updated_at = 4;
    // string created_at = 4;
}
/**
 * @generated from protobuf enum UserDraftModel.Status
 */
export enum UserDraftModel_Status {
    /**
     * @generated from protobuf enum value: STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: STATUS_PENDING = 1;
     */
    PENDING = 1,
    /**
     * @generated from protobuf enum value: STATUS_EXTRACTING = 2;
     */
    EXTRACTING = 2,
    /**
     * @generated from protobuf enum value: STATUS_COMPLETED = 3;
     */
    COMPLETED = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class UserDraftModel$Type extends MessageType<UserDraftModel> {
    constructor() {
        super("UserDraftModel", []);
    }
    create(value?: PartialMessage<UserDraftModel>): UserDraftModel {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<UserDraftModel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserDraftModel): UserDraftModel {
        return target ?? this.create();
    }
    internalBinaryWrite(message: UserDraftModel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UserDraftModel
 */
export const UserDraftModel = new UserDraftModel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserDraftModel_UserDraftRead$Type extends MessageType<UserDraftModel_UserDraftRead> {
    constructor() {
        super("UserDraftModel.UserDraftRead", [
            { no: 1, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "status", kind: "enum", T: () => ["UserDraftModel.Status", UserDraftModel_Status, "STATUS_"] },
            { no: 4, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserDraftModel_UserDraftRead>): UserDraftModel_UserDraftRead {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.type = "";
        message.draftId = "";
        message.status = 0;
        message.deleted = false;
        message.updatedAt = "";
        message.createdAt = "";
        if (value !== undefined)
            reflectionMergePartial<UserDraftModel_UserDraftRead>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserDraftModel_UserDraftRead): UserDraftModel_UserDraftRead {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string type */ 1:
                    message.type = reader.string();
                    break;
                case /* string draft_id */ 2:
                    message.draftId = reader.string();
                    break;
                case /* UserDraftModel.Status status */ 3:
                    message.status = reader.int32();
                    break;
                case /* bool deleted */ 4:
                    message.deleted = reader.bool();
                    break;
                case /* string updated_at */ 5:
                    message.updatedAt = reader.string();
                    break;
                case /* string created_at */ 6:
                    message.createdAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserDraftModel_UserDraftRead, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string type = 1; */
        if (message.type !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.type);
        /* string draft_id = 2; */
        if (message.draftId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.draftId);
        /* UserDraftModel.Status status = 3; */
        if (message.status !== 0)
            writer.tag(3, WireType.Varint).int32(message.status);
        /* bool deleted = 4; */
        if (message.deleted !== false)
            writer.tag(4, WireType.Varint).bool(message.deleted);
        /* string updated_at = 5; */
        if (message.updatedAt !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.updatedAt);
        /* string created_at = 6; */
        if (message.createdAt !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UserDraftModel.UserDraftRead
 */
export const UserDraftModel_UserDraftRead = new UserDraftModel_UserDraftRead$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserDraftModel_UserDraftWrite$Type extends MessageType<UserDraftModel_UserDraftWrite> {
    constructor() {
        super("UserDraftModel.UserDraftWrite", [
            { no: 1, name: "draft_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserDraftModel_UserDraftWrite>): UserDraftModel_UserDraftWrite {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.draftId = "";
        if (value !== undefined)
            reflectionMergePartial<UserDraftModel_UserDraftWrite>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserDraftModel_UserDraftWrite): UserDraftModel_UserDraftWrite {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string draft_id */ 1:
                    message.draftId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserDraftModel_UserDraftWrite, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string draft_id = 1; */
        if (message.draftId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.draftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UserDraftModel.UserDraftWrite
 */
export const UserDraftModel_UserDraftWrite = new UserDraftModel_UserDraftWrite$Type();
