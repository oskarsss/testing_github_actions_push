// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_vendor.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message VendorModel
 */
export interface VendorModel {
}
/**
 * @generated from protobuf message VendorModel.Vendor
 */
export interface VendorModel_Vendor {
    /**
     * @generated from protobuf field: string vendor_id = 1;
     */
    vendorId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string friendly_name = 3;
     */
    friendlyName: string;
    /**
     * @generated from protobuf field: VendorModel.Type type = 19;
     */
    type: VendorModel_Type;
    /**
     * @generated from protobuf field: string email = 5;
     */
    email: string;
    /**
     * @generated from protobuf field: string address_line_1 = 6;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 7;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 8;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_state = 9;
     */
    addressState: string;
    /**
     * @generated from protobuf field: string address_postal_code = 10;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: string tax_id = 11;
     */
    taxId: string;
    /**
     * @generated from protobuf field: string contact_name = 12;
     */
    contactName: string;
    /**
     * @generated from protobuf field: string contact_email = 13;
     */
    contactEmail: string;
    /**
     * @generated from protobuf field: string contact_phone_number = 14;
     */
    contactPhoneNumber: string;
    /**
     * @generated from protobuf field: string notes = 15;
     */
    notes: string;
    /**
     * @generated from protobuf field: bool deleted = 18;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: string updated_at = 16;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: string created_at = 17;
     */
    createdAt: string;
}
/**
 * @generated from protobuf enum VendorModel.Type
 */
export enum VendorModel_Type {
    /**
     * @generated from protobuf enum value: TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: TYPE_COMPANY = 1;
     */
    COMPANY = 1,
    /**
     * @generated from protobuf enum value: TYPE_INDIVIDUAL = 2;
     */
    INDIVIDUAL = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class VendorModel$Type extends MessageType<VendorModel> {
    constructor() {
        super("VendorModel", []);
    }
    create(value?: PartialMessage<VendorModel>): VendorModel {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<VendorModel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorModel): VendorModel {
        return target ?? this.create();
    }
    internalBinaryWrite(message: VendorModel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorModel
 */
export const VendorModel = new VendorModel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VendorModel_Vendor$Type extends MessageType<VendorModel_Vendor> {
    constructor() {
        super("VendorModel.Vendor", [
            { no: 1, name: "vendor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "friendly_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "type", kind: "enum", T: () => ["VendorModel.Type", VendorModel_Type, "TYPE_"] },
            { no: 5, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "tax_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "contact_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "contact_email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "contact_phone_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "notes", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VendorModel_Vendor>): VendorModel_Vendor {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vendorId = "";
        message.name = "";
        message.friendlyName = "";
        message.type = 0;
        message.email = "";
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressState = "";
        message.addressPostalCode = "";
        message.taxId = "";
        message.contactName = "";
        message.contactEmail = "";
        message.contactPhoneNumber = "";
        message.notes = "";
        message.deleted = false;
        message.updatedAt = "";
        message.createdAt = "";
        if (value !== undefined)
            reflectionMergePartial<VendorModel_Vendor>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VendorModel_Vendor): VendorModel_Vendor {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vendor_id */ 1:
                    message.vendorId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string friendly_name */ 3:
                    message.friendlyName = reader.string();
                    break;
                case /* VendorModel.Type type */ 19:
                    message.type = reader.int32();
                    break;
                case /* string email */ 5:
                    message.email = reader.string();
                    break;
                case /* string address_line_1 */ 6:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 7:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 8:
                    message.addressCity = reader.string();
                    break;
                case /* string address_state */ 9:
                    message.addressState = reader.string();
                    break;
                case /* string address_postal_code */ 10:
                    message.addressPostalCode = reader.string();
                    break;
                case /* string tax_id */ 11:
                    message.taxId = reader.string();
                    break;
                case /* string contact_name */ 12:
                    message.contactName = reader.string();
                    break;
                case /* string contact_email */ 13:
                    message.contactEmail = reader.string();
                    break;
                case /* string contact_phone_number */ 14:
                    message.contactPhoneNumber = reader.string();
                    break;
                case /* string notes */ 15:
                    message.notes = reader.string();
                    break;
                case /* bool deleted */ 18:
                    message.deleted = reader.bool();
                    break;
                case /* string updated_at */ 16:
                    message.updatedAt = reader.string();
                    break;
                case /* string created_at */ 17:
                    message.createdAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VendorModel_Vendor, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vendor_id = 1; */
        if (message.vendorId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vendorId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string friendly_name = 3; */
        if (message.friendlyName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.friendlyName);
        /* VendorModel.Type type = 19; */
        if (message.type !== 0)
            writer.tag(19, WireType.Varint).int32(message.type);
        /* string email = 5; */
        if (message.email !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.email);
        /* string address_line_1 = 6; */
        if (message.addressLine1 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 7; */
        if (message.addressLine2 !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 8; */
        if (message.addressCity !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.addressCity);
        /* string address_state = 9; */
        if (message.addressState !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressState);
        /* string address_postal_code = 10; */
        if (message.addressPostalCode !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressPostalCode);
        /* string tax_id = 11; */
        if (message.taxId !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.taxId);
        /* string contact_name = 12; */
        if (message.contactName !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.contactName);
        /* string contact_email = 13; */
        if (message.contactEmail !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.contactEmail);
        /* string contact_phone_number = 14; */
        if (message.contactPhoneNumber !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.contactPhoneNumber);
        /* string notes = 15; */
        if (message.notes !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.notes);
        /* bool deleted = 18; */
        if (message.deleted !== false)
            writer.tag(18, WireType.Varint).bool(message.deleted);
        /* string updated_at = 16; */
        if (message.updatedAt !== "")
            writer.tag(16, WireType.LengthDelimited).string(message.updatedAt);
        /* string created_at = 17; */
        if (message.createdAt !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VendorModel.Vendor
 */
export const VendorModel_Vendor = new VendorModel_Vendor$Type();
