// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_service_provider.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ServiceProviderModel
 */
export interface ServiceProviderModel {
}
/**
 * @generated from protobuf message ServiceProviderModel.ServiceProvider
 */
export interface ServiceProviderModel_ServiceProvider {
    /**
     * @generated from protobuf field: string service_provider_id = 1;
     */
    serviceProviderId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string contact_name = 3;
     */
    contactName: string;
    /**
     * @generated from protobuf field: string phone = 4;
     */
    phone: string;
    /**
     * @generated from protobuf field: string fax = 5;
     */
    fax: string;
    /**
     * @generated from protobuf field: string email = 6;
     */
    email: string;
    /**
     * @generated from protobuf field: string address_line_1 = 7;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 8;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 9;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_state = 10;
     */
    addressState: string;
    /**
     * @generated from protobuf field: string address_postal_code = 11;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: bool deleted = 12;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: string updated_at = 13;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: string created_at = 14;
     */
    createdAt: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class ServiceProviderModel$Type extends MessageType<ServiceProviderModel> {
    constructor() {
        super("ServiceProviderModel", []);
    }
    create(value?: PartialMessage<ServiceProviderModel>): ServiceProviderModel {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ServiceProviderModel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ServiceProviderModel): ServiceProviderModel {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ServiceProviderModel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ServiceProviderModel
 */
export const ServiceProviderModel = new ServiceProviderModel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServiceProviderModel_ServiceProvider$Type extends MessageType<ServiceProviderModel_ServiceProvider> {
    constructor() {
        super("ServiceProviderModel.ServiceProvider", [
            { no: 1, name: "service_provider_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "contact_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "phone", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "fax", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ServiceProviderModel_ServiceProvider>): ServiceProviderModel_ServiceProvider {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.serviceProviderId = "";
        message.name = "";
        message.contactName = "";
        message.phone = "";
        message.fax = "";
        message.email = "";
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressState = "";
        message.addressPostalCode = "";
        message.deleted = false;
        message.updatedAt = "";
        message.createdAt = "";
        if (value !== undefined)
            reflectionMergePartial<ServiceProviderModel_ServiceProvider>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ServiceProviderModel_ServiceProvider): ServiceProviderModel_ServiceProvider {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_provider_id */ 1:
                    message.serviceProviderId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string contact_name */ 3:
                    message.contactName = reader.string();
                    break;
                case /* string phone */ 4:
                    message.phone = reader.string();
                    break;
                case /* string fax */ 5:
                    message.fax = reader.string();
                    break;
                case /* string email */ 6:
                    message.email = reader.string();
                    break;
                case /* string address_line_1 */ 7:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 8:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 9:
                    message.addressCity = reader.string();
                    break;
                case /* string address_state */ 10:
                    message.addressState = reader.string();
                    break;
                case /* string address_postal_code */ 11:
                    message.addressPostalCode = reader.string();
                    break;
                case /* bool deleted */ 12:
                    message.deleted = reader.bool();
                    break;
                case /* string updated_at */ 13:
                    message.updatedAt = reader.string();
                    break;
                case /* string created_at */ 14:
                    message.createdAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ServiceProviderModel_ServiceProvider, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string service_provider_id = 1; */
        if (message.serviceProviderId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.serviceProviderId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string contact_name = 3; */
        if (message.contactName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.contactName);
        /* string phone = 4; */
        if (message.phone !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.phone);
        /* string fax = 5; */
        if (message.fax !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.fax);
        /* string email = 6; */
        if (message.email !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.email);
        /* string address_line_1 = 7; */
        if (message.addressLine1 !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 8; */
        if (message.addressLine2 !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 9; */
        if (message.addressCity !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressCity);
        /* string address_state = 10; */
        if (message.addressState !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressState);
        /* string address_postal_code = 11; */
        if (message.addressPostalCode !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.addressPostalCode);
        /* bool deleted = 12; */
        if (message.deleted !== false)
            writer.tag(12, WireType.Varint).bool(message.deleted);
        /* string updated_at = 13; */
        if (message.updatedAt !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.updatedAt);
        /* string created_at = 14; */
        if (message.createdAt !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ServiceProviderModel.ServiceProvider
 */
export const ServiceProviderModel_ServiceProvider = new ServiceProviderModel_ServiceProvider$Type();
