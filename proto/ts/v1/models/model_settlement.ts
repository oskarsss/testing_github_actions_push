// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_settlement.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message Settlements
 */
export interface Settlements {
}
/**
 * @generated from protobuf message Settlements.Cycle
 */
export interface Settlements_Cycle {
}
/**
 * @generated from protobuf message Settlements.Cycle.Period
 */
export interface Settlements_Cycle_Period {
}
/**
 * @generated from protobuf message Settlements.Cycle.Period.Settlement
 */
export interface Settlements_Cycle_Period_Settlement {
}
/**
 * @generated from protobuf message Settlements.Cycle.Period.Settlement.Transaction
 */
export interface Settlements_Cycle_Period_Settlement_Transaction {
}
/**
 * @generated from protobuf enum Settlements.Cycle.Period.Settlement.Transaction.Type
 */
export enum Settlements_Cycle_Period_Settlement_Transaction_Type {
    /**
     * @generated from protobuf enum value: TRANSACTION_TYPE_UNSPECIFIED = 0;
     */
    TRANSACTION_TYPE_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: TRANSACTION_TYPE_DEBIT = 1;
     */
    TRANSACTION_TYPE_DEBIT = 1,
    /**
     * @generated from protobuf enum value: TRANSACTION_TYPE_CREDIT = 2;
     */
    TRANSACTION_TYPE_CREDIT = 2
}
/**
 * @generated from protobuf message Settlements.Cycle.Period.Settlement.Trend
 */
export interface Settlements_Cycle_Period_Settlement_Trend {
}
/**
 * @generated from protobuf enum Settlements.Cycle.Period.Settlement.Trend.Entity
 */
export enum Settlements_Cycle_Period_Settlement_Trend_Entity {
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_UNSPECIFIED = 0;
     */
    SETTLEMENT_TREND_ENTITY_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_DRIVER_PAY_AMOUNT = 1;
     */
    SETTLEMENT_TREND_ENTITY_DRIVER_PAY_AMOUNT = 1,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_TOTAL_LOADS_AMOUNT = 2;
     */
    SETTLEMENT_TREND_ENTITY_TOTAL_LOADS_AMOUNT = 2,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_DRIVER_LOADS_AMOUNT = 3;
     */
    SETTLEMENT_TREND_ENTITY_DRIVER_LOADS_AMOUNT = 3,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_COMPANY_NET_AMOUNT = 4;
     */
    SETTLEMENT_TREND_ENTITY_COMPANY_NET_AMOUNT = 4,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_AVG_RPM = 5;
     */
    SETTLEMENT_TREND_ENTITY_AVG_RPM = 5,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_TOLLS_AMOUNT = 6;
     */
    SETTLEMENT_TREND_ENTITY_TOLLS_AMOUNT = 6,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_FUEL_AMOUNT = 7;
     */
    SETTLEMENT_TREND_ENTITY_FUEL_AMOUNT = 7,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_DEBITS_AMOUNT = 8;
     */
    SETTLEMENT_TREND_ENTITY_DEBITS_AMOUNT = 8,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_ENTITY_CREDITS_AMOUNT = 9;
     */
    SETTLEMENT_TREND_ENTITY_CREDITS_AMOUNT = 9
}
/**
 * @generated from protobuf enum Settlements.Cycle.Period.Settlement.Trend.AmountTrend
 */
export enum Settlements_Cycle_Period_Settlement_Trend_AmountTrend {
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_AMOUNT_UNSPECIFIED = 0;
     */
    SETTLEMENT_TREND_AMOUNT_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_AMOUNT_UP = 1;
     */
    SETTLEMENT_TREND_AMOUNT_UP = 1,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_AMOUNT_DOWN = 2;
     */
    SETTLEMENT_TREND_AMOUNT_DOWN = 2,
    /**
     * @generated from protobuf enum value: SETTLEMENT_TREND_AMOUNT_UNCHANGED = 3;
     */
    SETTLEMENT_TREND_AMOUNT_UNCHANGED = 3
}
/**
 * @generated from protobuf enum Settlements.Cycle.Period.Settlement.Status
 */
export enum Settlements_Cycle_Period_Settlement_Status {
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_UNSPECIFIED = 0;
     */
    SETTLEMENT_STATUS_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_OPEN = 1;
     */
    SETTLEMENT_STATUS_OPEN = 1,
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_IN_REVIEW = 2;
     */
    SETTLEMENT_STATUS_IN_REVIEW = 2,
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_CLOSED = 3;
     */
    SETTLEMENT_STATUS_CLOSED = 3,
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_VERIFIED = 4;
     */
    SETTLEMENT_STATUS_VERIFIED = 4,
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_SENT = 5;
     */
    SETTLEMENT_STATUS_SENT = 5,
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_PAID = 6;
     */
    SETTLEMENT_STATUS_PAID = 6
}
/**
 * @generated from protobuf message Settlements.Cycle.Period.Period
 */
export interface Settlements_Cycle_Period_Period {
    /**
     * @generated from protobuf field: string period_id = 1;
     */
    periodId: string;
    /**
     * @generated from protobuf field: string start_datetime = 2;
     */
    startDatetime: string;
    /**
     * @generated from protobuf field: string end_datetime = 3;
     */
    endDatetime: string;
    /**
     * @generated from protobuf field: int64 settlements_count = 4;
     */
    settlementsCount: number;
    /**
     * @generated from protobuf field: double company_net = 5;
     */
    companyNet: number;
    /**
     * @generated from protobuf field: string company_net_formatted = 6;
     */
    companyNetFormatted: string;
    /**
     * @generated from protobuf field: Settlements.Cycle.Period.Status status = 7;
     */
    status: Settlements_Cycle_Period_Status;
    /**
     * @generated from protobuf field: double positive_settlement_amount = 8;
     */
    positiveSettlementAmount: number;
    /**
     * @generated from protobuf field: string positive_settlement_amount_formatted = 9;
     */
    positiveSettlementAmountFormatted: string;
    /**
     * @generated from protobuf field: int64 positive_settlements_count = 10;
     */
    positiveSettlementsCount: number;
    /**
     * @generated from protobuf field: double negative_settlement_amount = 11;
     */
    negativeSettlementAmount: number;
    /**
     * @generated from protobuf field: string negative_settlement_amount_formatted = 12;
     */
    negativeSettlementAmountFormatted: string;
    /**
     * @generated from protobuf field: int64 negative_settlements_count = 13;
     */
    negativeSettlementsCount: number;
    /**
     * @generated from protobuf field: double payout_amount = 14;
     */
    payoutAmount: number;
    /**
     * @generated from protobuf field: string payout_amount_formatted = 15;
     */
    payoutAmountFormatted: string;
}
/**
 * @generated from protobuf enum Settlements.Cycle.Period.Status
 */
export enum Settlements_Cycle_Period_Status {
    /**
     * @generated from protobuf enum value: STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: STATUS_OPEN = 1;
     */
    OPEN = 1,
    /**
     * @generated from protobuf enum value: STATUS_CLOSED = 2;
     */
    CLOSED = 2
}
/**
 * @generated from protobuf message Settlements.RecurringTransaction
 */
export interface Settlements_RecurringTransaction {
}
/**
 * @generated from protobuf enum Settlements.RecurringTransaction.Status
 */
export enum Settlements_RecurringTransaction_Status {
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_STATUS_UNSPECIFIED = 0;
     */
    RECURRING_TRANSACTION_STATUS_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_STATUS_ACTIVE = 1;
     */
    RECURRING_TRANSACTION_STATUS_ACTIVE = 1,
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_STATUS_PAUSED = 2;
     */
    RECURRING_TRANSACTION_STATUS_PAUSED = 2,
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_STATUS_COMPLETED = 3;
     */
    RECURRING_TRANSACTION_STATUS_COMPLETED = 3,
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_STATUS_CANCELED = 4;
     */
    RECURRING_TRANSACTION_STATUS_CANCELED = 4,
    /**
     * @generated from protobuf enum value: RECURRING_TRANSACTION_STATUS_DELETED = 5;
     */
    RECURRING_TRANSACTION_STATUS_DELETED = 5
}
/**
 * @generated from protobuf message Settlements.RevenueType
 */
export interface Settlements_RevenueType {
}
/**
 * @generated from protobuf message Settlements.RevenueType.Item
 */
export interface Settlements_RevenueType_Item {
}
/**
 * @generated from protobuf enum Settlements.RevenueType.Item.Type
 */
export enum Settlements_RevenueType_Item_Type {
    /**
     * @generated from protobuf enum value: TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: TYPE_PER_TOTAL_MILE = 1;
     */
    PER_TOTAL_MILE = 1,
    /**
     * @generated from protobuf enum value: TYPE_PER_LOADED_MILE = 2;
     */
    PER_LOADED_MILE = 2,
    /**
     * @generated from protobuf enum value: TYPE_PER_EMPTY_MILE = 3;
     */
    PER_EMPTY_MILE = 3,
    /**
     * @generated from protobuf enum value: TYPE_PERCENTAGE_FROM_LOAD = 4;
     */
    PERCENTAGE_FROM_LOAD = 4,
    /**
     * @generated from protobuf enum value: TYPE_PERCENTAGE_FROM_COMPANY_NET = 5;
     */
    PERCENTAGE_FROM_COMPANY_NET = 5,
    /**
     * @generated from protobuf enum value: TYPE_FLAT = 6;
     */
    FLAT = 6,
    /**
     * @generated from protobuf enum value: TYPE_HOURLY = 7;
     */
    HOURLY = 7
}
// @generated message type with reflection information, may provide speed optimized methods
class Settlements$Type extends MessageType<Settlements> {
    constructor() {
        super("Settlements", []);
    }
    create(value?: PartialMessage<Settlements>): Settlements {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements): Settlements {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements
 */
export const Settlements = new Settlements$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_Cycle$Type extends MessageType<Settlements_Cycle> {
    constructor() {
        super("Settlements.Cycle", []);
    }
    create(value?: PartialMessage<Settlements_Cycle>): Settlements_Cycle {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements_Cycle>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_Cycle): Settlements_Cycle {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements_Cycle, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.Cycle
 */
export const Settlements_Cycle = new Settlements_Cycle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_Cycle_Period$Type extends MessageType<Settlements_Cycle_Period> {
    constructor() {
        super("Settlements.Cycle.Period", []);
    }
    create(value?: PartialMessage<Settlements_Cycle_Period>): Settlements_Cycle_Period {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements_Cycle_Period>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_Cycle_Period): Settlements_Cycle_Period {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements_Cycle_Period, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.Cycle.Period
 */
export const Settlements_Cycle_Period = new Settlements_Cycle_Period$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_Cycle_Period_Settlement$Type extends MessageType<Settlements_Cycle_Period_Settlement> {
    constructor() {
        super("Settlements.Cycle.Period.Settlement", []);
    }
    create(value?: PartialMessage<Settlements_Cycle_Period_Settlement>): Settlements_Cycle_Period_Settlement {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements_Cycle_Period_Settlement>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_Cycle_Period_Settlement): Settlements_Cycle_Period_Settlement {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements_Cycle_Period_Settlement, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.Cycle.Period.Settlement
 */
export const Settlements_Cycle_Period_Settlement = new Settlements_Cycle_Period_Settlement$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_Cycle_Period_Settlement_Transaction$Type extends MessageType<Settlements_Cycle_Period_Settlement_Transaction> {
    constructor() {
        super("Settlements.Cycle.Period.Settlement.Transaction", []);
    }
    create(value?: PartialMessage<Settlements_Cycle_Period_Settlement_Transaction>): Settlements_Cycle_Period_Settlement_Transaction {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements_Cycle_Period_Settlement_Transaction>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_Cycle_Period_Settlement_Transaction): Settlements_Cycle_Period_Settlement_Transaction {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements_Cycle_Period_Settlement_Transaction, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.Cycle.Period.Settlement.Transaction
 */
export const Settlements_Cycle_Period_Settlement_Transaction = new Settlements_Cycle_Period_Settlement_Transaction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_Cycle_Period_Settlement_Trend$Type extends MessageType<Settlements_Cycle_Period_Settlement_Trend> {
    constructor() {
        super("Settlements.Cycle.Period.Settlement.Trend", []);
    }
    create(value?: PartialMessage<Settlements_Cycle_Period_Settlement_Trend>): Settlements_Cycle_Period_Settlement_Trend {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements_Cycle_Period_Settlement_Trend>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_Cycle_Period_Settlement_Trend): Settlements_Cycle_Period_Settlement_Trend {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements_Cycle_Period_Settlement_Trend, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.Cycle.Period.Settlement.Trend
 */
export const Settlements_Cycle_Period_Settlement_Trend = new Settlements_Cycle_Period_Settlement_Trend$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_Cycle_Period_Period$Type extends MessageType<Settlements_Cycle_Period_Period> {
    constructor() {
        super("Settlements.Cycle.Period.Period", [
            { no: 1, name: "period_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "start_datetime", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "end_datetime", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "settlements_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "company_net", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "company_net_formatted", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "status", kind: "enum", T: () => ["Settlements.Cycle.Period.Status", Settlements_Cycle_Period_Status, "STATUS_"] },
            { no: 8, name: "positive_settlement_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 9, name: "positive_settlement_amount_formatted", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "positive_settlements_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 11, name: "negative_settlement_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 12, name: "negative_settlement_amount_formatted", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "negative_settlements_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 14, name: "payout_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 15, name: "payout_amount_formatted", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Settlements_Cycle_Period_Period>): Settlements_Cycle_Period_Period {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.periodId = "";
        message.startDatetime = "";
        message.endDatetime = "";
        message.settlementsCount = 0;
        message.companyNet = 0;
        message.companyNetFormatted = "";
        message.status = 0;
        message.positiveSettlementAmount = 0;
        message.positiveSettlementAmountFormatted = "";
        message.positiveSettlementsCount = 0;
        message.negativeSettlementAmount = 0;
        message.negativeSettlementAmountFormatted = "";
        message.negativeSettlementsCount = 0;
        message.payoutAmount = 0;
        message.payoutAmountFormatted = "";
        if (value !== undefined)
            reflectionMergePartial<Settlements_Cycle_Period_Period>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_Cycle_Period_Period): Settlements_Cycle_Period_Period {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string period_id */ 1:
                    message.periodId = reader.string();
                    break;
                case /* string start_datetime */ 2:
                    message.startDatetime = reader.string();
                    break;
                case /* string end_datetime */ 3:
                    message.endDatetime = reader.string();
                    break;
                case /* int64 settlements_count */ 4:
                    message.settlementsCount = reader.int64().toNumber();
                    break;
                case /* double company_net */ 5:
                    message.companyNet = reader.double();
                    break;
                case /* string company_net_formatted */ 6:
                    message.companyNetFormatted = reader.string();
                    break;
                case /* Settlements.Cycle.Period.Status status */ 7:
                    message.status = reader.int32();
                    break;
                case /* double positive_settlement_amount */ 8:
                    message.positiveSettlementAmount = reader.double();
                    break;
                case /* string positive_settlement_amount_formatted */ 9:
                    message.positiveSettlementAmountFormatted = reader.string();
                    break;
                case /* int64 positive_settlements_count */ 10:
                    message.positiveSettlementsCount = reader.int64().toNumber();
                    break;
                case /* double negative_settlement_amount */ 11:
                    message.negativeSettlementAmount = reader.double();
                    break;
                case /* string negative_settlement_amount_formatted */ 12:
                    message.negativeSettlementAmountFormatted = reader.string();
                    break;
                case /* int64 negative_settlements_count */ 13:
                    message.negativeSettlementsCount = reader.int64().toNumber();
                    break;
                case /* double payout_amount */ 14:
                    message.payoutAmount = reader.double();
                    break;
                case /* string payout_amount_formatted */ 15:
                    message.payoutAmountFormatted = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Settlements_Cycle_Period_Period, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string period_id = 1; */
        if (message.periodId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.periodId);
        /* string start_datetime = 2; */
        if (message.startDatetime !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.startDatetime);
        /* string end_datetime = 3; */
        if (message.endDatetime !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.endDatetime);
        /* int64 settlements_count = 4; */
        if (message.settlementsCount !== 0)
            writer.tag(4, WireType.Varint).int64(message.settlementsCount);
        /* double company_net = 5; */
        if (message.companyNet !== 0)
            writer.tag(5, WireType.Bit64).double(message.companyNet);
        /* string company_net_formatted = 6; */
        if (message.companyNetFormatted !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.companyNetFormatted);
        /* Settlements.Cycle.Period.Status status = 7; */
        if (message.status !== 0)
            writer.tag(7, WireType.Varint).int32(message.status);
        /* double positive_settlement_amount = 8; */
        if (message.positiveSettlementAmount !== 0)
            writer.tag(8, WireType.Bit64).double(message.positiveSettlementAmount);
        /* string positive_settlement_amount_formatted = 9; */
        if (message.positiveSettlementAmountFormatted !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.positiveSettlementAmountFormatted);
        /* int64 positive_settlements_count = 10; */
        if (message.positiveSettlementsCount !== 0)
            writer.tag(10, WireType.Varint).int64(message.positiveSettlementsCount);
        /* double negative_settlement_amount = 11; */
        if (message.negativeSettlementAmount !== 0)
            writer.tag(11, WireType.Bit64).double(message.negativeSettlementAmount);
        /* string negative_settlement_amount_formatted = 12; */
        if (message.negativeSettlementAmountFormatted !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.negativeSettlementAmountFormatted);
        /* int64 negative_settlements_count = 13; */
        if (message.negativeSettlementsCount !== 0)
            writer.tag(13, WireType.Varint).int64(message.negativeSettlementsCount);
        /* double payout_amount = 14; */
        if (message.payoutAmount !== 0)
            writer.tag(14, WireType.Bit64).double(message.payoutAmount);
        /* string payout_amount_formatted = 15; */
        if (message.payoutAmountFormatted !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.payoutAmountFormatted);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.Cycle.Period.Period
 */
export const Settlements_Cycle_Period_Period = new Settlements_Cycle_Period_Period$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_RecurringTransaction$Type extends MessageType<Settlements_RecurringTransaction> {
    constructor() {
        super("Settlements.RecurringTransaction", []);
    }
    create(value?: PartialMessage<Settlements_RecurringTransaction>): Settlements_RecurringTransaction {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements_RecurringTransaction>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_RecurringTransaction): Settlements_RecurringTransaction {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements_RecurringTransaction, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.RecurringTransaction
 */
export const Settlements_RecurringTransaction = new Settlements_RecurringTransaction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_RevenueType$Type extends MessageType<Settlements_RevenueType> {
    constructor() {
        super("Settlements.RevenueType", []);
    }
    create(value?: PartialMessage<Settlements_RevenueType>): Settlements_RevenueType {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements_RevenueType>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_RevenueType): Settlements_RevenueType {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements_RevenueType, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.RevenueType
 */
export const Settlements_RevenueType = new Settlements_RevenueType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settlements_RevenueType_Item$Type extends MessageType<Settlements_RevenueType_Item> {
    constructor() {
        super("Settlements.RevenueType.Item", []);
    }
    create(value?: PartialMessage<Settlements_RevenueType_Item>): Settlements_RevenueType_Item {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Settlements_RevenueType_Item>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settlements_RevenueType_Item): Settlements_RevenueType_Item {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Settlements_RevenueType_Item, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Settlements.RevenueType.Item
 */
export const Settlements_RevenueType_Item = new Settlements_RevenueType_Item$Type();
