// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_vehicle_defect.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { VehicleMaintenanceModel } from "./model_vehicle_maintenance";
import { VehicleMaintenanceModel_VehicleType } from "./model_vehicle_maintenance";
/**
 * @generated from protobuf message VehicleDefectModel
 */
export interface VehicleDefectModel {
}
/**
 * @generated from protobuf message VehicleDefectModel.Defect
 */
export interface VehicleDefectModel_Defect {
    /**
     * @generated from protobuf field: string vehicle_defect_id = 1;
     */
    vehicleDefectId: string;
    /**
     * @generated from protobuf field: string vehicle_inspection_id = 2;
     */
    vehicleInspectionId: string;
    /**
     * @generated from protobuf field: string vehicle_checklist_item_id = 3;
     */
    vehicleChecklistItemId: string;
    /**
     * @generated from protobuf field: VehicleMaintenanceModel.VehicleType vehicle_type = 4;
     */
    vehicleType: VehicleMaintenanceModel_VehicleType;
    /**
     * @generated from protobuf field: string truck_id = 5;
     */
    truckId: string;
    /**
     * @generated from protobuf field: string trailer_id = 6;
     */
    trailerId: string;
    /**
     * @generated from protobuf field: VehicleDefectModel.DefectPriority priority = 7;
     */
    priority: VehicleDefectModel_DefectPriority;
    /**
     * @generated from protobuf field: string description = 8;
     */
    description: string;
    /**
     * @generated from protobuf field: VehicleDefectModel.DefectStatus status = 9;
     */
    status: VehicleDefectModel_DefectStatus;
    /**
     * @generated from protobuf field: string created_by_user_id = 10;
     */
    createdByUserId: string;
    /**
     * @generated from protobuf field: string created_by_driver_id = 11;
     */
    createdByDriverId: string;
    /**
     * @generated from protobuf field: bool deleted = 12;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: string updated_at = 13;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: string created_at = 14;
     */
    createdAt: string;
}
/**
 * @generated from protobuf message VehicleDefectModel.DefectCreateInput
 */
export interface VehicleDefectModel_DefectCreateInput {
    /**
     * string vehicle_defect_id = 1;
     *
     * @generated from protobuf field: optional string vehicle_inspection_id = 1;
     */
    vehicleInspectionId?: string;
    /**
     * @generated from protobuf field: string vehicle_checklist_item_id = 2;
     */
    vehicleChecklistItemId: string;
    /**
     * @generated from protobuf field: VehicleMaintenanceModel vehicle_type = 3;
     */
    vehicleType?: VehicleMaintenanceModel;
    /**
     * @generated from protobuf field: optional string truck_id = 4;
     */
    truckId?: string;
    /**
     * @generated from protobuf field: optional string trailer_id = 5;
     */
    trailerId?: string;
    /**
     * @generated from protobuf field: VehicleDefectModel.DefectPriority priority = 6;
     */
    priority: VehicleDefectModel_DefectPriority;
    /**
     * @generated from protobuf field: string description = 7;
     */
    description: string;
    /**
     * VehicleDefectStatus status = 9;
     *
     * @generated from protobuf field: optional string created_by_user_id = 8;
     */
    createdByUserId?: string;
    /**
     * @generated from protobuf field: optional string created_by_driver_id = 9;
     */
    createdByDriverId?: string; // bool deleted = 10;
    // optional string updated_at = 11;
    // string created_at = 12;
}
/**
 * @generated from protobuf message VehicleDefectModel.DefectUpdateInput
 */
export interface VehicleDefectModel_DefectUpdateInput {
    /**
     * @generated from protobuf field: string vehicle_defect_id = 1;
     */
    vehicleDefectId: string;
    /**
     * optional string vehicle_inspection_id = 1;
     *
     * @generated from protobuf field: string vehicle_checklist_item_id = 2;
     */
    vehicleChecklistItemId: string;
    /**
     * VehicleMaintenanceModel vehicle_type = 3;
     * optional string truck_id = 4;
     * optional string trailer_id  = 5;
     *
     * @generated from protobuf field: VehicleDefectModel.DefectPriority priority = 6;
     */
    priority: VehicleDefectModel_DefectPriority;
    /**
     * @generated from protobuf field: string description = 7;
     */
    description: string; // VehicleDefectStatus status = 9;
    // optional string created_by_user_id = 8;
    // optional string created_by_driver_id = 9;
    // bool deleted = 10;
    // optional string updated_at = 11;
    // string created_at = 12;
}
/**
 * @generated from protobuf enum VehicleDefectModel.DefectPriority
 */
export enum VehicleDefectModel_DefectPriority {
    /**
     * @generated from protobuf enum value: VEHICLE_PRIORITY_UNSPECIFIED = 0;
     */
    VEHICLE_PRIORITY_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: VEHICLE_PRIORITY_NOTSURE = 1;
     */
    VEHICLE_PRIORITY_NOTSURE = 1,
    /**
     * @generated from protobuf enum value: VEHICLE_PRIORITY_LOW = 2;
     */
    VEHICLE_PRIORITY_LOW = 2,
    /**
     * @generated from protobuf enum value: VEHICLE_PRIORITY_MEDIUM = 3;
     */
    VEHICLE_PRIORITY_MEDIUM = 3,
    /**
     * @generated from protobuf enum value: VEHICLE_PRIORITY_HIGH = 4;
     */
    VEHICLE_PRIORITY_HIGH = 4,
    /**
     * @generated from protobuf enum value: VEHICLE_PRIORITY_CRITICAL = 5;
     */
    VEHICLE_PRIORITY_CRITICAL = 5
}
/**
 * @generated from protobuf enum VehicleDefectModel.DefectStatus
 */
export enum VehicleDefectModel_DefectStatus {
    /**
     * @generated from protobuf enum value: VEHICLE_STATUS_UNSPECIFIED = 0;
     */
    VEHICLE_STATUS_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: VEHICLE_STATUS_OPEN = 1;
     */
    VEHICLE_STATUS_OPEN = 1,
    /**
     * @generated from protobuf enum value: VEHICLE_STATUS_RESOLVED = 2;
     */
    VEHICLE_STATUS_RESOLVED = 2,
    /**
     * @generated from protobuf enum value: VEHICLE_STATUS_CLOSED = 3;
     */
    VEHICLE_STATUS_CLOSED = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class VehicleDefectModel$Type extends MessageType<VehicleDefectModel> {
    constructor() {
        super("VehicleDefectModel", []);
    }
    create(value?: PartialMessage<VehicleDefectModel>): VehicleDefectModel {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<VehicleDefectModel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VehicleDefectModel): VehicleDefectModel {
        return target ?? this.create();
    }
    internalBinaryWrite(message: VehicleDefectModel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VehicleDefectModel
 */
export const VehicleDefectModel = new VehicleDefectModel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VehicleDefectModel_Defect$Type extends MessageType<VehicleDefectModel_Defect> {
    constructor() {
        super("VehicleDefectModel.Defect", [
            { no: 1, name: "vehicle_defect_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "vehicle_inspection_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "vehicle_checklist_item_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "vehicle_type", kind: "enum", T: () => ["VehicleMaintenanceModel.VehicleType", VehicleMaintenanceModel_VehicleType, "VEHICLE_TYPE_"] },
            { no: 5, name: "truck_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "trailer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "priority", kind: "enum", T: () => ["VehicleDefectModel.DefectPriority", VehicleDefectModel_DefectPriority] },
            { no: 8, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "status", kind: "enum", T: () => ["VehicleDefectModel.DefectStatus", VehicleDefectModel_DefectStatus] },
            { no: 10, name: "created_by_user_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "created_by_driver_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VehicleDefectModel_Defect>): VehicleDefectModel_Defect {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vehicleDefectId = "";
        message.vehicleInspectionId = "";
        message.vehicleChecklistItemId = "";
        message.vehicleType = 0;
        message.truckId = "";
        message.trailerId = "";
        message.priority = 0;
        message.description = "";
        message.status = 0;
        message.createdByUserId = "";
        message.createdByDriverId = "";
        message.deleted = false;
        message.updatedAt = "";
        message.createdAt = "";
        if (value !== undefined)
            reflectionMergePartial<VehicleDefectModel_Defect>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VehicleDefectModel_Defect): VehicleDefectModel_Defect {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vehicle_defect_id */ 1:
                    message.vehicleDefectId = reader.string();
                    break;
                case /* string vehicle_inspection_id */ 2:
                    message.vehicleInspectionId = reader.string();
                    break;
                case /* string vehicle_checklist_item_id */ 3:
                    message.vehicleChecklistItemId = reader.string();
                    break;
                case /* VehicleMaintenanceModel.VehicleType vehicle_type */ 4:
                    message.vehicleType = reader.int32();
                    break;
                case /* string truck_id */ 5:
                    message.truckId = reader.string();
                    break;
                case /* string trailer_id */ 6:
                    message.trailerId = reader.string();
                    break;
                case /* VehicleDefectModel.DefectPriority priority */ 7:
                    message.priority = reader.int32();
                    break;
                case /* string description */ 8:
                    message.description = reader.string();
                    break;
                case /* VehicleDefectModel.DefectStatus status */ 9:
                    message.status = reader.int32();
                    break;
                case /* string created_by_user_id */ 10:
                    message.createdByUserId = reader.string();
                    break;
                case /* string created_by_driver_id */ 11:
                    message.createdByDriverId = reader.string();
                    break;
                case /* bool deleted */ 12:
                    message.deleted = reader.bool();
                    break;
                case /* string updated_at */ 13:
                    message.updatedAt = reader.string();
                    break;
                case /* string created_at */ 14:
                    message.createdAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VehicleDefectModel_Defect, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vehicle_defect_id = 1; */
        if (message.vehicleDefectId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vehicleDefectId);
        /* string vehicle_inspection_id = 2; */
        if (message.vehicleInspectionId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.vehicleInspectionId);
        /* string vehicle_checklist_item_id = 3; */
        if (message.vehicleChecklistItemId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.vehicleChecklistItemId);
        /* VehicleMaintenanceModel.VehicleType vehicle_type = 4; */
        if (message.vehicleType !== 0)
            writer.tag(4, WireType.Varint).int32(message.vehicleType);
        /* string truck_id = 5; */
        if (message.truckId !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.truckId);
        /* string trailer_id = 6; */
        if (message.trailerId !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.trailerId);
        /* VehicleDefectModel.DefectPriority priority = 7; */
        if (message.priority !== 0)
            writer.tag(7, WireType.Varint).int32(message.priority);
        /* string description = 8; */
        if (message.description !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.description);
        /* VehicleDefectModel.DefectStatus status = 9; */
        if (message.status !== 0)
            writer.tag(9, WireType.Varint).int32(message.status);
        /* string created_by_user_id = 10; */
        if (message.createdByUserId !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.createdByUserId);
        /* string created_by_driver_id = 11; */
        if (message.createdByDriverId !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.createdByDriverId);
        /* bool deleted = 12; */
        if (message.deleted !== false)
            writer.tag(12, WireType.Varint).bool(message.deleted);
        /* string updated_at = 13; */
        if (message.updatedAt !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.updatedAt);
        /* string created_at = 14; */
        if (message.createdAt !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VehicleDefectModel.Defect
 */
export const VehicleDefectModel_Defect = new VehicleDefectModel_Defect$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VehicleDefectModel_DefectCreateInput$Type extends MessageType<VehicleDefectModel_DefectCreateInput> {
    constructor() {
        super("VehicleDefectModel.DefectCreateInput", [
            { no: 1, name: "vehicle_inspection_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "vehicle_checklist_item_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "vehicle_type", kind: "message", T: () => VehicleMaintenanceModel },
            { no: 4, name: "truck_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "trailer_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "priority", kind: "enum", T: () => ["VehicleDefectModel.DefectPriority", VehicleDefectModel_DefectPriority] },
            { no: 7, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "created_by_user_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "created_by_driver_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VehicleDefectModel_DefectCreateInput>): VehicleDefectModel_DefectCreateInput {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vehicleChecklistItemId = "";
        message.priority = 0;
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<VehicleDefectModel_DefectCreateInput>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VehicleDefectModel_DefectCreateInput): VehicleDefectModel_DefectCreateInput {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string vehicle_inspection_id */ 1:
                    message.vehicleInspectionId = reader.string();
                    break;
                case /* string vehicle_checklist_item_id */ 2:
                    message.vehicleChecklistItemId = reader.string();
                    break;
                case /* VehicleMaintenanceModel vehicle_type */ 3:
                    message.vehicleType = VehicleMaintenanceModel.internalBinaryRead(reader, reader.uint32(), options, message.vehicleType);
                    break;
                case /* optional string truck_id */ 4:
                    message.truckId = reader.string();
                    break;
                case /* optional string trailer_id */ 5:
                    message.trailerId = reader.string();
                    break;
                case /* VehicleDefectModel.DefectPriority priority */ 6:
                    message.priority = reader.int32();
                    break;
                case /* string description */ 7:
                    message.description = reader.string();
                    break;
                case /* optional string created_by_user_id */ 8:
                    message.createdByUserId = reader.string();
                    break;
                case /* optional string created_by_driver_id */ 9:
                    message.createdByDriverId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VehicleDefectModel_DefectCreateInput, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string vehicle_inspection_id = 1; */
        if (message.vehicleInspectionId !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.vehicleInspectionId);
        /* string vehicle_checklist_item_id = 2; */
        if (message.vehicleChecklistItemId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.vehicleChecklistItemId);
        /* VehicleMaintenanceModel vehicle_type = 3; */
        if (message.vehicleType)
            VehicleMaintenanceModel.internalBinaryWrite(message.vehicleType, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional string truck_id = 4; */
        if (message.truckId !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.truckId);
        /* optional string trailer_id = 5; */
        if (message.trailerId !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.trailerId);
        /* VehicleDefectModel.DefectPriority priority = 6; */
        if (message.priority !== 0)
            writer.tag(6, WireType.Varint).int32(message.priority);
        /* string description = 7; */
        if (message.description !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.description);
        /* optional string created_by_user_id = 8; */
        if (message.createdByUserId !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.createdByUserId);
        /* optional string created_by_driver_id = 9; */
        if (message.createdByDriverId !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.createdByDriverId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VehicleDefectModel.DefectCreateInput
 */
export const VehicleDefectModel_DefectCreateInput = new VehicleDefectModel_DefectCreateInput$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VehicleDefectModel_DefectUpdateInput$Type extends MessageType<VehicleDefectModel_DefectUpdateInput> {
    constructor() {
        super("VehicleDefectModel.DefectUpdateInput", [
            { no: 1, name: "vehicle_defect_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "vehicle_checklist_item_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "priority", kind: "enum", T: () => ["VehicleDefectModel.DefectPriority", VehicleDefectModel_DefectPriority] },
            { no: 7, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<VehicleDefectModel_DefectUpdateInput>): VehicleDefectModel_DefectUpdateInput {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.vehicleDefectId = "";
        message.vehicleChecklistItemId = "";
        message.priority = 0;
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<VehicleDefectModel_DefectUpdateInput>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VehicleDefectModel_DefectUpdateInput): VehicleDefectModel_DefectUpdateInput {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string vehicle_defect_id */ 1:
                    message.vehicleDefectId = reader.string();
                    break;
                case /* string vehicle_checklist_item_id */ 2:
                    message.vehicleChecklistItemId = reader.string();
                    break;
                case /* VehicleDefectModel.DefectPriority priority */ 6:
                    message.priority = reader.int32();
                    break;
                case /* string description */ 7:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VehicleDefectModel_DefectUpdateInput, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string vehicle_defect_id = 1; */
        if (message.vehicleDefectId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.vehicleDefectId);
        /* string vehicle_checklist_item_id = 2; */
        if (message.vehicleChecklistItemId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.vehicleChecklistItemId);
        /* VehicleDefectModel.DefectPriority priority = 6; */
        if (message.priority !== 0)
            writer.tag(6, WireType.Varint).int32(message.priority);
        /* string description = 7; */
        if (message.description !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VehicleDefectModel.DefectUpdateInput
 */
export const VehicleDefectModel_DefectUpdateInput = new VehicleDefectModel_DefectUpdateInput$Type();
