// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_trailer.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { NoteModel_EntityNote } from "./model_note";
/**
 * @generated from protobuf message TrailerModel
 */
export interface TrailerModel {
}
/**
 * @generated from protobuf message TrailerModel.Type
 */
export interface TrailerModel_Type {
}
/**
 * @generated from protobuf enum TrailerModel.Type.Icon
 */
export enum TrailerModel_Type_Icon {
    /**
     * @generated from protobuf enum value: ICON_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: ICON_DEFAULT = 1;
     */
    DEFAULT = 1,
    /**
     * @generated from protobuf enum value: ICON_DRY_VAN = 2;
     */
    DRY_VAN = 2,
    /**
     * @generated from protobuf enum value: ICON_REEFER = 3;
     */
    REEFER = 3,
    /**
     * @generated from protobuf enum value: ICON_FLATBED = 4;
     */
    FLATBED = 4,
    /**
     * @generated from protobuf enum value: ICON_STEP_DECK = 5;
     */
    STEP_DECK = 5,
    /**
     * @generated from protobuf enum value: ICON_TANKER = 6;
     */
    TANKER = 6,
    /**
     * @generated from protobuf enum value: ICON_RGN_LOW_BOY = 7;
     */
    RGN_LOW_BOY = 7
}
/**
 * @generated from protobuf message TrailerModel.Trailer
 */
export interface TrailerModel_Trailer {
    /**
     * @generated from protobuf field: string trailer_id = 1;
     */
    trailerId: string;
    /**
     * @generated from protobuf field: string vendor_id = 2;
     */
    vendorId: string;
    /**
     * @generated from protobuf field: string trailer_type_id = 3;
     */
    trailerTypeId: string;
    /**
     * @generated from protobuf field: string reference_id = 4;
     */
    referenceId: string;
    /**
     * @generated from protobuf field: TrailerModel.Ownership ownership_type = 5;
     */
    ownershipType: TrailerModel_Ownership;
    /**
     * @generated from protobuf field: string vin = 6;
     */
    vin: string;
    /**
     * @generated from protobuf field: string make = 7;
     */
    make: string;
    /**
     * @generated from protobuf field: string model = 8;
     */
    model: string;
    /**
     * @generated from protobuf field: int64 year = 9;
     */
    year: number;
    /**
     * @generated from protobuf field: string trailer_company_id = 10;
     */
    trailerCompanyId: string;
    /**
     * @generated from protobuf field: string plate_id = 11;
     */
    plateId: string;
    /**
     * @generated from protobuf field: string parking_location = 12;
     */
    parkingLocation: string;
    /**
     * @generated from protobuf field: double company_rent_amount = 13;
     */
    companyRentAmount: number;
    /**
     * @generated from protobuf field: double company_deposit_amount = 14;
     */
    companyDepositAmount: number;
    /**
     * @generated from protobuf field: double driver_rent_amount = 15;
     */
    driverRentAmount: number;
    /**
     * @generated from protobuf field: double driver_deposit_amount = 16;
     */
    driverDepositAmount: number;
    /**
     * @generated from protobuf field: TrailerModel.Status status = 17;
     */
    status: TrailerModel_Status;
    /**
     * @generated from protobuf field: repeated NoteModel.EntityNote notes = 18;
     */
    notes: NoteModel_EntityNote[];
    /**
     * @generated from protobuf field: repeated TrailerModel.Trailer.Tag tags = 19;
     */
    tags: TrailerModel_Trailer_Tag[];
}
/**
 * @generated from protobuf message TrailerModel.Trailer.Tag
 */
export interface TrailerModel_Trailer_Tag {
    /**
     * @generated from protobuf field: string tag_id = 1;
     */
    tagId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
}
/**
 * @generated from protobuf enum TrailerModel.Status
 */
export enum TrailerModel_Status {
    /**
     * @generated from protobuf enum value: STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: STATUS_ACTIVE = 1;
     */
    ACTIVE = 1,
    /**
     * @generated from protobuf enum value: STATUS_OFFLINE = 2;
     */
    OFFLINE = 2,
    /**
     * @generated from protobuf enum value: STATUS_DELETED = 3;
     */
    DELETED = 3
}
/**
 * @generated from protobuf enum TrailerModel.Ownership
 */
export enum TrailerModel_Ownership {
    /**
     * @generated from protobuf enum value: OWNERSHIP_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: OWNERSHIP_OWNED = 1;
     */
    OWNED = 1,
    /**
     * @generated from protobuf enum value: OWNERSHIP_LEASED = 2;
     */
    LEASED = 2,
    /**
     * @generated from protobuf enum value: OWNERSHIP_OWNER_OPERATOR = 3;
     */
    OWNER_OPERATOR = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class TrailerModel$Type extends MessageType<TrailerModel> {
    constructor() {
        super("TrailerModel", []);
    }
    create(value?: PartialMessage<TrailerModel>): TrailerModel {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<TrailerModel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrailerModel): TrailerModel {
        return target ?? this.create();
    }
    internalBinaryWrite(message: TrailerModel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TrailerModel
 */
export const TrailerModel = new TrailerModel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrailerModel_Type$Type extends MessageType<TrailerModel_Type> {
    constructor() {
        super("TrailerModel.Type", []);
    }
    create(value?: PartialMessage<TrailerModel_Type>): TrailerModel_Type {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<TrailerModel_Type>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrailerModel_Type): TrailerModel_Type {
        return target ?? this.create();
    }
    internalBinaryWrite(message: TrailerModel_Type, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TrailerModel.Type
 */
export const TrailerModel_Type = new TrailerModel_Type$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrailerModel_Trailer$Type extends MessageType<TrailerModel_Trailer> {
    constructor() {
        super("TrailerModel.Trailer", [
            { no: 1, name: "trailer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "vendor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "trailer_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "ownership_type", kind: "enum", T: () => ["TrailerModel.Ownership", TrailerModel_Ownership, "OWNERSHIP_"] },
            { no: 6, name: "vin", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "make", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "model", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "year", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 10, name: "trailer_company_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "plate_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "parking_location", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "company_rent_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 14, name: "company_deposit_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 15, name: "driver_rent_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 16, name: "driver_deposit_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 17, name: "status", kind: "enum", T: () => ["TrailerModel.Status", TrailerModel_Status, "STATUS_"] },
            { no: 18, name: "notes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => NoteModel_EntityNote },
            { no: 19, name: "tags", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrailerModel_Trailer_Tag }
        ]);
    }
    create(value?: PartialMessage<TrailerModel_Trailer>): TrailerModel_Trailer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.trailerId = "";
        message.vendorId = "";
        message.trailerTypeId = "";
        message.referenceId = "";
        message.ownershipType = 0;
        message.vin = "";
        message.make = "";
        message.model = "";
        message.year = 0;
        message.trailerCompanyId = "";
        message.plateId = "";
        message.parkingLocation = "";
        message.companyRentAmount = 0;
        message.companyDepositAmount = 0;
        message.driverRentAmount = 0;
        message.driverDepositAmount = 0;
        message.status = 0;
        message.notes = [];
        message.tags = [];
        if (value !== undefined)
            reflectionMergePartial<TrailerModel_Trailer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrailerModel_Trailer): TrailerModel_Trailer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string trailer_id */ 1:
                    message.trailerId = reader.string();
                    break;
                case /* string vendor_id */ 2:
                    message.vendorId = reader.string();
                    break;
                case /* string trailer_type_id */ 3:
                    message.trailerTypeId = reader.string();
                    break;
                case /* string reference_id */ 4:
                    message.referenceId = reader.string();
                    break;
                case /* TrailerModel.Ownership ownership_type */ 5:
                    message.ownershipType = reader.int32();
                    break;
                case /* string vin */ 6:
                    message.vin = reader.string();
                    break;
                case /* string make */ 7:
                    message.make = reader.string();
                    break;
                case /* string model */ 8:
                    message.model = reader.string();
                    break;
                case /* int64 year */ 9:
                    message.year = reader.int64().toNumber();
                    break;
                case /* string trailer_company_id */ 10:
                    message.trailerCompanyId = reader.string();
                    break;
                case /* string plate_id */ 11:
                    message.plateId = reader.string();
                    break;
                case /* string parking_location */ 12:
                    message.parkingLocation = reader.string();
                    break;
                case /* double company_rent_amount */ 13:
                    message.companyRentAmount = reader.double();
                    break;
                case /* double company_deposit_amount */ 14:
                    message.companyDepositAmount = reader.double();
                    break;
                case /* double driver_rent_amount */ 15:
                    message.driverRentAmount = reader.double();
                    break;
                case /* double driver_deposit_amount */ 16:
                    message.driverDepositAmount = reader.double();
                    break;
                case /* TrailerModel.Status status */ 17:
                    message.status = reader.int32();
                    break;
                case /* repeated NoteModel.EntityNote notes */ 18:
                    message.notes.push(NoteModel_EntityNote.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated TrailerModel.Trailer.Tag tags */ 19:
                    message.tags.push(TrailerModel_Trailer_Tag.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrailerModel_Trailer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string trailer_id = 1; */
        if (message.trailerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trailerId);
        /* string vendor_id = 2; */
        if (message.vendorId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.vendorId);
        /* string trailer_type_id = 3; */
        if (message.trailerTypeId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.trailerTypeId);
        /* string reference_id = 4; */
        if (message.referenceId !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.referenceId);
        /* TrailerModel.Ownership ownership_type = 5; */
        if (message.ownershipType !== 0)
            writer.tag(5, WireType.Varint).int32(message.ownershipType);
        /* string vin = 6; */
        if (message.vin !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.vin);
        /* string make = 7; */
        if (message.make !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.make);
        /* string model = 8; */
        if (message.model !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.model);
        /* int64 year = 9; */
        if (message.year !== 0)
            writer.tag(9, WireType.Varint).int64(message.year);
        /* string trailer_company_id = 10; */
        if (message.trailerCompanyId !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.trailerCompanyId);
        /* string plate_id = 11; */
        if (message.plateId !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.plateId);
        /* string parking_location = 12; */
        if (message.parkingLocation !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.parkingLocation);
        /* double company_rent_amount = 13; */
        if (message.companyRentAmount !== 0)
            writer.tag(13, WireType.Bit64).double(message.companyRentAmount);
        /* double company_deposit_amount = 14; */
        if (message.companyDepositAmount !== 0)
            writer.tag(14, WireType.Bit64).double(message.companyDepositAmount);
        /* double driver_rent_amount = 15; */
        if (message.driverRentAmount !== 0)
            writer.tag(15, WireType.Bit64).double(message.driverRentAmount);
        /* double driver_deposit_amount = 16; */
        if (message.driverDepositAmount !== 0)
            writer.tag(16, WireType.Bit64).double(message.driverDepositAmount);
        /* TrailerModel.Status status = 17; */
        if (message.status !== 0)
            writer.tag(17, WireType.Varint).int32(message.status);
        /* repeated NoteModel.EntityNote notes = 18; */
        for (let i = 0; i < message.notes.length; i++)
            NoteModel_EntityNote.internalBinaryWrite(message.notes[i], writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* repeated TrailerModel.Trailer.Tag tags = 19; */
        for (let i = 0; i < message.tags.length; i++)
            TrailerModel_Trailer_Tag.internalBinaryWrite(message.tags[i], writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TrailerModel.Trailer
 */
export const TrailerModel_Trailer = new TrailerModel_Trailer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrailerModel_Trailer_Tag$Type extends MessageType<TrailerModel_Trailer_Tag> {
    constructor() {
        super("TrailerModel.Trailer.Tag", [
            { no: 1, name: "tag_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TrailerModel_Trailer_Tag>): TrailerModel_Trailer_Tag {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.tagId = "";
        message.name = "";
        if (value !== undefined)
            reflectionMergePartial<TrailerModel_Trailer_Tag>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrailerModel_Trailer_Tag): TrailerModel_Trailer_Tag {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tag_id */ 1:
                    message.tagId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrailerModel_Trailer_Tag, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tag_id = 1; */
        if (message.tagId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.tagId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TrailerModel.Trailer.Tag
 */
export const TrailerModel_Trailer_Tag = new TrailerModel_Trailer_Tag$Type();
