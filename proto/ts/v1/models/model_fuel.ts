// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_fuel.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CountryCode } from "./country_code";
/**
 * @generated from protobuf message FuelModel
 */
export interface FuelModel {
    /**
     * @generated from protobuf field: string fuel_transaction_id = 1;
     */
    fuelTransactionId: string;
    /**
     * @generated from protobuf field: string reference_id = 2;
     */
    referenceId: string;
    /**
     * @generated from protobuf field: string datetime = 3;
     */
    datetime: string;
    /**
     * @generated from protobuf field: double total_amount = 4;
     */
    totalAmount: number;
    /**
     * @generated from protobuf field: string total_amount_formatted = 5;
     */
    totalAmountFormatted: string;
    /**
     * @generated from protobuf field: double discount_amount = 6;
     */
    discountAmount: number;
    /**
     * @generated from protobuf field: string discount_amount_formatted = 7;
     */
    discountAmountFormatted: string;
    /**
     * @generated from protobuf field: double total_discounted_amount = 8;
     */
    totalDiscountedAmount: number;
    /**
     * @generated from protobuf field: string total_discounted_amount_formatted = 9;
     */
    totalDiscountedAmountFormatted: string;
    /**
     * @generated from protobuf field: string unit_number = 10;
     */
    unitNumber: string;
    /**
     * @generated from protobuf field: string driver_name = 11;
     */
    driverName: string;
    /**
     * @generated from protobuf field: string truck_stop = 12;
     */
    truckStop: string;
    /**
     * @generated from protobuf field: string city = 13;
     */
    city: string;
    /**
     * @generated from protobuf field: string state = 14;
     */
    state: string;
    /**
     * @generated from protobuf field: string address = 15;
     */
    address: string;
    /**
     * @generated from protobuf field: optional CountryCode country = 16;
     */
    country?: CountryCode;
    /**
     * @generated from protobuf field: string chain = 17;
     */
    chain: string;
    /**
     * @generated from protobuf field: bool in_network = 18;
     */
    inNetwork: boolean;
    /**
     * @generated from protobuf field: double quantity = 19;
     */
    quantity: number;
    /**
     * @generated from protobuf field: string quantity_formatted = 20;
     */
    quantityFormatted: string;
    /**
     * @generated from protobuf field: bool verified = 21;
     */
    verified: boolean;
    /**
     * @generated from protobuf field: string truck_id = 22;
     */
    truckId: string;
    /**
     * @generated from protobuf field: string settlement_id = 23;
     */
    settlementId: string;
    /**
     * @generated from protobuf field: string updated_at = 24;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: string created_at = 25;
     */
    createdAt: string;
    /**
     * @generated from protobuf field: double lat = 26;
     */
    lat: number;
    /**
     * @generated from protobuf field: double lon = 27;
     */
    lon: number;
    /**
     * @generated from protobuf field: string integration_provider_id = 28;
     */
    integrationProviderId: string;
    /**
     * @generated from protobuf field: string product = 29;
     */
    product: string;
}
/**
 * @generated from protobuf enum FuelModel.SettlementStatus
 */
export enum FuelModel_SettlementStatus {
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_ASSIGNED = 1;
     */
    ASSIGNED = 1,
    /**
     * @generated from protobuf enum value: SETTLEMENT_STATUS_UNASSIGNED = 2;
     */
    UNASSIGNED = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class FuelModel$Type extends MessageType<FuelModel> {
    constructor() {
        super("FuelModel", [
            { no: 1, name: "fuel_transaction_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "reference_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "datetime", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "total_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "total_amount_formatted", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "discount_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 7, name: "discount_amount_formatted", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "total_discounted_amount", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 9, name: "total_discounted_amount_formatted", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "unit_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "driver_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "truck_stop", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 17, name: "chain", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "in_network", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 19, name: "quantity", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 20, name: "quantity_formatted", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 21, name: "verified", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 22, name: "truck_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 23, name: "settlement_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 24, name: "updated_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 26, name: "lat", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 27, name: "lon", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 28, name: "integration_provider_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 29, name: "product", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<FuelModel>): FuelModel {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.fuelTransactionId = "";
        message.referenceId = "";
        message.datetime = "";
        message.totalAmount = 0;
        message.totalAmountFormatted = "";
        message.discountAmount = 0;
        message.discountAmountFormatted = "";
        message.totalDiscountedAmount = 0;
        message.totalDiscountedAmountFormatted = "";
        message.unitNumber = "";
        message.driverName = "";
        message.truckStop = "";
        message.city = "";
        message.state = "";
        message.address = "";
        message.chain = "";
        message.inNetwork = false;
        message.quantity = 0;
        message.quantityFormatted = "";
        message.verified = false;
        message.truckId = "";
        message.settlementId = "";
        message.updatedAt = "";
        message.createdAt = "";
        message.lat = 0;
        message.lon = 0;
        message.integrationProviderId = "";
        message.product = "";
        if (value !== undefined)
            reflectionMergePartial<FuelModel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FuelModel): FuelModel {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string fuel_transaction_id */ 1:
                    message.fuelTransactionId = reader.string();
                    break;
                case /* string reference_id */ 2:
                    message.referenceId = reader.string();
                    break;
                case /* string datetime */ 3:
                    message.datetime = reader.string();
                    break;
                case /* double total_amount */ 4:
                    message.totalAmount = reader.double();
                    break;
                case /* string total_amount_formatted */ 5:
                    message.totalAmountFormatted = reader.string();
                    break;
                case /* double discount_amount */ 6:
                    message.discountAmount = reader.double();
                    break;
                case /* string discount_amount_formatted */ 7:
                    message.discountAmountFormatted = reader.string();
                    break;
                case /* double total_discounted_amount */ 8:
                    message.totalDiscountedAmount = reader.double();
                    break;
                case /* string total_discounted_amount_formatted */ 9:
                    message.totalDiscountedAmountFormatted = reader.string();
                    break;
                case /* string unit_number */ 10:
                    message.unitNumber = reader.string();
                    break;
                case /* string driver_name */ 11:
                    message.driverName = reader.string();
                    break;
                case /* string truck_stop */ 12:
                    message.truckStop = reader.string();
                    break;
                case /* string city */ 13:
                    message.city = reader.string();
                    break;
                case /* string state */ 14:
                    message.state = reader.string();
                    break;
                case /* string address */ 15:
                    message.address = reader.string();
                    break;
                case /* optional CountryCode country */ 16:
                    message.country = reader.int32();
                    break;
                case /* string chain */ 17:
                    message.chain = reader.string();
                    break;
                case /* bool in_network */ 18:
                    message.inNetwork = reader.bool();
                    break;
                case /* double quantity */ 19:
                    message.quantity = reader.double();
                    break;
                case /* string quantity_formatted */ 20:
                    message.quantityFormatted = reader.string();
                    break;
                case /* bool verified */ 21:
                    message.verified = reader.bool();
                    break;
                case /* string truck_id */ 22:
                    message.truckId = reader.string();
                    break;
                case /* string settlement_id */ 23:
                    message.settlementId = reader.string();
                    break;
                case /* string updated_at */ 24:
                    message.updatedAt = reader.string();
                    break;
                case /* string created_at */ 25:
                    message.createdAt = reader.string();
                    break;
                case /* double lat */ 26:
                    message.lat = reader.double();
                    break;
                case /* double lon */ 27:
                    message.lon = reader.double();
                    break;
                case /* string integration_provider_id */ 28:
                    message.integrationProviderId = reader.string();
                    break;
                case /* string product */ 29:
                    message.product = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FuelModel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string fuel_transaction_id = 1; */
        if (message.fuelTransactionId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fuelTransactionId);
        /* string reference_id = 2; */
        if (message.referenceId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.referenceId);
        /* string datetime = 3; */
        if (message.datetime !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.datetime);
        /* double total_amount = 4; */
        if (message.totalAmount !== 0)
            writer.tag(4, WireType.Bit64).double(message.totalAmount);
        /* string total_amount_formatted = 5; */
        if (message.totalAmountFormatted !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.totalAmountFormatted);
        /* double discount_amount = 6; */
        if (message.discountAmount !== 0)
            writer.tag(6, WireType.Bit64).double(message.discountAmount);
        /* string discount_amount_formatted = 7; */
        if (message.discountAmountFormatted !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.discountAmountFormatted);
        /* double total_discounted_amount = 8; */
        if (message.totalDiscountedAmount !== 0)
            writer.tag(8, WireType.Bit64).double(message.totalDiscountedAmount);
        /* string total_discounted_amount_formatted = 9; */
        if (message.totalDiscountedAmountFormatted !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.totalDiscountedAmountFormatted);
        /* string unit_number = 10; */
        if (message.unitNumber !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.unitNumber);
        /* string driver_name = 11; */
        if (message.driverName !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.driverName);
        /* string truck_stop = 12; */
        if (message.truckStop !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.truckStop);
        /* string city = 13; */
        if (message.city !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.city);
        /* string state = 14; */
        if (message.state !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.state);
        /* string address = 15; */
        if (message.address !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.address);
        /* optional CountryCode country = 16; */
        if (message.country !== undefined)
            writer.tag(16, WireType.Varint).int32(message.country);
        /* string chain = 17; */
        if (message.chain !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.chain);
        /* bool in_network = 18; */
        if (message.inNetwork !== false)
            writer.tag(18, WireType.Varint).bool(message.inNetwork);
        /* double quantity = 19; */
        if (message.quantity !== 0)
            writer.tag(19, WireType.Bit64).double(message.quantity);
        /* string quantity_formatted = 20; */
        if (message.quantityFormatted !== "")
            writer.tag(20, WireType.LengthDelimited).string(message.quantityFormatted);
        /* bool verified = 21; */
        if (message.verified !== false)
            writer.tag(21, WireType.Varint).bool(message.verified);
        /* string truck_id = 22; */
        if (message.truckId !== "")
            writer.tag(22, WireType.LengthDelimited).string(message.truckId);
        /* string settlement_id = 23; */
        if (message.settlementId !== "")
            writer.tag(23, WireType.LengthDelimited).string(message.settlementId);
        /* string updated_at = 24; */
        if (message.updatedAt !== "")
            writer.tag(24, WireType.LengthDelimited).string(message.updatedAt);
        /* string created_at = 25; */
        if (message.createdAt !== "")
            writer.tag(25, WireType.LengthDelimited).string(message.createdAt);
        /* double lat = 26; */
        if (message.lat !== 0)
            writer.tag(26, WireType.Bit64).double(message.lat);
        /* double lon = 27; */
        if (message.lon !== 0)
            writer.tag(27, WireType.Bit64).double(message.lon);
        /* string integration_provider_id = 28; */
        if (message.integrationProviderId !== "")
            writer.tag(28, WireType.LengthDelimited).string(message.integrationProviderId);
        /* string product = 29; */
        if (message.product !== "")
            writer.tag(29, WireType.LengthDelimited).string(message.product);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message FuelModel
 */
export const FuelModel = new FuelModel$Type();
