// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/models/model_driver.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { NoteModel_EntityNote } from "./model_note";
import { CountryCode } from "./country_code";
/**
 * @generated from protobuf message DriverModel
 */
export interface DriverModel {
}
/**
 * @generated from protobuf message DriverModel.Driver
 */
export interface DriverModel_Driver {
    /**
     * @generated from protobuf field: string driver_id = 1;
     */
    driverId: string;
    /**
     * @generated from protobuf field: string friendly_id = 2;
     */
    friendlyId: string;
    /**
     * @generated from protobuf field: string friendly_name = 3;
     */
    friendlyName: string;
    /**
     * @generated from protobuf field: string first_name = 4;
     */
    firstName: string;
    /**
     * @generated from protobuf field: string middle_name = 5;
     */
    middleName: string;
    /**
     * @generated from protobuf field: string last_name = 6;
     */
    lastName: string;
    /**
     * @generated from protobuf field: string email = 7;
     */
    email: string;
    /**
     * @generated from protobuf field: string phone_number = 8;
     */
    phoneNumber: string;
    /**
     * @generated from protobuf field: string address_line_1 = 9;
     */
    addressLine1: string;
    /**
     * @generated from protobuf field: string address_line_2 = 10;
     */
    addressLine2: string;
    /**
     * @generated from protobuf field: string address_city = 11;
     */
    addressCity: string;
    /**
     * @generated from protobuf field: string address_postal_code = 12;
     */
    addressPostalCode: string;
    /**
     * @generated from protobuf field: string address_state = 13;
     */
    addressState: string;
    /**
     * @generated from protobuf field: optional CountryCode address_country = 14;
     */
    addressCountry?: CountryCode;
    /**
     * @generated from protobuf field: string dob_date = 15;
     */
    dobDate: string;
    /**
     * @generated from protobuf field: string sex = 16;
     */
    sex: string;
    /**
     * @generated from protobuf field: string selfie_url = 17;
     */
    selfieUrl: string;
    /**
     * @generated from protobuf field: string selfie_thumb_url = 18;
     */
    selfieThumbUrl: string;
    /**
     * @generated from protobuf field: string note = 19;
     */
    note: string;
    /**
     * @generated from protobuf field: string hire_date = 20;
     */
    hireDate: string;
    /**
     * @generated from protobuf field: string vendor_id = 21;
     */
    vendorId: string;
    /**
     * @generated from protobuf field: string driver_type_id = 22;
     */
    driverTypeId: string;
    /**
     * @generated from protobuf field: string settlement_cycle_id = 23;
     */
    settlementCycleId: string;
    /**
     * @generated from protobuf field: string settlement_revenue_type_id = 24;
     */
    settlementRevenueTypeId: string;
    /**
     * @generated from protobuf field: DriverModel.PayoutReceiver payout_receiver = 25;
     */
    payoutReceiver: DriverModel_PayoutReceiver;
    /**
     * @generated from protobuf field: bool insurance_endorsed = 26;
     */
    insuranceEndorsed: boolean;
    /**
     * @generated from protobuf field: DriverModel.Status status = 27;
     */
    status: DriverModel_Status;
    /**
     * @generated from protobuf field: repeated DriverModel.Driver.User users = 28;
     */
    users: DriverModel_Driver_User[];
    /**
     * @generated from protobuf field: repeated NoteModel.EntityNote notes = 29;
     */
    notes: NoteModel_EntityNote[];
}
/**
 * @generated from protobuf message DriverModel.Driver.User
 */
export interface DriverModel_Driver_User {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    userId: string;
    /**
     * @generated from protobuf field: string assigned_at = 2;
     */
    assignedAt: string;
}
/**
 * @generated from protobuf enum DriverModel.Status
 */
export enum DriverModel_Status {
    /**
     * @generated from protobuf enum value: STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: STATUS_ONBOARDING = 1;
     */
    ONBOARDING = 1,
    /**
     * @generated from protobuf enum value: STATUS_COMPLIANCE_REVIEW = 2;
     */
    COMPLIANCE_REVIEW = 2,
    /**
     * @generated from protobuf enum value: STATUS_ACTIVE = 3;
     */
    ACTIVE = 3,
    /**
     * @generated from protobuf enum value: STATUS_PENDING_TERMINATION = 4;
     */
    PENDING_TERMINATION = 4,
    /**
     * @generated from protobuf enum value: STATUS_TERMINATED = 5;
     */
    TERMINATED = 5,
    /**
     * @generated from protobuf enum value: STATUS_DELETED = 6;
     */
    DELETED = 6
}
/**
 * @generated from protobuf enum DriverModel.PayoutReceiver
 */
export enum DriverModel_PayoutReceiver {
    /**
     * @generated from protobuf enum value: PAYOUT_RECEIVER_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: PAYOUT_RECEIVER_DRIVER = 1;
     */
    DRIVER = 1,
    /**
     * @generated from protobuf enum value: PAYOUT_RECEIVER_VENDOR = 2;
     */
    VENDOR = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class DriverModel$Type extends MessageType<DriverModel> {
    constructor() {
        super("DriverModel", []);
    }
    create(value?: PartialMessage<DriverModel>): DriverModel {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<DriverModel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DriverModel): DriverModel {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DriverModel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message DriverModel
 */
export const DriverModel = new DriverModel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DriverModel_Driver$Type extends MessageType<DriverModel_Driver> {
    constructor() {
        super("DriverModel.Driver", [
            { no: 1, name: "driver_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "friendly_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "friendly_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "first_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "middle_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "last_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "phone_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "address_line_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "address_line_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "address_city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "address_postal_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "address_state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "address_country", kind: "enum", opt: true, T: () => ["CountryCode", CountryCode, "COUNTRY_CODE_"] },
            { no: 15, name: "dob_date", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "sex", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "selfie_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "selfie_thumb_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 20, name: "hire_date", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 21, name: "vendor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 22, name: "driver_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 23, name: "settlement_cycle_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 24, name: "settlement_revenue_type_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "payout_receiver", kind: "enum", T: () => ["DriverModel.PayoutReceiver", DriverModel_PayoutReceiver, "PAYOUT_RECEIVER_"] },
            { no: 26, name: "insurance_endorsed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 27, name: "status", kind: "enum", T: () => ["DriverModel.Status", DriverModel_Status, "STATUS_"] },
            { no: 28, name: "users", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DriverModel_Driver_User },
            { no: 29, name: "notes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => NoteModel_EntityNote }
        ]);
    }
    create(value?: PartialMessage<DriverModel_Driver>): DriverModel_Driver {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.driverId = "";
        message.friendlyId = "";
        message.friendlyName = "";
        message.firstName = "";
        message.middleName = "";
        message.lastName = "";
        message.email = "";
        message.phoneNumber = "";
        message.addressLine1 = "";
        message.addressLine2 = "";
        message.addressCity = "";
        message.addressPostalCode = "";
        message.addressState = "";
        message.dobDate = "";
        message.sex = "";
        message.selfieUrl = "";
        message.selfieThumbUrl = "";
        message.note = "";
        message.hireDate = "";
        message.vendorId = "";
        message.driverTypeId = "";
        message.settlementCycleId = "";
        message.settlementRevenueTypeId = "";
        message.payoutReceiver = 0;
        message.insuranceEndorsed = false;
        message.status = 0;
        message.users = [];
        message.notes = [];
        if (value !== undefined)
            reflectionMergePartial<DriverModel_Driver>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DriverModel_Driver): DriverModel_Driver {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string driver_id */ 1:
                    message.driverId = reader.string();
                    break;
                case /* string friendly_id */ 2:
                    message.friendlyId = reader.string();
                    break;
                case /* string friendly_name */ 3:
                    message.friendlyName = reader.string();
                    break;
                case /* string first_name */ 4:
                    message.firstName = reader.string();
                    break;
                case /* string middle_name */ 5:
                    message.middleName = reader.string();
                    break;
                case /* string last_name */ 6:
                    message.lastName = reader.string();
                    break;
                case /* string email */ 7:
                    message.email = reader.string();
                    break;
                case /* string phone_number */ 8:
                    message.phoneNumber = reader.string();
                    break;
                case /* string address_line_1 */ 9:
                    message.addressLine1 = reader.string();
                    break;
                case /* string address_line_2 */ 10:
                    message.addressLine2 = reader.string();
                    break;
                case /* string address_city */ 11:
                    message.addressCity = reader.string();
                    break;
                case /* string address_postal_code */ 12:
                    message.addressPostalCode = reader.string();
                    break;
                case /* string address_state */ 13:
                    message.addressState = reader.string();
                    break;
                case /* optional CountryCode address_country */ 14:
                    message.addressCountry = reader.int32();
                    break;
                case /* string dob_date */ 15:
                    message.dobDate = reader.string();
                    break;
                case /* string sex */ 16:
                    message.sex = reader.string();
                    break;
                case /* string selfie_url */ 17:
                    message.selfieUrl = reader.string();
                    break;
                case /* string selfie_thumb_url */ 18:
                    message.selfieThumbUrl = reader.string();
                    break;
                case /* string note */ 19:
                    message.note = reader.string();
                    break;
                case /* string hire_date */ 20:
                    message.hireDate = reader.string();
                    break;
                case /* string vendor_id */ 21:
                    message.vendorId = reader.string();
                    break;
                case /* string driver_type_id */ 22:
                    message.driverTypeId = reader.string();
                    break;
                case /* string settlement_cycle_id */ 23:
                    message.settlementCycleId = reader.string();
                    break;
                case /* string settlement_revenue_type_id */ 24:
                    message.settlementRevenueTypeId = reader.string();
                    break;
                case /* DriverModel.PayoutReceiver payout_receiver */ 25:
                    message.payoutReceiver = reader.int32();
                    break;
                case /* bool insurance_endorsed */ 26:
                    message.insuranceEndorsed = reader.bool();
                    break;
                case /* DriverModel.Status status */ 27:
                    message.status = reader.int32();
                    break;
                case /* repeated DriverModel.Driver.User users */ 28:
                    message.users.push(DriverModel_Driver_User.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated NoteModel.EntityNote notes */ 29:
                    message.notes.push(NoteModel_EntityNote.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DriverModel_Driver, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string driver_id = 1; */
        if (message.driverId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.driverId);
        /* string friendly_id = 2; */
        if (message.friendlyId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.friendlyId);
        /* string friendly_name = 3; */
        if (message.friendlyName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.friendlyName);
        /* string first_name = 4; */
        if (message.firstName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.firstName);
        /* string middle_name = 5; */
        if (message.middleName !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.middleName);
        /* string last_name = 6; */
        if (message.lastName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.lastName);
        /* string email = 7; */
        if (message.email !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.email);
        /* string phone_number = 8; */
        if (message.phoneNumber !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.phoneNumber);
        /* string address_line_1 = 9; */
        if (message.addressLine1 !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.addressLine1);
        /* string address_line_2 = 10; */
        if (message.addressLine2 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.addressLine2);
        /* string address_city = 11; */
        if (message.addressCity !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.addressCity);
        /* string address_postal_code = 12; */
        if (message.addressPostalCode !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.addressPostalCode);
        /* string address_state = 13; */
        if (message.addressState !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.addressState);
        /* optional CountryCode address_country = 14; */
        if (message.addressCountry !== undefined)
            writer.tag(14, WireType.Varint).int32(message.addressCountry);
        /* string dob_date = 15; */
        if (message.dobDate !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.dobDate);
        /* string sex = 16; */
        if (message.sex !== "")
            writer.tag(16, WireType.LengthDelimited).string(message.sex);
        /* string selfie_url = 17; */
        if (message.selfieUrl !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.selfieUrl);
        /* string selfie_thumb_url = 18; */
        if (message.selfieThumbUrl !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.selfieThumbUrl);
        /* string note = 19; */
        if (message.note !== "")
            writer.tag(19, WireType.LengthDelimited).string(message.note);
        /* string hire_date = 20; */
        if (message.hireDate !== "")
            writer.tag(20, WireType.LengthDelimited).string(message.hireDate);
        /* string vendor_id = 21; */
        if (message.vendorId !== "")
            writer.tag(21, WireType.LengthDelimited).string(message.vendorId);
        /* string driver_type_id = 22; */
        if (message.driverTypeId !== "")
            writer.tag(22, WireType.LengthDelimited).string(message.driverTypeId);
        /* string settlement_cycle_id = 23; */
        if (message.settlementCycleId !== "")
            writer.tag(23, WireType.LengthDelimited).string(message.settlementCycleId);
        /* string settlement_revenue_type_id = 24; */
        if (message.settlementRevenueTypeId !== "")
            writer.tag(24, WireType.LengthDelimited).string(message.settlementRevenueTypeId);
        /* DriverModel.PayoutReceiver payout_receiver = 25; */
        if (message.payoutReceiver !== 0)
            writer.tag(25, WireType.Varint).int32(message.payoutReceiver);
        /* bool insurance_endorsed = 26; */
        if (message.insuranceEndorsed !== false)
            writer.tag(26, WireType.Varint).bool(message.insuranceEndorsed);
        /* DriverModel.Status status = 27; */
        if (message.status !== 0)
            writer.tag(27, WireType.Varint).int32(message.status);
        /* repeated DriverModel.Driver.User users = 28; */
        for (let i = 0; i < message.users.length; i++)
            DriverModel_Driver_User.internalBinaryWrite(message.users[i], writer.tag(28, WireType.LengthDelimited).fork(), options).join();
        /* repeated NoteModel.EntityNote notes = 29; */
        for (let i = 0; i < message.notes.length; i++)
            NoteModel_EntityNote.internalBinaryWrite(message.notes[i], writer.tag(29, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message DriverModel.Driver
 */
export const DriverModel_Driver = new DriverModel_Driver$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DriverModel_Driver_User$Type extends MessageType<DriverModel_Driver_User> {
    constructor() {
        super("DriverModel.Driver.User", [
            { no: 1, name: "user_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "assigned_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<DriverModel_Driver_User>): DriverModel_Driver_User {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.userId = "";
        message.assignedAt = "";
        if (value !== undefined)
            reflectionMergePartial<DriverModel_Driver_User>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DriverModel_Driver_User): DriverModel_Driver_User {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string user_id */ 1:
                    message.userId = reader.string();
                    break;
                case /* string assigned_at */ 2:
                    message.assignedAt = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DriverModel_Driver_User, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string user_id = 1; */
        if (message.userId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.userId);
        /* string assigned_at = 2; */
        if (message.assignedAt !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.assignedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message DriverModel.Driver.User
 */
export const DriverModel_Driver_User = new DriverModel_Driver_User$Type();
