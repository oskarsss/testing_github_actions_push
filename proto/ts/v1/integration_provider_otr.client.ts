// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/integration_provider_otr.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { IntegrationProviderOTR } from "./integration_provider_otr";
import type { IP_OTR_DocumentTypes_DocumentTypeUpdateReply } from "./integration_provider_otr";
import type { IP_OTR_DocumentTypes_DocumentTypeUpdateRequest } from "./integration_provider_otr";
import type { IP_OTR_DocumentTypesGetReply } from "./integration_provider_otr";
import type { IP_OTR_DocumentTypesGetRequest } from "./integration_provider_otr";
import type { IP_OTR_Invoices_CreateReply } from "./integration_provider_otr";
import type { IP_OTR_Invoices_CreateRequest } from "./integration_provider_otr";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { IP_OTR_Invoices_PreviewReply } from "./integration_provider_otr";
import type { IP_OTR_Invoices_PreviewRequest } from "./integration_provider_otr";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service IntegrationProviderOTR
 */
export interface IIntegrationProviderOTRClient {
    /**
     * @generated from protobuf rpc: IP_OTR_Invoices_Preview(IP_OTR_Invoices_PreviewRequest) returns (IP_OTR_Invoices_PreviewReply);
     */
    iPOTRInvoicesPreview(input: IP_OTR_Invoices_PreviewRequest, options?: RpcOptions): UnaryCall<IP_OTR_Invoices_PreviewRequest, IP_OTR_Invoices_PreviewReply>;
    /**
     * @generated from protobuf rpc: IP_OTR_Invoices_Create(IP_OTR_Invoices_CreateRequest) returns (stream IP_OTR_Invoices_CreateReply);
     */
    iPOTRInvoicesCreate(input: IP_OTR_Invoices_CreateRequest, options?: RpcOptions): ServerStreamingCall<IP_OTR_Invoices_CreateRequest, IP_OTR_Invoices_CreateReply>;
    /**
     * @generated from protobuf rpc: IP_OTR_DocumentTypesGet(IP_OTR_DocumentTypesGetRequest) returns (IP_OTR_DocumentTypesGetReply);
     */
    iPOTRDocumentTypesGet(input: IP_OTR_DocumentTypesGetRequest, options?: RpcOptions): UnaryCall<IP_OTR_DocumentTypesGetRequest, IP_OTR_DocumentTypesGetReply>;
    /**
     * @generated from protobuf rpc: IP_OTR_DocumentTypes_DocumentTypeUpdate(IP_OTR_DocumentTypes_DocumentTypeUpdateRequest) returns (IP_OTR_DocumentTypes_DocumentTypeUpdateReply);
     */
    iPOTRDocumentTypesDocumentTypeUpdate(input: IP_OTR_DocumentTypes_DocumentTypeUpdateRequest, options?: RpcOptions): UnaryCall<IP_OTR_DocumentTypes_DocumentTypeUpdateRequest, IP_OTR_DocumentTypes_DocumentTypeUpdateReply>;
}
/**
 * @generated from protobuf service IntegrationProviderOTR
 */
export class IntegrationProviderOTRClient implements IIntegrationProviderOTRClient, ServiceInfo {
    typeName = IntegrationProviderOTR.typeName;
    methods = IntegrationProviderOTR.methods;
    options = IntegrationProviderOTR.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: IP_OTR_Invoices_Preview(IP_OTR_Invoices_PreviewRequest) returns (IP_OTR_Invoices_PreviewReply);
     */
    iPOTRInvoicesPreview(input: IP_OTR_Invoices_PreviewRequest, options?: RpcOptions): UnaryCall<IP_OTR_Invoices_PreviewRequest, IP_OTR_Invoices_PreviewReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<IP_OTR_Invoices_PreviewRequest, IP_OTR_Invoices_PreviewReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: IP_OTR_Invoices_Create(IP_OTR_Invoices_CreateRequest) returns (stream IP_OTR_Invoices_CreateReply);
     */
    iPOTRInvoicesCreate(input: IP_OTR_Invoices_CreateRequest, options?: RpcOptions): ServerStreamingCall<IP_OTR_Invoices_CreateRequest, IP_OTR_Invoices_CreateReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<IP_OTR_Invoices_CreateRequest, IP_OTR_Invoices_CreateReply>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: IP_OTR_DocumentTypesGet(IP_OTR_DocumentTypesGetRequest) returns (IP_OTR_DocumentTypesGetReply);
     */
    iPOTRDocumentTypesGet(input: IP_OTR_DocumentTypesGetRequest, options?: RpcOptions): UnaryCall<IP_OTR_DocumentTypesGetRequest, IP_OTR_DocumentTypesGetReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<IP_OTR_DocumentTypesGetRequest, IP_OTR_DocumentTypesGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: IP_OTR_DocumentTypes_DocumentTypeUpdate(IP_OTR_DocumentTypes_DocumentTypeUpdateRequest) returns (IP_OTR_DocumentTypes_DocumentTypeUpdateReply);
     */
    iPOTRDocumentTypesDocumentTypeUpdate(input: IP_OTR_DocumentTypes_DocumentTypeUpdateRequest, options?: RpcOptions): UnaryCall<IP_OTR_DocumentTypes_DocumentTypeUpdateRequest, IP_OTR_DocumentTypes_DocumentTypeUpdateReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<IP_OTR_DocumentTypes_DocumentTypeUpdateRequest, IP_OTR_DocumentTypes_DocumentTypeUpdateReply>("unary", this._transport, method, opt, input);
    }
}
