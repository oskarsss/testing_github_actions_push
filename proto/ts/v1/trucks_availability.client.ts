// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/trucks_availability.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TrucksAvailabilityService } from "./trucks_availability";
import type { LinkGetReply } from "./trucks_availability";
import type { LinkGetRequest } from "./trucks_availability";
import type { LinkRevokeReply } from "./trucks_availability";
import type { LinkRevokeRequest } from "./trucks_availability";
import type { LinkCreateReply } from "./trucks_availability";
import type { LinkCreateRequest } from "./trucks_availability";
import type { TruckAvailabilitySetOfflineReply } from "./trucks_availability";
import type { TruckAvailabilitySetOfflineRequest } from "./trucks_availability";
import type { TruckAvailabilitySetOnlineReply } from "./trucks_availability";
import type { TruckAvailabilitySetOnlineRequest } from "./trucks_availability";
import type { UpdateTruckAvailabilityReply } from "./trucks_availability";
import type { UpdateTruckAvailabilityRequest } from "./trucks_availability";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetTrucksAvailabilityReply } from "./trucks_availability";
import type { GetTrucksAvailabilityRequest } from "./trucks_availability";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service TrucksAvailabilityService
 */
export interface ITrucksAvailabilityServiceClient {
    /**
     * @generated from protobuf rpc: GetTrucksAvailability(GetTrucksAvailabilityRequest) returns (GetTrucksAvailabilityReply);
     */
    getTrucksAvailability(input: GetTrucksAvailabilityRequest, options?: RpcOptions): UnaryCall<GetTrucksAvailabilityRequest, GetTrucksAvailabilityReply>;
    /**
     * @generated from protobuf rpc: UpdateTruckAvailability(UpdateTruckAvailabilityRequest) returns (UpdateTruckAvailabilityReply);
     */
    updateTruckAvailability(input: UpdateTruckAvailabilityRequest, options?: RpcOptions): UnaryCall<UpdateTruckAvailabilityRequest, UpdateTruckAvailabilityReply>;
    /**
     * @generated from protobuf rpc: TruckAvailabilitySetOnline(TruckAvailabilitySetOnlineRequest) returns (TruckAvailabilitySetOnlineReply);
     */
    truckAvailabilitySetOnline(input: TruckAvailabilitySetOnlineRequest, options?: RpcOptions): UnaryCall<TruckAvailabilitySetOnlineRequest, TruckAvailabilitySetOnlineReply>;
    /**
     * @generated from protobuf rpc: TruckAvailabilitySetOffline(TruckAvailabilitySetOfflineRequest) returns (TruckAvailabilitySetOfflineReply);
     */
    truckAvailabilitySetOffline(input: TruckAvailabilitySetOfflineRequest, options?: RpcOptions): UnaryCall<TruckAvailabilitySetOfflineRequest, TruckAvailabilitySetOfflineReply>;
    /**
     * @generated from protobuf rpc: LinkCreate(LinkCreateRequest) returns (LinkCreateReply);
     */
    linkCreate(input: LinkCreateRequest, options?: RpcOptions): UnaryCall<LinkCreateRequest, LinkCreateReply>;
    /**
     * @generated from protobuf rpc: LinkRevoke(LinkRevokeRequest) returns (LinkRevokeReply);
     */
    linkRevoke(input: LinkRevokeRequest, options?: RpcOptions): UnaryCall<LinkRevokeRequest, LinkRevokeReply>;
    /**
     * @generated from protobuf rpc: LinkGet(LinkGetRequest) returns (LinkGetReply);
     */
    linkGet(input: LinkGetRequest, options?: RpcOptions): UnaryCall<LinkGetRequest, LinkGetReply>;
}
/**
 * @generated from protobuf service TrucksAvailabilityService
 */
export class TrucksAvailabilityServiceClient implements ITrucksAvailabilityServiceClient, ServiceInfo {
    typeName = TrucksAvailabilityService.typeName;
    methods = TrucksAvailabilityService.methods;
    options = TrucksAvailabilityService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetTrucksAvailability(GetTrucksAvailabilityRequest) returns (GetTrucksAvailabilityReply);
     */
    getTrucksAvailability(input: GetTrucksAvailabilityRequest, options?: RpcOptions): UnaryCall<GetTrucksAvailabilityRequest, GetTrucksAvailabilityReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTrucksAvailabilityRequest, GetTrucksAvailabilityReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateTruckAvailability(UpdateTruckAvailabilityRequest) returns (UpdateTruckAvailabilityReply);
     */
    updateTruckAvailability(input: UpdateTruckAvailabilityRequest, options?: RpcOptions): UnaryCall<UpdateTruckAvailabilityRequest, UpdateTruckAvailabilityReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateTruckAvailabilityRequest, UpdateTruckAvailabilityReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckAvailabilitySetOnline(TruckAvailabilitySetOnlineRequest) returns (TruckAvailabilitySetOnlineReply);
     */
    truckAvailabilitySetOnline(input: TruckAvailabilitySetOnlineRequest, options?: RpcOptions): UnaryCall<TruckAvailabilitySetOnlineRequest, TruckAvailabilitySetOnlineReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckAvailabilitySetOnlineRequest, TruckAvailabilitySetOnlineReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TruckAvailabilitySetOffline(TruckAvailabilitySetOfflineRequest) returns (TruckAvailabilitySetOfflineReply);
     */
    truckAvailabilitySetOffline(input: TruckAvailabilitySetOfflineRequest, options?: RpcOptions): UnaryCall<TruckAvailabilitySetOfflineRequest, TruckAvailabilitySetOfflineReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<TruckAvailabilitySetOfflineRequest, TruckAvailabilitySetOfflineReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LinkCreate(LinkCreateRequest) returns (LinkCreateReply);
     */
    linkCreate(input: LinkCreateRequest, options?: RpcOptions): UnaryCall<LinkCreateRequest, LinkCreateReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<LinkCreateRequest, LinkCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LinkRevoke(LinkRevokeRequest) returns (LinkRevokeReply);
     */
    linkRevoke(input: LinkRevokeRequest, options?: RpcOptions): UnaryCall<LinkRevokeRequest, LinkRevokeReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<LinkRevokeRequest, LinkRevokeReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LinkGet(LinkGetRequest) returns (LinkGetReply);
     */
    linkGet(input: LinkGetRequest, options?: RpcOptions): UnaryCall<LinkGetRequest, LinkGetReply> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<LinkGetRequest, LinkGetReply>("unary", this._transport, method, opt, input);
    }
}
