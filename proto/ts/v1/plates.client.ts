// @generated by protobuf-ts 2.9.4 with parameter long_type_number,generate_dependencies,ts_nocheck,output_typescript
// @generated from protobuf file "v1/plates.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PlatesService } from "./plates";
import type { PlateStatusUpdateReply } from "./plates";
import type { PlateStatusUpdateRequest } from "./plates";
import type { PlateDeleteReply } from "./plates";
import type { PlateDeleteRequest } from "./plates";
import type { PlateUpdateReply } from "./plates";
import type { PlateUpdateRequest } from "./plates";
import type { PlateRetrieveReply } from "./plates";
import type { PlateRetrieveRequest } from "./plates";
import type { PlateCreateReply } from "./plates";
import type { PlateCreateRequest } from "./plates";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PlateGetReply } from "./plates";
import type { PlateGetRequest } from "./plates";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service PlatesService
 */
export interface IPlatesServiceClient {
    /**
     * @generated from protobuf rpc: PlateGet(PlateGetRequest) returns (PlateGetReply);
     */
    plateGet(input: PlateGetRequest, options?: RpcOptions): UnaryCall<PlateGetRequest, PlateGetReply>;
    /**
     * @generated from protobuf rpc: PlateCreate(PlateCreateRequest) returns (PlateCreateReply);
     */
    plateCreate(input: PlateCreateRequest, options?: RpcOptions): UnaryCall<PlateCreateRequest, PlateCreateReply>;
    /**
     * @generated from protobuf rpc: PlateRetrieve(PlateRetrieveRequest) returns (PlateRetrieveReply);
     */
    plateRetrieve(input: PlateRetrieveRequest, options?: RpcOptions): UnaryCall<PlateRetrieveRequest, PlateRetrieveReply>;
    /**
     * @generated from protobuf rpc: PlateUpdate(PlateUpdateRequest) returns (PlateUpdateReply);
     */
    plateUpdate(input: PlateUpdateRequest, options?: RpcOptions): UnaryCall<PlateUpdateRequest, PlateUpdateReply>;
    /**
     * @generated from protobuf rpc: PlateDelete(PlateDeleteRequest) returns (PlateDeleteReply);
     */
    plateDelete(input: PlateDeleteRequest, options?: RpcOptions): UnaryCall<PlateDeleteRequest, PlateDeleteReply>;
    /**
     * @generated from protobuf rpc: PlateStatusUpdate(PlateStatusUpdateRequest) returns (PlateStatusUpdateReply);
     */
    plateStatusUpdate(input: PlateStatusUpdateRequest, options?: RpcOptions): UnaryCall<PlateStatusUpdateRequest, PlateStatusUpdateReply>;
}
/**
 * @generated from protobuf service PlatesService
 */
export class PlatesServiceClient implements IPlatesServiceClient, ServiceInfo {
    typeName = PlatesService.typeName;
    methods = PlatesService.methods;
    options = PlatesService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: PlateGet(PlateGetRequest) returns (PlateGetReply);
     */
    plateGet(input: PlateGetRequest, options?: RpcOptions): UnaryCall<PlateGetRequest, PlateGetReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PlateGetRequest, PlateGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: PlateCreate(PlateCreateRequest) returns (PlateCreateReply);
     */
    plateCreate(input: PlateCreateRequest, options?: RpcOptions): UnaryCall<PlateCreateRequest, PlateCreateReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<PlateCreateRequest, PlateCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: PlateRetrieve(PlateRetrieveRequest) returns (PlateRetrieveReply);
     */
    plateRetrieve(input: PlateRetrieveRequest, options?: RpcOptions): UnaryCall<PlateRetrieveRequest, PlateRetrieveReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<PlateRetrieveRequest, PlateRetrieveReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: PlateUpdate(PlateUpdateRequest) returns (PlateUpdateReply);
     */
    plateUpdate(input: PlateUpdateRequest, options?: RpcOptions): UnaryCall<PlateUpdateRequest, PlateUpdateReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<PlateUpdateRequest, PlateUpdateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: PlateDelete(PlateDeleteRequest) returns (PlateDeleteReply);
     */
    plateDelete(input: PlateDeleteRequest, options?: RpcOptions): UnaryCall<PlateDeleteRequest, PlateDeleteReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<PlateDeleteRequest, PlateDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: PlateStatusUpdate(PlateStatusUpdateRequest) returns (PlateStatusUpdateReply);
     */
    plateStatusUpdate(input: PlateStatusUpdateRequest, options?: RpcOptions): UnaryCall<PlateStatusUpdateRequest, PlateStatusUpdateReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<PlateStatusUpdateRequest, PlateStatusUpdateReply>("unary", this._transport, method, opt, input);
    }
}
